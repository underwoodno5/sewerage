/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).tf=e.tf||{})}(this,(function(e){"use strict";class t{refCount(e){return n("refCount")}incRef(e){return n("incRef")}timerAvailable(){return!0}time(e){return n("time")}read(e){return n("read")}readSync(e){return n("readSync")}numDataIds(){return n("numDataIds")}disposeData(e,t){return n("disposeData")}write(e,t,r){return n("write")}move(e,t,r,s,o){return n("move")}memory(){return n("memory")}floatPrecision(){return n("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return n("dispose")}}function n(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function a(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function i(e,t,n=""){a(h(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function l(e){a(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function u(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||k(e)&&!n)for(let r=0;r<e.length;++r)u(e[r],t,n);else t.push(e);return t}function c(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function h(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e){return e%1==0}function p(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function f(e,t){const n=t.length;return a((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),a(e.every(e=>d(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function g(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||s?null:f(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=o){if(o[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==o[a]||o[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),o[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function m(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function b(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function y(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function w(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function k(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function v(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function x(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function E(e){return"string"==typeof e||e instanceof String}function S(e){return"boolean"==typeof e}function A(e){return"number"==typeof e}function _(e){return Array.isArray(e)?_(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":A(e)?"float32":E(e)?"string":S(e)?"bool":"float32"}function N(e){return!!(e&&e.constructor&&e.call&&e.apply)}function M(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function I(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,r,s=!1){const o=new Array;if(1===n.length){const e=n[0]*(s?2:1);for(let n=0;n<e;n++)o[n]=r[t+n]}else{const a=n[0],i=n.slice(1),l=i.reduce((e,t)=>e*t)*(s?2:1);for(let n=0;n<a;n++)o[n]=e(t+n*l,i,r,s)}return o}(0,e,t,n)}function T(e,t){const n=D(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function D(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function R(e){e.forEach(t=>{a(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function F(e){return e&&e.then&&"function"==typeof e.then}class C{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=B,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(F(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function B(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function P(){return e.ENV}let O;function L(){if(null==O){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}O=e}return O}function z(e,t){const n=function(){const e=L();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}e.ENV=null;const q=z("kernelRegistry",()=>new Map),K=z("gradRegistry",()=>new Map);function W(e,t){const n=H(e,t);return q.get(n)}function U(e){return K.get(e)}function G(e){const t=q.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===e&&n.push(a)}return n}function V(e){const{kernelName:t,backendName:n}=e,r=H(t,n);q.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),q.set(r,e)}function H(e,t){return`${t}_${e}`}var j=Z,J=null;try{J=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Z(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function Y(e){return!0===(e&&e.__isLong__)}Z.prototype.__isLong__,Object.defineProperty(Z.prototype,"__isLong__",{value:!0}),Z.isLong=Y;var X={},Q={};function ee(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=Q[e])?r:(n=ne(e,(0|e)<0?-1:0,!0),s&&(Q[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=X[e])?r:(n=ne(e,e<0?-1:0,!1),s&&(X[e]=n),n)}function te(e,t){if(isNaN(e))return t?he:ce;if(t){if(e<0)return he;if(e>=ie)return me}else{if(e<=-le)return be;if(e+1>=le)return ge}return e<0?te(-e,t).neg():ne(e%ae|0,e/ae|0,t)}function ne(e,t,n){return new Z(e,t,n)}Z.fromInt=ee,Z.fromNumber=te,Z.fromBits=ne;var re=Math.pow;function se(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return ce;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return se(e.substring(1),t,n).neg();for(var s=te(re(n,8)),o=ce,a=0;a<e.length;a+=8){var i=Math.min(8,e.length-a),l=parseInt(e.substring(a,a+i),n);if(i<8){var u=te(re(n,i));o=o.mul(u).add(te(l))}else o=(o=o.mul(s)).add(te(l))}return o.unsigned=t,o}function oe(e,t){return"number"==typeof e?te(e,t):"string"==typeof e?se(e,t):ne(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}Z.fromString=se,Z.fromValue=oe;var ae=4294967296,ie=ae*ae,le=ie/2,ue=ee(1<<24),ce=ee(0);Z.ZERO=ce;var he=ee(0,!0);Z.UZERO=he;var de=ee(1);Z.ONE=de;var pe=ee(1,!0);Z.UONE=pe;var fe=ee(-1);Z.NEG_ONE=fe;var ge=ne(-1,2147483647,!1);Z.MAX_VALUE=ge;var me=ne(-1,-1,!0);Z.MAX_UNSIGNED_VALUE=me;var be=ne(0,-2147483648,!1);Z.MIN_VALUE=be;var ye=Z.prototype;ye.toInt=function(){return this.unsigned?this.low>>>0:this.low},ye.toNumber=function(){return this.unsigned?(this.high>>>0)*ae+(this.low>>>0):this.high*ae+(this.low>>>0)},ye.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(be)){var t=te(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=te(re(e,6),this.unsigned),o=this,a="";;){var i=o.div(s),l=(o.sub(i.mul(s)).toInt()>>>0).toString(e);if((o=i).isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}},ye.getHighBits=function(){return this.high},ye.getHighBitsUnsigned=function(){return this.high>>>0},ye.getLowBits=function(){return this.low},ye.getLowBitsUnsigned=function(){return this.low>>>0},ye.getNumBitsAbs=function(){if(this.isNegative())return this.eq(be)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},ye.isZero=function(){return 0===this.high&&0===this.low},ye.eqz=ye.isZero,ye.isNegative=function(){return!this.unsigned&&this.high<0},ye.isPositive=function(){return this.unsigned||this.high>=0},ye.isOdd=function(){return 1==(1&this.low)},ye.isEven=function(){return 0==(1&this.low)},ye.equals=function(e){return Y(e)||(e=oe(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},ye.eq=ye.equals,ye.notEquals=function(e){return!this.eq(e)},ye.neq=ye.notEquals,ye.ne=ye.notEquals,ye.lessThan=function(e){return this.comp(e)<0},ye.lt=ye.lessThan,ye.lessThanOrEqual=function(e){return this.comp(e)<=0},ye.lte=ye.lessThanOrEqual,ye.le=ye.lessThanOrEqual,ye.greaterThan=function(e){return this.comp(e)>0},ye.gt=ye.greaterThan,ye.greaterThanOrEqual=function(e){return this.comp(e)>=0},ye.gte=ye.greaterThanOrEqual,ye.ge=ye.greaterThanOrEqual,ye.compare=function(e){if(Y(e)||(e=oe(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},ye.comp=ye.compare,ye.negate=function(){return!this.unsigned&&this.eq(be)?be:this.not().add(de)},ye.neg=ye.negate,ye.add=function(e){Y(e)||(e=oe(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=s+(65535&e.low))>>>16,u+=(c+=r+i)>>>16,l+=(u+=n+a)>>>16,l+=t+o,ne((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},ye.subtract=function(e){return Y(e)||(e=oe(e)),this.add(e.neg())},ye.sub=ye.subtract,ye.multiply=function(e){if(this.isZero())return ce;if(Y(e)||(e=oe(e)),J)return ne(J.mul(this.low,this.high,e.low,e.high),J.get_high(),this.unsigned);if(e.isZero())return ce;if(this.eq(be))return e.isOdd()?be:ce;if(e.eq(be))return this.isOdd()?be:ce;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ue)&&e.lt(ue))return te(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,d=0;return h+=(d+=s*l)>>>16,c+=(h+=r*l)>>>16,h&=65535,c+=(h+=s*i)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=r*i)>>>16,c&=65535,u+=(c+=s*a)>>>16,u+=t*l+n*i+r*a+s*o,ne((h&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},ye.mul=ye.multiply,ye.divide=function(e){if(Y(e)||(e=oe(e)),e.isZero())throw Error("division by zero");var t,n,r;if(J)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?ne((this.unsigned?J.div_u:J.div_s)(this.low,this.high,e.low,e.high),J.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?he:ce;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return he;if(e.gt(this.shru(1)))return pe;r=he}else{if(this.eq(be))return e.eq(de)||e.eq(fe)?be:e.eq(be)?de:(t=this.shr(1).div(e).shl(1)).eq(ce)?e.isNegative()?de:fe:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(be))return this.unsigned?he:ce;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=ce}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),o=s<=48?1:re(2,s-48),a=te(t),i=a.mul(e);i.isNegative()||i.gt(n);)i=(a=te(t-=o,this.unsigned)).mul(e);a.isZero()&&(a=de),r=r.add(a),n=n.sub(i)}return r},ye.div=ye.divide,ye.modulo=function(e){return Y(e)||(e=oe(e)),J?ne((this.unsigned?J.rem_u:J.rem_s)(this.low,this.high,e.low,e.high),J.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},ye.mod=ye.modulo,ye.rem=ye.modulo,ye.not=function(){return ne(~this.low,~this.high,this.unsigned)},ye.and=function(e){return Y(e)||(e=oe(e)),ne(this.low&e.low,this.high&e.high,this.unsigned)},ye.or=function(e){return Y(e)||(e=oe(e)),ne(this.low|e.low,this.high|e.high,this.unsigned)},ye.xor=function(e){return Y(e)||(e=oe(e)),ne(this.low^e.low,this.high^e.high,this.unsigned)},ye.shiftLeft=function(e){return Y(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?ne(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):ne(0,this.low<<e-32,this.unsigned)},ye.shl=ye.shiftLeft,ye.shiftRight=function(e){return Y(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?ne(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):ne(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},ye.shr=ye.shiftRight,ye.shiftRightUnsigned=function(e){if(Y(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?ne(this.low>>>e|t<<32-e,t>>>e,this.unsigned):ne(32===e?t:t>>>e-32,0,this.unsigned)},ye.shru=ye.shiftRightUnsigned,ye.shr_u=ye.shiftRightUnsigned,ye.toSigned=function(){return this.unsigned?ne(this.low,this.high,!1):this},ye.toUnsigned=function(){return this.unsigned?this:ne(this.low,this.high,!0)},ye.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},ye.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},ye.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},Z.fromBytes=function(e,t,n){return n?Z.fromBytesLE(e,t):Z.fromBytesBE(e,t)},Z.fromBytesLE=function(e,t){return new Z(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Z.fromBytesBE=function(e,t){return new Z(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const we=j||Object.freeze({__proto__:null,default:j,__moduleExports:j});function ke(e){return we.fromString(e,!0,16)}const ve=ke("c3a5c85c97cb3127"),xe=ke("b492b66fbe98f273"),Ee=ke("9ae16a3b2f90404f");function Se(e){return e.xor(e.shru(47))}function Ae(e,t,n){const r=e.slice(t,t+n);return we.fromBytes(Array.from(r),!0,!0)}function _e(e,t){return Ae(e,t,8)}function Ne(e,t){return Ae(e,t,4)}function Me(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ie(e,t,n=ke("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function $e(e,t,n,r){return function(e,t,n,r,s,o){s=s.add(e),o=Me(o.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),o=o.add(Me(s,44)),[s.add(r),o.add(a)]}(_e(e,t),_e(e,t+8),_e(e,t+16),_e(e,t+24),n,r)}function Te(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=u(e)),P().getBool("DEBUG")&&y(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function De(){return P().platform.now()}function Re(e,t="utf-8"){return t=t||"utf-8",P().platform.encode(e,t)}function Fe(e,t="utf-8"){return t=t||"utf-8",P().platform.decode(e,t)}var Ce=Object.freeze({__proto__:null,createScalarValue:function(e,t){return"string"===t?Re(e):Te([e],t)},toTypedArray:Te,now:De,fetch:function(e,t){return P().platform.fetch(e,t)},encodeString:Re,decodeString:Fe,shuffle:r,shuffleCombo:function(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)},clamp:s,nearestLargerEven:function(e){return e%2==0?e:e+1},swap:o,sum:function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t},randUniform:function(e,t){const n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n},assert:a,assertShapesMatch:i,assertNonNull:l,flatten:u,sizeFromShape:c,isScalarShape:function(e){return 0===e.length},arraysEqual:h,isInt:d,tanh:function(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}},sizeToSquarishShape:function(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]},createShuffledIndices:function(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t},rightPad:p,repeatedTry:function(e,t=(e=>0),n){return new Promise((r,s)=>{let o=0;const a=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?s():setTimeout(a,i)};a()})},inferFromImplicitShape:function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s},parseAxisParam:f,squeezeShape:g,getTypedArrayFromDType:m,getArrayFromDType:b,checkConversionForErrors:y,isValidDtype:w,hasEncodingLoss:function(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))},isTypedArray:k,bytesPerElement:v,bytesFromStringArray:x,isString:E,isBoolean:S,isNumber:A,inferDtype:_,isFunction:N,nearestDivisor:M,computeStrides:I,toNestedArray:$,makeOnesTypedArray:T,makeZerosTypedArray:D,makeZerosNestedTypedArray:function(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return $(e,new Float32Array(n));if("int32"===t)return $(e,new Int32Array(n));if("bool"===t)return $(e,new Uint8Array(n));throw new Error("Unknown data type "+t)},assertNonNegativeIntegerDimensions:R,locToIndex:function(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r},indexToLoc:function(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r},isPromise:F,hexToLong:ke,fingerPrint64:function(e,t=e.length){const n=we.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Ee.add(2*t),r=_e(e,0).add(Ee),s=_e(e,t-8);return Ie(Me(s,37).mul(n).add(r),Me(r,25).add(s).mul(n),n)}if(t>=4){const n=Ee.add(2*t);return Ie(Ne(e,0).shl(3).add(t),Ne(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Se(Ee.mul(n).xor(ve.mul(r))).mul(Ee)}return Ee}(e,t):function(e,t=e.length){const n=Ee.add(2*t),r=_e(e,0).mul(xe),s=_e(e,8),o=_e(e,t-8).mul(n),a=_e(e,t-16).mul(Ee);return Ie(Me(r.add(s),43).add(Me(o,30)).add(a),r.add(Me(s.add(Ee),18)).add(o),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Ee.add(2*t),r=_e(e,0).mul(Ee),s=_e(e,8),o=_e(e,t-8).mul(n),a=_e(e,t-16).mul(Ee),i=Me(r.add(s),43).add(Me(o,30)).add(a),l=Ie(i,r.add(Me(s.add(Ee),18)).add(o),n),u=_e(e,16).mul(n),c=_e(e,24),h=i.add(_e(e,t-32)).mul(n),d=l.add(_e(e,t-24)).mul(n);return Ie(Me(u.add(c),43).add(Me(h,30)).add(d),u.add(Me(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(xe).add(113),o=Se(s.mul(Ee).add(113)).mul(Ee),a=[we.UZERO,we.UZERO],i=[we.UZERO,we.UZERO];r=r.mul(Ee).add(_e(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Me(r.add(s).add(a[0]).add(_e(e,l+8)),37).mul(xe),s=Me(s.add(a[1]).add(_e(e,l+48)),42).mul(xe),r=r.xor(i[1]),s=s.add(a[0]).add(_e(e,l+40)),o=Me(o.add(i[0]),33).mul(xe),a=$e(e,l,a[1].mul(xe),r.add(i[0])),i=$e(e,l+32,o.add(i[1]),s.add(_e(e,l+16))),[o,r]=[r,o],l+=64}while(l!==u);const h=xe.add(o.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Me(r.add(s).add(a[0]).add(_e(e,l+8)),37).mul(h),s=Me(s.add(a[1]).add(_e(e,l+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(_e(e,l+40))),o=Me(o.add(i[0]),33).mul(h),a=$e(e,l,a[1].mul(h),r.add(i[0])),i=$e(e,l+32,o.add(i[1]),s.add(_e(e,l+16))),[o,r]=[r,o],Ie(Ie(a[0],i[0],h).add(Se(s).mul(ve)).add(o),Ie(a[1],i[1],h).add(r),h)}});class Be{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Oe)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const a=De();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:De()-a})}if(P().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{Pe(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:o}=e;n.forEach(e=>{Promise.all([e.data(),r,o]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function Pe(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Oe{logKernelProfile(e,t,n,r,s,o){const a="number"==typeof r?p(r+"ms",9):r.error,i=p(e,25),l=t.rank,u=t.size,c=p(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Le(e,t,n,r){const s=I(t),o=function(e,t,n,r){const s=c(t),o=r[r.length-1],a=new Array(o).fill(0),i=t.length,l="complex64"===n?Ke(e):e;if(i>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)a[e]=Math.max(a[e],ze(l[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,i=function e(t,n,r,s,o,a=!0){const i="complex64"===r?2:1,l=n[0],u=n.length;if(0===u){if("complex64"===r){return[ze(Ke(t)[0],0,r)]}return"bool"===r?[qe(t[0])]:[t[0].toString()]}if(1===u){if(l>20){const e=3*i;let n=Array.from(t.slice(0,e)),s=Array.from(t.slice((l-3)*i,l*i));return"complex64"===r&&(n=Ke(n),s=Ke(s)),["["+n.map((e,t)=>ze(e,o[t],r)).join(", ")+", ..., "+s.map((e,t)=>ze(e,o[l-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?Ke(t):Array.from(t)).map((e,t)=>ze(e,o[t],r)).join(", ")+"]"]}const c=n.slice(1),h=s.slice(1),d=s[0]*i,p=[];if(l>20){for(let n=0;n<3;n++){const s=n*d,a=s+d;p.push(...e(t.slice(s,a),c,r,h,o,!1))}p.push("...");for(let n=l-3;n<l;n++){const s=n*d,a=s+d;p.push(...e(t.slice(s,a),c,r,h,o,n===l-1))}}else for(let n=0;n<l;n++){const s=n*d,a=s+d;p.push(...e(t.slice(s,a),c,r,h,o,n===l-1))}const f=2===u?",":"";p[0]="["+p[0]+f;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+f;let g=",\n";for(let e=2;e<u;e++)g+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":g),p}(e,t,n,s,o),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+a),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(e=>"    "+e).join("\n")),l.join("\n")}function ze(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":E(e)?`'${e}'`:"bool"===n?qe(e):parseFloat(e.toFixed(7)).toString(),p(r,t)}function qe(e){return 0===e?"false":"true"}function Ke(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class We{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=c(e),null!=n){const e=n.length;a(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||b(t,this.size),this.strides=I(e)}set(e,...t){0===t.length&&(t=[0]),a(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ue().makeTensor(this.values,this.shape,this.dtype)}}let Ue=null,Ge=null;class Ve{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=c(e),this.strides=I(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ge.buffer(this.shape,this.dtype,e)}bufferSync(){return Ge.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return $(this.shape,e,"complex64"===this.dtype)}arraySync(){return $(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ue().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Fe(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Ue().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Fe(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ue().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ue().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ge.print(this,e)}clone(){return this.throwIfDisposed(),Ge.clone(this)}toString(e=!1){return Le(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ge.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ue().makeVariable(this,e,t,n)}}Object.defineProperty(Ve,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),z("Tensor",()=>Ve);class He extends Ve{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!h(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ue().disposeTensor(this),this.dataId=e.dataId,Ue().incRef(this,null)}dispose(){Ue().disposeVariable(this),this.isDisposedInternal=!0}}var je,Je,Ze,Ye,Xe;Object.defineProperty(He,Symbol.hasInstance,{value:e=>e instanceof Ve&&null!=e.assign&&e.assign instanceof Function}),(je=e.Rank||(e.Rank={})).R0="R0",je.R1="R1",je.R2="R2",je.R3="R3",je.R4="R4",je.R5="R5",je.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Je||(Je={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ze||(Ze={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ye||(Ye={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Xe||(Xe={}));const Qe={float32:Ye,int32:Je,bool:Ze,complex64:Xe};function et(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Qe[e][t]}function tt(e,t){if(e.dtype===t.dtype)return[e,t];const n=et(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function nt(e,t){a(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function rt(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof Ve)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const o=t;for(const t in o){const s=o[t];r.has(s)||(r.add(s),e(s,n,r))}}(e,t,new Set),t}var st=Object.freeze({__proto__:null,makeTypesMatch:tt,assertTypesMatch:nt,isTensorInList:function(e,t){return t.some(t=>t.id===e.id)},getTensorsInContainer:rt});function ot(e){return null!=e.kernelName}class at{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class it{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new at}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Be(this.backendInstance),!0}setupRegisteredKernels(){G(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){G(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(!r||r instanceof t||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=r.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return it.nextTensorId++}nextVariableId(){return it.nextVariableId++}clone(e){const t=ut.runKernel("Identity",{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ut.runKernel("Cast",t,n)}}),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=W(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,o=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ot(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ot(e)){const{kernelName:t,inputs:s,attrs:o}=e;null==this.backendName&&this.backend;const u=W(t,this.backendName);a(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:o,backend:this.backend});const a=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const i=a.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,s,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy(()=>t(this.backend,s));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:h}=e,d=ot(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()}),r&&this.addTapeNode(u,c,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(e=>null!=c[e]?c[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=U(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let o;r.saveAllInputs?(a(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(e=>t[e])):o=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return o.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&E(e[0])&&(s=e.map(e=>Re(e)));const o=r.write(s,t,n),a=new Ve(t,n,o,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(o),t=x(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s=new Ve(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new He(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*v(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof He||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*v(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=U(e);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=D(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=rt(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(a(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));a(s instanceof Ve,()=>"The result y returned by f() must be a tensor.");const o=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const o=e[n],a=o.inputs;for(const e in a){const n=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){o.outputs.forEach(e=>r[e.id]=!0),i=!0,s[o.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(o[n.outputs[e].id]){for(const e in r)o[r[e].id]=!0,a[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=T(c(e),"float32");return ut.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const o=t[s],a=[];if(o.outputs.forEach(t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n(()=>i[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=o.inputs[t];if(!h(s.shape,a.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}(e,o,e=>this.tidy(e),ct);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return a(N(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;a(t.every(e=>e instanceof Ve),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),a(n.value instanceof Ve,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),a(N(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),o=Array.isArray(s)?s:[s];a(o.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),a(o.every(e=>e instanceof Ve),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return o.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=De(),n=await this.backend.time(e);return n.wallMs=De()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new at;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function lt(){const t=L();if(null==t._tfengine){const e=new C(t);t._tfengine=new it(e)}var n;return n=t._tfengine.ENV,e.ENV=n,Ue=()=>t._tfengine,t._tfengine}it.nextTensorId=0,it.nextVariableId=0;const ut=lt();function ct(e,t){const n={a:e,b:t};return ut.runKernel("Add",n)}function ht(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var dt=Object.freeze({__proto__:null,isMobile:function(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1},isBrowser:ht});const pt=P();function ft(e,t){let n=e;if(k(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||k(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!k(t))return void a(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);a(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),a(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const s=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],s,r.concat(n))}(e,r,[]),r}function gt(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function mt(e,t,n,r="numeric"){if(e instanceof Ve)return gt(r,e.dtype,t,n),e;let s=_(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),gt(r,s,t,n),null==e||!k(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const o=ft(e,s);k(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?Te(e,s):u(e,[],!0);return ut.makeTensor(a,o,s)}function bt(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>mt(e,`${t}[${s}]`,n,r))}pt.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),pt.registerFlag("IS_BROWSER",()=>ht()),pt.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),pt.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),pt.registerFlag("PROD",()=>!1),pt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>pt.getBool("DEBUG")),pt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),pt.registerFlag("IS_TEST",()=>!1),pt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),pt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function yt(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ut.startScope(n);try{const t=r(...e);return F(t)&&console.error("Cannot return a Promise inside of tidy."),ut.endScope(t),t}catch(e){throw ut.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const wt=yt({complex_:function(e,t){const n=mt(e,"real","complex"),r=mt(t,"imag","complex");i(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ut.runKernel("Complex",s)}});function kt(e,t,n,r){if(null==r&&(r=_(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!k(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){R(t);const e=c(t),r=c(n);a(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==c(t.slice(e));a(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return k(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Te(e,r):u(e,[],!0),ut.makeTensor(e,t,r)}function vt(e,t,n){return kt(e,t,ft(e,n),n)}const xt={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function Et(e,t){const n={};let r,s=0;for(const o of t){const t=o.name,a=o.dtype,i=o.shape,l=c(i);let u;if("quantization"in o){const n=o.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${o.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${o.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const i=xt[n.dtype],c=e.slice(s,s+l*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Dt()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*i}else if("string"===a){const t=c(o.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=xt[a],o=e.slice(s,s+l*r);if("float32"===a)u=new Float32Array(o);else if("int32"===a)u=new Int32Array(o);else if("bool"===a)u=new Uint8Array(o);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{u=new Float32Array(o);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=vt(e,i,"float32"),a=vt(r,i,"float32");n[t]=wt(s,a),s.dispose(),a.dispose()}}s+=l*r}"complex64"!==a&&(n[t]=vt(u,i,a))}return n}function St(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const At="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function _t(e){return At?Buffer.byteLength(e):new Blob([e]).size}function Nt(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Mt(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function It(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function $t(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Tt(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:_t(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:_t(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Dt(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],i=e[n[a>>10]+(1023&a)]+t[a>>10];o[s]=i}return new Float32Array(s)}}class Rt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Rt.instance&&(Rt.instance=new Rt),Rt.instance}static registerSaveRouter(e){Rt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Rt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Rt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Rt.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Rt.getInstance().loadRouters:Rt.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}function Ft(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ct(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Bt{constructor(e){if(this.indexedDB=Ft(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ct(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Tt(t),o=s.transaction("model_info_store","readwrite");let a=o.objectStore("model_info_store");const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;i.onsuccess=()=>{l=s.transaction("models_store","readwrite");const i=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=o.objectStore("model_info_store");const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}Bt.URL_SCHEME="indexeddb://";const Pt=e=>{return P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bt.URL_SCHEME)?(t=e.slice(Bt.URL_SCHEME.length),new Bt(t)):null;var t};Rt.registerSaveRouter(Pt),Rt.registerLoadRouter(Pt);class Ot{constructor(){this.indexedDB=Ft()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Ct(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),o=s.objectStore("model_info_store").getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Bt.URL_SCHEME)?t.slice(Bt.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ct(r),r.onsuccess=()=>{const s=r.result,o=s.transaction("model_info_store","readwrite"),a=o.objectStore("model_info_store"),i=a.get(e);let l;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),o=()=>{l=s.transaction("models_store","readwrite");const r=l.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Lt="tensorflowjs_models",zt="info",qt="model_topology",Kt="weight_specs",Wt="weight_data",Ut="model_metadata";function Gt(e){return{info:[Lt,e,zt].join("/"),topology:[Lt,e,qt].join("/"),weightSpecs:[Lt,e,Kt].join("/"),weightData:[Lt,e,Wt].join("/"),modelMetadata:[Lt,e,Ut].join("/")}}function Vt(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Ht(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class jt{constructor(e){if(!P().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Gt(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Tt(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(At)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw Vt(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(At){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(o),t}}jt.URL_SCHEME="localstorage://";const Jt=e=>{return P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(jt.URL_SCHEME)?(t=e.slice(jt.URL_SCHEME.length),new jt(t)):null;var t};Rt.registerSaveRouter(Jt),Rt.registerLoadRouter(Jt);class Zt{constructor(){a(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),a("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Lt+"/",n="/"+zt;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[Ht(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Gt(e=(t=e).startsWith(jt.URL_SCHEME)?t.slice(jt.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Vt(n),r}}class Yt{constructor(){this.managers={}}static getInstance(){return null==Yt.instance&&(Yt.instance=new Yt),Yt.instance}static registerManager(e,t){a(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),a(e.length>0,()=>"scheme must not be an empty string.");const n=Yt.getInstance();a(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Xt(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Yt.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function Qt(e,t,n=!1){a(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Rt.getLoadHandlers(e);a(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),a(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],o=Rt.getSaveHandlers(t);a(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),a(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=o[0],l=Xt(e).scheme,u=Xt(e).path,c=l===Xt(e).scheme,h=await s.load();n&&c&&await Yt.getManager(l).removeModel(u);const d=await i.save(h);return n&&!c&&await Yt.getManager(l).removeModel(u),d.modelArtifactsInfo}class en{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(P().get("IS_BROWSER")){P().setPlatform("browser",new en);try{Yt.registerManager(jt.URL_SCHEME,new Zt)}catch(e){}try{Yt.registerManager(Bt.URL_SCHEME,new Ot)}catch(e){}}const tn=()=>require("node-fetch");let nn;class rn{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=P().global.fetch?P().global.fetch(e,t):(null==nn&&(nn=tn()),nn(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function sn(e,t="float32",n){return t=t||"float32",R(e),new We(e,t,n)}P().get("IS_NODE")&&P().setPlatform("node",new rn);const on=yt({cast_:function(e,t){const n=mt(e,"x","cast");if(!w(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ut.runKernel("Cast",r,s)}});const an=yt({clone_:function(e){const t={x:mt(e,"x","clone","string_or_numeric")};return ut.runKernel("Identity",t)}});function ln(e,t=!1){console.log(e.toString(t))}lt();Ge={buffer:sn,cast:on,clone:an,print:ln};function un(e){return new Promise(e=>setTimeout(e)).then(e)}class cn{constructor(e){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(cn.URL_SCHEME)&&(e=e.slice(cn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=It(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await un(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await un(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Tt(e)}}}}cn.URL_SCHEME="downloads://";class hn{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error("modelTopology field is missing from file "+this.jsonFile.name));if(null==r.weightsManifest)return void t(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void e({modelTopology:s});const o=$t(r,e=>this.loadWeights(e));e(o)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(s).then(e=>[t,Nt(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Mt(e.name)),r={};for(const s of e)s.paths.forEach(e=>{const s=Mt(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function dn(e,t,n,r){!function(e){a(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){a(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),a(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),a(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(o=>(o.then(o=>{const a=n+ ++s/e.length*(r-n);return t(a),o}),o)))}async function pn(e,t){null==t&&(t={});const n=null==t.fetchFunc?P().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await dn(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await dn(s,t.onProgress,.5,1)}function fn(e){return async(t,n="",r)=>{const s=t.map(()=>!1),o={},a=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=xt[l]*c(e.shape),h=()=>{s[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(h(),a[n]=!0)}):h(),i.push(e.name),n+=u})}),!a.every(e=>e)){const e=r.filter((e,t)=>!a[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const l=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});const h=await e(u),d={};let p=0;return l.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=h[p+e].byteLength;const s=new ArrayBuffer(r),a=new Uint8Array(s);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(h[p+e]);a.set(t,i),i+=t.byteLength}o[e].forEach(e=>{const t=Et(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]}),p+=n}),d}}Rt.registerSaveRouter(e=>P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(cn.URL_SCHEME)?function(e="model"){return new cn(e)}(e.slice(cn.URL_SCHEME.length)):null);class gn{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(a("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=P().platform.fetch,a(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&a(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=It(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Tt(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return $t(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,o=[];for(const t of e)o.push(...t.weights);const a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);this.weightUrlConverter&&a.push(...await Promise.all(i));return[o,Nt(await pn(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function mn(e){return null!=e.match(gn.URL_SCHEME_REGEX)}gn.URL_SCHEME_REGEX=/^https?:\/\//;const bn=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>mn(e)):mn(e),n)return yn(e,t)}return null};function yn(e,t){return new gn(e,t)}Rt.registerSaveRouter(bn),Rt.registerLoadRouter(bn);class wn{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class kn{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var vn=Object.freeze({__proto__:null,browserFiles:function(e){return new hn(e)},browserHTTPRequest:function(e,t){return yn(e,t)},concatenateArrayBuffers:Nt,decodeWeights:Et,encodeWeights:async function(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let o=0;o<s.length;++o){const a=s[o],i=Array.isArray(e)?e[o].tensor:e[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const l={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],o=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(o,s),s+=4,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(l.group=t),n.push(l)}return{data:St(await Promise.all(r)),specs:n}},fromMemory:function(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new wn(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new wn({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new wn({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})},getLoadHandlers:(e,t)=>Rt.getLoadHandlers(e,t),getModelArtifactsForJSON:$t,getModelArtifactsInfoForJSON:Tt,getSaveHandlers:e=>Rt.getSaveHandlers(e),http:yn,isHTTPScheme:mn,loadWeights:async function(e,t="",n,r){return fn(e=>pn(e,{requestInit:r}))(e,t,n)},registerLoadRouter:e=>Rt.registerLoadRouter(e),registerSaveRouter:e=>Rt.registerSaveRouter(e),weightsLoaderFactory:fn,withSaveHandler:function(e){return new kn(e)},copyModel:async function(e,t){return Qt(e,t,!1)},listModels:async function(){const e=Yt.getSchemes(),t={};for(const n of e){const e=await Yt.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t},moveModel:async function(e,t){return Qt(e,t,!0)},removeModel:async function(e){const t=Xt(e);return Yt.getManager(t.scheme).removeModel(t.path)}});const xn=yt({matMul_:function(e,t,n=!1,r=!1){let s=mt(e,"a","matMul"),o=mt(t,"b","matMul");[s,o]=tt(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return ut.runKernel("BatchMatMul",a,i)}});const En=yt({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const s={indices:mt(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return ut.runKernel("OneHot",s,o)}});const Sn=yt({transpose_:function(e,t){const n=mt(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),a(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{a(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return ut.runKernel("Transpose",r,s)}});const An=yt({confusionMatrix_:function(e,t,n){const r=mt(e,"labels","confusionMatrix"),s=mt(t,"predictions","confusionMatrix");a(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),a(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),a(1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),a(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),a(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const o=En(on(r,"int32"),n),i=En(on(s,"int32"),n),l=Sn(o),u=xn(l,i);return on(u,"int32")}});var _n=Object.freeze({__proto__:null,confusionMatrix:An});function Nn(e,t,n){if(l(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ft(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return kt(e,t,r,n)}let Mn;function In(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=W("FromPixels",ut.backendName)){const n={pixels:e},r={numChannels:t};return ut.runKernel("FromPixels",n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(a?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(o||s||i)&&(null==Mn&&(Mn=document.createElement("canvas").getContext("2d")),Mn.canvas.width=l,Mn.canvas.height=u,Mn.drawImage(e,0,0,l,u),c=Mn.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Nn(h,[u,l,t],"int32")}function $n(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}const Tn=yt({fromPixels_:In});var Dn=Object.freeze({__proto__:null,fromPixelsAsync:async function(e,t=3){let n=null;if(P().getBool("WRAP_TO_IMAGEBITMAP")&&$n(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return In(n,t)},toPixels:async function(e,t){let n=mt(e,"img","toPixels");if(!(e instanceof Ve)){const e=n;n=on(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),i="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<o;r++){const s=a[e*o+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===o?(t[0]=s*i,t[1]=s*i,t[2]=s*i):t[r]=s*i}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l},fromPixels:Tn});function Rn(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===c(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,o=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const i=e.shape,l=s.slice();l.pop();let u=1;for(let e=o;e<n;++e)u*=i[e],l.push(i[e]);const h=[...I(e.shape).map(e=>e/u),1].slice(0,o);return[l,a,u,h]}var Fn=Object.freeze({__proto__:null,prepareAndValidate:Rn});function Cn(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(o+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+e.length-r)throw new Error(o+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(o+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(o+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Bn(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Cn(n,t,e)}function Pn(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let a=1;for(let e=s;e<o;++e)a*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:c(t.shape)/i,sliceSize:a,strides:[...I(n.slice(0,s)),1],outputSize:c(n)}}var On=Object.freeze({__proto__:null,validateUpdateShape:Cn,validateInput:Bn,calculateShapes:Pn});function Ln(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function zn(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function qn(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Kn(e,t,n){return n<=e?n:n-(t-1)}function Wn(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Un(e,t,n,r,s,o,a,i,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Gn(a,l,u,r,e),h=Vn(i,l,u,s,e),d=qn(o,l,u,e)}else for(let t=0;t<u;t++)c[t]=jn(a,r,o,e,t,l),h[t]=Jn(i,s,o,e,t,l),d[t]=Hn(o,t,l);return{begin:c,end:h,strides:d}}function Gn(e,t,n,r,s){const o=[...s],a=Wn(n,t);for(let s=0;s<o.length;s++)if(a.indexOf(s)>-1)o[s]=0;else{const a=Kn(t,n,s);let i=r[a];e&1<<a&&(i=0),o[s]=i}return o}function Vn(e,t,n,r,o){const a=[...o],i=Wn(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=Kn(t,n,s);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let e=0;e<a.length;e++){const t=o[e];a[e]<0&&(a[e]+=t),a[e]=s(0,a[e],o[e])}return a}function Hn(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function jn(e,t,n,r,o,a){let i=t[o];const l=n[o]||1;(e&1<<o||a&1<<o||null==i)&&(i=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[o];return i<0&&(i+=u),i=s(0,i,u-1),i}function Jn(e,t,n,r,o,a){let i=t[o];const l=n[o]||1;(e&1<<o||a&1<<o||null==i)&&(i=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[o];return i<0&&(i+=u),i=l>0?s(0,i,u):s(-1,i,u-1),i}var Zn=Object.freeze({__proto__:null,assertParamsValid:function(e,t,n){const r=e.shape.length;a(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),a(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)a(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)},maskToAxes:Ln,computeOutShape:zn,stridesWithElidedDims:qn,getNormalizedAxes:Un,startIndicesWithElidedDims:Gn,stopIndicesWithElidedDims:Vn,stridesForAxis:Hn,startForAxis:jn,stopForAxis:Jn,isSliceContinous:function(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0},computeFlatOffset:function(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n},parseSliceParams:function(e,t,n){let r;const s=e.shape.length;let o;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{a(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(a(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,o]},sliceInfo:function(e,t,n,r,s,o,a,i,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Ln(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Ln(i),g=e.slice();f.forEach(e=>{u[e]=0,c[e]=1,g.splice(e,0,1)});const{begin:m,end:b,strides:y}=Un(g,d,p,u,c,h,s,o,a);u=m,c=b,h=y;const w=Ln(l);w.forEach(e=>{c[e]=u[e]+1,h[e]=1});const k=zn(u,c,h),v=k.filter((e,t)=>-1===w.indexOf(t));return{nonStrided:h.every(e=>1===e),$begin:u,$end:c,$strides:h,size:k,newShape:g,outShape:v}}});class Yn{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Xn{constructor(){this.classNameMap={}}static getMap(){return null==Xn.instance&&(Xn.instance=new Xn),Xn.instance}static register(e){Xn.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Qn(e){a(null!=e.className,()=>"Class being registered does not have the static className property defined."),a("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),a(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Xn.register(e)}var er=Object.freeze({__proto__:null,Serializable:Yn,SerializationMap:Xn,registerClass:Qn});function tr(){return 32===ut.backend.floatPrecision()?.001:.1}function nr(e,t,n){let r=!0;if((k(e)||k(t))&&(r=!1),k(e)&&k(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=ft(e),r=ft(t);if(!h(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=k(e)?e:u(e),o=k(t)?t:u(t);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.\nActual:   ${s}.\nExpected: ${o}.`);for(let e=0;e<o.length;++e){const t=s[e],r=o[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${o}.`)}}function rr(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var sr=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=tr()),nr(e,t,(e,t)=>rr(e,t,n))},testEpsilon:tr,expectPromiseToFail:function(e,t){e().then(()=>t.fail(),()=>t())},expectArraysEqual:function(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return E(e)||E(e[0])||E(t)||E(t[0])?nr(e,n,(e,t)=>e==t):nr(e,t,(e,t)=>rr(e,t,0))},expectNumbersClose:function(e,t,n){if(null==n&&(n=tr()),!rr(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)},expectValuesInRange:function(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))},encodeStrings:function e(t){for(let n=0;n<t.length;n++){const r=t[n];Array.isArray(r)?e(r):t[n]=Re(r)}return t}});function or(e,t){return ut.tidy(e,t)}function ar(e){rt(e).forEach(e=>e.dispose())}function ir(e){return ut.keep(e)}const lr=yt({add_:function(e,t){let n=mt(e,"a","add"),r=mt(t,"b","add");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("Add",s)}});const ur=yt({floorDiv_:function(e,t){let n=mt(e,"a","floorDiv"),r=mt(t,"b","floorDiv");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("FloorDiv",s)}});const cr=yt({div_:function(e,t){let n=mt(e,"a","div"),r=mt(t,"b","div");if([n,r]=tt(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ur(n,r);const s={a:n,b:r};return ut.runKernel("RealDiv",s,{})}});const hr=yt({mul_:function(e,t){let n=mt(e,"a","mul"),r=mt(t,"b","mul");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("Multiply",s)}});const dr=yt({abs_:function(e){const t=mt(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ut.runKernel("ComplexAbs",e)}{const e={x:t};return ut.runKernel("Abs",e)}}});const pr=yt({acos_:function(e){const t={x:mt(e,"x","acos")};return ut.runKernel("Acos",t)}});const fr=yt({acosh_:function(e){const t={x:mt(e,"x","acosh")};return ut.runKernel("Acosh",t)}});const gr=yt({addN_:function(e){a(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),a(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>mt(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!h(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return ut.runKernel("AddN",r)}});const mr=yt({all_:function(e,t=null,n=!1){const r={x:mt(e,"x","all","bool")},s={axis:t,keepDims:n};return ut.runKernel("All",r,s)}});const br=yt({any_:function(e,t=null,n=!1){const r={x:mt(e,"x","any","bool")},s={axis:t,keepDims:n};return ut.runKernel("Any",r,s)}});const yr=yt({argMax_:function(e,t=0){const n={x:mt(e,"x","argMax")},r={axis:t};return ut.runKernel("ArgMax",n,r)}});const wr=yt({argMin_:function(e,t=0){const n={x:mt(e,"x","argMin")},r={axis:t};return ut.runKernel("ArgMin",n,r)}});const kr=yt({asin_:function(e){const t={x:mt(e,"x","asin")};return ut.runKernel("Asin",t)}});const vr=yt({asinh_:function(e){const t={x:mt(e,"x","asinh")};return ut.runKernel("Asinh",t)}});const xr=yt({atan_:function(e){const t={x:mt(e,"x","atan")};return ut.runKernel("Atan",t)}});const Er=yt({atan2_:function(e,t){let n=mt(e,"a","atan2"),r=mt(t,"b","atan2");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("Atan2",s)}});const Sr=yt({atanh_:function(e){const t={x:mt(e,"x","atanh")};return ut.runKernel("Atanh",t)}});function Ar(e,t,n,r,s,o,a="channelsLast"){const[i,l]=Ir(t);let u;if("channelsLast"===a)u=[i,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);u=[i,l,e[1],e[1]]}return _r(e,u,n,r,s,o,!1,a)}function _r(e,t,n,r,s,o,a=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=Ir(n),[b,y]=Ir(r),w=Tr(d,b),k=Tr(p,y),{padInfo:v,outHeight:x,outWidth:E}=function(e,t,n,r,s,o,a,i,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Mr(e,t,n));const o=e[0],a=e[1],i=Dr((o-t+2*r)/n+1,s),l=Dr((a-t+2*r)/n+1,s);return[i,l]}([t,n],o,r,e,i);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+o-t),i=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(i/2);u={top:l,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-o+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Dr((t-o+d+p)/r+1,i),h=Dr((n-a+f+g)/s+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,w,k,o,i),S=a?f*h:f;let A;return"channelsFirst"===i?A=[l,S,x,E]:"channelsLast"===i&&(A=[l,x,E,S]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:x,outWidth:E,outChannels:S,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:y,inShape:e,outShape:A,filterShape:t}}function Nr(e,t,n,r,s,o=!1,a="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,w]=$r(n),[k,v,x]=$r(r),E=Tr(p,k),S=Tr(f,v),A=Tr(g,x),{padInfo:_,outDepth:N,outHeight:M,outWidth:I}=function(e,t,n,r,s,o,a,i,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,s,o){null==s&&(s=Mr(e,t,r));const a=e[0],i=e[1],l=e[2],u=Dr((a-t+2*s)/r+1,o),c=Dr((i-t+2*s)/r+1,o),h=Dr((l-t+2*s)/r+1,o);return[u,c,h,n]}([t,n,r,1],i,1,s,e,c);d=o[0],p=o[1],f=o[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/o),f=Math.ceil(r/a);const e=(d-1)*s+i-t,c=(p-1)*o+l-n,g=(f-1)*a+u-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),w=c-y,k=Math.floor(g/2);h={top:y,bottom:w,left:k,right:g-k,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/s),p=Math.ceil((n-l+1)/o),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,w,E,S,A,i),$=o?m*d:m;let T;return"channelsFirst"===a?T=[l,$,N,M,I]:"channelsLast"===a&&(T=[l,N,M,I,$]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:M,outWidth:I,outChannels:$,padInfo:_,strideDepth:b,strideHeight:y,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:E,effectiveFilterHeight:S,effectiveFilterWidth:A,dilationDepth:k,dilationHeight:v,dilationWidth:x,inShape:e,outShape:T,filterShape:t}}function Mr(e,t,n,r=1){const s=Tr(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Ir(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function $r(e){return"number"==typeof e?[e,e,e]:e}function Tr(e,t){return t<=1?e:e+(e-1)*(t-1)}function Dr(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Rr(e){const[t,n,r]=Ir(e);return 1===t&&1===n&&1===r}function Fr(e,t){return Rr(e)||Rr(t)}function Cr(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const Br=yt({reshape_:function(e,t){const n={x:mt(e,"x","reshape","string_or_numeric")},r={shape:t};return ut.runKernel("Reshape",n,r)}});const Pr=yt({avgPool_:function(e,t,n,r,s){const o=mt(e,"x","avgPool","float32");a(Fr(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=o,l=!1;3===o.rank&&(l=!0,i=Br(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&a(d(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let h=ut.runKernel("AvgPool",u,c);return h=on(h,o.dtype),l?Br(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Or=yt({avgPool3d_:function(e,t,n,r,s,o="NDHWC"){const i=mt(e,"x","avgPool3d","float32");let l=i,u=!1;4===i.rank&&(u=!0,l=Br(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),a(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),a("NDHWC"===o,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+o),null!=s&&a(d(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:o};let p=ut.runKernel("AvgPool3D",c,h);return p=on(p,l.dtype),u?Br(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Lr=yt({concat_:function(e,t=0){a(e.length>=1,()=>"Pass at least one tensor to concat");const n=bt(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return an(n[0]);const r=n,s={axis:t};return ut.runKernel("Concat",r,s)}});const zr=yt({sigmoid_:function(e){const t={x:mt(e,"x","sigmoid")};return ut.runKernel("Sigmoid",t)}});const qr=yt({slice_:function(e,t,n){const r=mt(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:t,size:n};return ut.runKernel("Slice",s,o)}});const Kr=yt({tanh_:function(e){const t={x:mt(e,"x","tanh")};return ut.runKernel("Tanh",t)}});const Wr=yt({basicLSTMCell_:function(e,t,n,r,s,o){const a=mt(e,"forgetBias","basicLSTMCell"),i=mt(t,"lstmKernel","basicLSTMCell"),l=mt(n,"lstmBias","basicLSTMCell"),u=mt(r,"data","basicLSTMCell"),c=mt(s,"c","basicLSTMCell"),h=mt(o,"h","basicLSTMCell"),d=Lr([u,h],1),p=xn(d,i),f=lr(p,l),g=f.shape[0],m=f.shape[1]/4,b=[g,m],y=qr(f,[0,0],b),w=qr(f,[0,m],b),k=qr(f,[0,2*m],b),v=qr(f,[0,3*m],b),x=lr(hr(zr(y),Kr(w)),hr(c,zr(lr(a,k))));return[x,hr(Kr(x),zr(v))]}});const Ur=yt({batchToSpaceND_:function(e,t,n){const r=mt(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);a(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),a(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),a(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const o={x:r},i={blockShape:t,crops:n};return ut.runKernel("BatchToSpaceND",o,i)}});const Gr=yt({batchNorm_:function(e,t,n,r,s,o){null==o&&(o=.001);const i=mt(e,"x","batchNorm"),l=mt(t,"mean","batchNorm"),u=mt(n,"variance","batchNorm");let c,h;null!=s&&(c=mt(s,"scale","batchNorm")),null!=r&&(h=mt(r,"offset","batchNorm")),a(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a(null==h||l.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a(null==c||l.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:function(e){let t;return t=0===e.rank||1===e.rank?Br(e,[1,1,1,e.size]):2===e.rank?Br(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Br(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:c,offset:h,mean:l,variance:u},p={varianceEpsilon:o},f=ut.runKernel("FusedBatchNorm",d,p);return Br(f,i.shape)}});const Vr=yt({batchNorm2d_:function(e,t,n,r,s,o){const i=mt(e,"x","batchNorm"),l=mt(t,"mean","batchNorm"),u=mt(n,"variance","batchNorm");let c,h;return null!=s&&(c=mt(s,"scale","batchNorm")),null!=r&&(h=mt(r,"offset","batchNorm")),a(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),a(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),a(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&a(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=h&&a(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),Gr(i,l,u,h,c,o)}});const Hr=yt({batchNorm3d_:function(e,t,n,r,s,o){const i=mt(e,"x","batchNorm"),l=mt(t,"mean","batchNorm"),u=mt(n,"variance","batchNorm");let c,h;return null!=s&&(c=mt(s,"scale","batchNorm")),null!=r&&(h=mt(r,"offset","batchNorm")),a(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),a(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),a(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&a(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=h&&a(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),Gr(i,l,u,h,c,o)}});const jr=yt({batchNorm4d_:function(e,t,n,r,s,o){const i=mt(e,"x","batchNorm"),l=mt(t,"mean","batchNorm"),u=mt(n,"variance","batchNorm");let c,h;return null!=s&&(c=mt(s,"scale","batchNorm")),null!=r&&(h=mt(r,"offset","batchNorm")),a(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),a(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),a(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&a(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=h&&a(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),Gr(i,l,u,h,c,o)}});const Jr=yt({bincount_:function(e,t,n){const r=mt(e,"x","bincount"),s=mt(t,"weights","bincount");a("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),a(n>=0,()=>`size must be non-negative, but got ${n}.`),a(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+s.shape+".");const o={x:r,weights:s},i={size:n};return ut.runKernel("Bincount",o,i)}});const Zr=yt({broadcastTo_:function(e,t){let n=mt(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Br(n,e)}const s=n.shape,o=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])o[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===o.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return an(n);const a={x:n},i={reps:o};return ut.runKernel("Tile",a,i)}});const Yr=yt({ceil_:function(e){const t={x:mt(e,"x","ceil")};return ut.runKernel("Ceil",t)}});const Xr=yt({clipByValue_:function(e,t,n){const r=mt(e,"x","clipByValue");a(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const s={x:r},o={clipValueMin:t,clipValueMax:n};return ut.runKernel("ClipByValue",s,o)}});const Qr=yt({concat1d_:function(e){return Lr(e,0)}});const es=yt({concat2d_:function(e,t){return Lr(e,t)}});const ts=yt({concat3d_:function(e,t){return Lr(e,t)}});const ns=yt({concat4d_:function(e,t){return Lr(e,t)}});const rs=yt({conv2d_:function(e,t,n,r,s="NHWC",o=[1,1],i){const l=mt(e,"x","conv2d"),u=mt(t,"filter","conv2d");let c=l,h=!1;3===l.rank&&(h=!0,c=Br(l,[1,l.shape[0],l.shape[1],l.shape[2]])),a(4===c.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),a(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=i&&a(d(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const p="NHWC"===s?c.shape[3]:c.shape[1];a(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),a(Fr(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const f={x:c,filter:u},g={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},m=ut.runKernel("Conv2D",f,g);return h?Br(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const ss=yt({conv1d_:function(e,t,n,r,s="NWC",o=1,i){const l=mt(e,"x","conv1d"),u=mt(t,"filter","conv1d");let c=l,h=!1;2===l.rank&&(h=!0,c=Br(l,[1,l.shape[0],l.shape[1]])),a(3===c.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),a(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=i&&a(d(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),a(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),a(Fr(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),a("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const p=Br(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=Br(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=rs(f,p,[1,n],r,"NHWC",[1,o],i);return Br(g,h?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}});const os=yt({conv2DBackpropInput_:function(e,t,n,r,s,o="NHWC",i){a(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let l=e,u=t,c=!1;3===t.rank&&(c=!0,u=Br(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),a(4===l.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+l.length+"."),a(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),a(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const h="NHWC"===o?l[3]:l[1],p="NHWC"===o?u.shape[3]:u.shape[1];a(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),a(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),null!=i&&a(d(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f={dy:u,filter:n},g={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,inputShape:l},m=ut.runKernel("Conv2DBackpropInput",f,g);return c?Br(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const as=yt({conv2dTranspose_:function(e,t,n,r,s,o){const a=mt(e,"x","conv2dTranspose"),i=mt(t,"filter","conv2dTranspose");return os(n,a,i,r,s,"NHWC",o)}});const is=yt({conv3d_:function(e,t,n,r,s="NDHWC",o=[1,1,1]){const i=mt(e,"x","conv3d"),l=mt(t,"filter","conv3d");let u=i,c=!1;4===i.rank&&(c=!0,u=Br(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),a(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),a(5===l.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+l.rank+"."),a(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),a(Fr(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),a("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:o},p=ut.runKernel("Conv3D",h,d);return c?Br(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const ls=yt({conv3DBackpropInput_:function(e,t,n,r,s){a(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,i=t,l=!1;4===t.rank&&(l=!0,i=Br(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const u=o[4],c=i.shape[4];a(5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."),a(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),a(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),a(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),a(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const h={dy:i,filter:n},d={pad:s,strides:r,inputShape:o},p=ut.runKernel("Conv3DBackpropInputV2",h,d);return l?Br(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const us=yt({conv3dTranspose_:function(e,t,n,r,s){const o=mt(e,"x","conv3dTranspose"),a=mt(t,"filter","conv3dTranspose");return ls(n,o,a,r,s)}});const cs=yt({cos_:function(e){const t={x:mt(e,"x","cos")};return ut.runKernel("Cos",t)}});const hs=yt({cosh_:function(e){const t={x:mt(e,"x","cosh")};return ut.runKernel("Cosh",t)}});const ds=yt({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:mt(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return ut.runKernel("Cumsum",s,o)}});const ps=yt({denseBincount_:function(e,t,n,r=!1){const s=mt(e,"x","denseBincount"),o=mt(t,"weights","denseBincount");a("int32"===s.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+s.dtype),a(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),a(n>=0,()=>`size must be non-negative, but got ${n}.`),a(o.size===s.size||0===o.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: `+o.shape+".");const i={x:s,weights:o},l={size:n,binaryOutput:r};return ut.runKernel("DenseBincount",i,l)}});const fs=yt({depthToSpace_:function(e,t,n="NHWC"){const r=mt(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],o="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];a(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),a(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t} for depthToSpace with input shape\n        ${r.shape}`),a(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const l={x:r},u={blockSize:t,dataFormat:n};return ut.runKernel("DepthToSpace",l,u)}});const gs=yt({depthwiseConv2d_:function(e,t,n,r,s="NHWC",o=[1,1],i){const l=mt(e,"x","depthwiseConv2d"),u=mt(t,"filter","depthwiseConv2d");let c=l,h=!1;3===l.rank&&(h=!0,c=Br(l,[1,l.shape[0],l.shape[1],l.shape[2]])),a(4===c.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),a(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),a(c.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&a(d(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const p={x:c,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},g=ut.runKernel("DepthwiseConv2dNative",p,f);return h?Br(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const ms=yt({diag_:function(e){const t={x:mt(e,"x","diag")};return ut.runKernel("Diag",t)}});const bs=yt({dilation2d_:function(e,t,n,r,s=[1,1],o="NHWC"){const i=mt(e,"x","dilation2d"),l=mt(t,"filter","dilation2d");a(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),a(3===l.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+l.rank+"."),a("NHWC"===o,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+o);let u=i,c=!1;3===i.rank&&(u=Br(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:u,filter:l},d={strides:n,pad:r,dilations:s},p=ut.runKernel("Dilation2D",h,d);return c?Br(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});function ys(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],o=t.length-r-1,a=t[o];(null==s||1===s&&a>1)&&n.unshift(o)}return n}function ws(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const ks=yt({equal_:function(e,t){let n=mt(e,"a","equal","string_or_numeric"),r=mt(t,"b","equal","string_or_numeric");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("Equal",s)}});const vs=yt({where_:function(e,t,n){const r=mt(t,"a","where"),s=mt(n,"b","where"),o=mt(e,"condition","where","bool"),a=ws(ws(o.shape,r.shape),s.shape),i={condition:Zr(o,a),t:Zr(r,a),e:Zr(s,a)};return ut.runKernel("Select",i)}});const xs=yt({zerosLike_:function(e){const t={x:mt(e,"x","zerosLike")};return ut.runKernel("ZerosLike",t)}});const Es=yt({divNoNan_:function(e,t){let n=mt(e,"a","div"),r=mt(t,"b","div");[n,r]=tt(n,r);const s=cr(n,r),o=xs(s),a=ks(r,o);return vs(a,o,s)}});const Ss=yt({dot_:function(e,t){const n=mt(e,"t1","dot"),r=mt(t,"t2","dot");a(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(a(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),1===n.rank&&1===r.rank){const e=Br(n,[1,-1]),t=Br(r,[-1,1]),s=xn(e,t);return Br(s,[])}if(1===n.rank&&2===r.rank){const e=Br(n,[1,-1]),t=Br(r,[r.shape[0],r.shape[1]]),s=xn(e,t);return Br(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Br(r,[-1,1]),t=xn(n,e);return Br(t,[t.size])}{const e=Br(r,[r.shape[0],r.shape[1]]);return xn(n,e)}}});const As=yt({einsum_:function(e,...t){const n=t.map((e,t)=>mt(e,"tensors"+t,"einsum")),r={equation:e};return ut.runKernel("Einsum",n,r)}});const _s=yt({elu_:function(e){const t={x:mt(e,"x","elu")};return ut.runKernel("Elu",t)}});const Ns=yt({erf_:function(e){let t=mt(e,"x","erf");a("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=on(t,"float32"));const n={x:t};return ut.runKernel("Erf",n)}});const Ms=yt({exp_:function(e){const t={x:mt(e,"x","exp")};return ut.runKernel("Exp",t)}});const Is=yt({expandDims_:function(e,t=0){const n=mt(e,"x","expandDims","string_or_numeric");a(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:t};return ut.runKernel("ExpandDims",r,s)}});const $s=yt({expm1_:function(e){const t={x:mt(e,"x","expm1")};return ut.runKernel("Expm1",t)}});const Ts=yt({tile_:function(e,t){const n=mt(e,"x","tile","string_or_numeric");a(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},s={reps:t};return ut.runKernel("Tile",r,s)}});const Ds=yt({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=sn([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)s.set(1,e,e);const a=Br(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Ts(Is(a,0),[n[0],1,1]);if(2===n.length)return Ts(Is(Is(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ts(Is(Is(Is(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Rs(e,t,n){const r={shape:e,value:t,dtype:n};return ut.runKernel("Fill",{},r)}const Fs=yt({floor_:function(e){const t={x:mt(e,"x","floor")};return ut.runKernel("Floor",t)}});const Cs=yt({gather_:function(e,t,n=0,r=0){const s={x:mt(e,"x","gather"),indices:mt(t,"indices","gather","int32")},o={axis:n,batchDims:r};return ut.runKernel("GatherV2",s,o)}});const Bs=yt({greater_:function(e,t){let n=mt(e,"a","greater","string_or_numeric"),r=mt(t,"b","greater","string_or_numeric");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("Greater",s)}});const Ps=yt({greaterEqual_:function(e,t){let n=mt(e,"a","greaterEqual","string_or_numeric"),r=mt(t,"b","greaterEqual","string_or_numeric");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("GreaterEqual",s)}});const Os=yt({imag_:function(e){const t={input:mt(e,"input","imag")};return ut.runKernel("Imag",t)}});const Ls=yt({isFinite_:function(e){const t={x:mt(e,"x","isFinite")};return ut.runKernel("IsFinite",t)}});const zs=yt({isInf_:function(e){const t={x:mt(e,"x","isInf")};return ut.runKernel("IsInf",t)}});const qs=yt({isNaN_:function(e){const t={x:mt(e,"x","isNaN")};return ut.runKernel("IsNan",t)}});const Ks=yt({leakyRelu_:function(e,t=.2){const n={x:mt(e,"x","leakyRelu")},r={alpha:t};return ut.runKernel("LeakyRelu",n,r)}});const Ws=yt({less_:function(e,t){let n=mt(e,"a","less","string_or_numeric"),r=mt(t,"b","less","string_or_numeric");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("Less",s)}});const Us=yt({lessEqual_:function(e,t){let n=mt(e,"a","lessEqual","string_or_numeric"),r=mt(t,"b","lessEqual","string_or_numeric");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("LessEqual",s)}});const Gs=yt({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const o=mt(e,"x","localResponseNormalization");a(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),a(d(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=o,l=!1;3===o.rank&&(l=!0,i=Br(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:i},c={depthRadius:t,bias:n,alpha:r,beta:s},h=ut.runKernel("LRN",u,c);return l?Br(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Vs=yt({log_:function(e){const t={x:mt(e,"x","log")};return ut.runKernel("Log",t)}});const Hs=yt({log1p_:function(e){const t={x:mt(e,"x","log1p")};return ut.runKernel("Log1p",t)}});function js(e,t){a(N(e),()=>"The f passed in variableGrads(f) must be a function"),a(null==t||Array.isArray(t)&&t.every(e=>e instanceof He),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ut.registeredVariables)t.push(ut.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;a((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:o,grads:i}=ut.gradients(e,t,null,!0);a(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),a(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((e,t)=>{null!=i[t]&&(l[e.name]=i[t])}),null!=r&&r.forEach(e=>l[e.name]=null),{value:o,grads:l}}function Js(e){return ut.customGrad(e)}function Zs(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const Ys=yt({neg_:function(e){const t={x:mt(e,"x","neg")};return ut.runKernel("Neg",t)}});const Xs=yt({softplus_:function(e){const t={x:mt(e,"x","softplus")};return ut.runKernel("Softplus",t)}});const Qs=yt({logSigmoid_:function(e){const t=mt(e,"x","logSigmoid");return Js(e=>({value:Ys(Xs(Ys(e))),gradFunc:t=>hr(t,zr(Ys(e)))}))(t)}});const eo=yt({max_:function(e,t=null,n=!1){const r={x:mt(e,"x","max")},s={reductionIndices:t,keepDims:n};return ut.runKernel("Max",r,s)}});const to=yt({sub_:function(e,t){let n=mt(e,"a","sub"),r=mt(t,"b","sub");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("Sub",s)}});const no=yt({sum_:function(e,t=null,n=!1){let r=mt(e,"x","sum");"bool"===r.dtype&&(r=on(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return ut.runKernel("Sum",s,o)}});const ro=yt({logSoftmax_:function(e,t=-1){const n=mt(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Js((e,n)=>{const r=eo(e,t,!0),s=to(e,r),o=to(on(s,"float32"),Vs(no(Ms(s),t,!0)));n([o]);return{value:o,gradFunc:(e,n)=>{const[r]=n,s=Ms(r);return to(e,hr(no(e,t,!0),s))}}})(n)}});function so(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function oo(e,t,n){const r=e.length+t.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[o++]):s.push(t[a++]);return s}function ao(e,t){return oo(e,t.map(e=>1),t)}const io=yt({logSumExp_:function(e,t=null,n=!1){const r=mt(e,"x","logSumExp"),s=f(t,r.shape),o=eo(r,s,!0),a=to(r,o),i=Ms(a),l=no(i,s),u=Vs(l),c=lr(Br(o,u.shape),u);if(n){const e=ao(c.shape,s);return Br(c,e)}return c}});const lo=yt({logicalAnd_:function(e,t){const n=mt(e,"a","logicalAnd","bool"),r=mt(t,"b","logicalAnd","bool");ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("LogicalAnd",s)}});const uo=yt({logicalNot_:function(e){const t={x:mt(e,"x","logicalNot","bool")};return ut.runKernel("LogicalNot",t)}});const co=yt({logicalOr_:function(e,t){const n=mt(e,"a","logicalOr","bool"),r=mt(t,"b","logicalOr","bool");ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("LogicalOr",s)}});const ho=yt({logicalXor_:function(e,t){const n=mt(e,"a","logicalXor","bool"),r=mt(t,"b","logicalXor","bool");return ws(n.shape,r.shape),lo(co(e,t),uo(lo(e,t)))}});const po=yt({maxPool_:function(e,t,n,r,s){const o=mt(e,"x","maxPool");let i=o,l=!1;3===o.rank&&(l=!0,i=Br(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),a(Fr(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&a(d(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s},h=ut.runKernel("MaxPool",u,c);return l?Br(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const fo=yt({maxPool3d_:function(e,t=[1,1,1],n,r,s,o="NDHWC"){const i=mt(e,"x","maxPool3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Br(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),a(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),a("NDHWC"===o,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+o),null!=s&&a(d(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:o},p=ut.runKernel("MaxPool3D",c,h);return u?Br(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const go=yt({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const o={x:mt(e,"x","maxPoolWithArgmax")},a={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=ut.runKernel("MaxPoolWithArgmax",o,a);return{result:i[0],indexes:i[1]}}});const mo=yt({maximum_:function(e,t){let n=mt(e,"a","maximum"),r=mt(t,"b","maximum");[n,r]=tt(n,r),"bool"===n.dtype&&(n=on(n,"int32"),r=on(r,"int32")),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("Maximum",s)}});const bo=yt({mean_:function(e,t=null,n=!1){const r={x:mt(e,"x","mean")},s={axis:t,keepDims:n};return ut.runKernel("Mean",r,s)}});function yo(e,t="float32"){if("complex64"===t){const t=yo(e,"float32"),n=yo(e,"float32");return wt(t,n)}const n=D(c(e),t);return ut.makeTensor(n,e,t)}function wo(e,t="float32"){if("complex64"===t){const t=wo(e,"float32"),n=yo(e,"float32");return wt(t,n)}const n=T(c(e),t);return ut.makeTensor(n,e,t)}const ko=yt({min_:function(e,t=null,n=!1){const r={x:mt(e,"x","min")},s={axis:t,keepDims:n};return ut.runKernel("Min",r,s)}});const vo=yt({minimum_:function(e,t){let n=mt(e,"a","minimum"),r=mt(t,"b","minimum");[n,r]=tt(n,r),"bool"===n.dtype&&(n=on(n,"int32"),r=on(r,"int32")),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("Minimum",s)}});const xo=yt({mirrorPad_:function(e,t,n){a("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=mt(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");a(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)a(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),a(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape `+r.shape);const o={paddings:t,mode:n},i={x:r};return ut.runKernel("MirrorPad",i,o)}});const Eo=yt({mod_:function(e,t){let n=mt(e,"a","mod"),r=mt(t,"b","mod");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("Mod",s)}});const So=yt({square_:function(e){const t=mt(e,"x","square");return ut.runKernel("Square",{x:t},{})}});const Ao=yt({moments_:function(e,t=null,n=!1){const r=f(t,(e=mt(e,"x","moments")).shape),s=bo(e,r,n);let o=s.shape;n||(o=ao(s.shape,r));const a=So(to(on(e,"float32"),Br(s,o)));return{mean:s,variance:bo(a,r,n)}}});const _o=yt({multiRNNCell_:function(e,t,n,r){const s=mt(t,"data","multiRNNCell"),o=bt(n,"c","multiRNNCell"),a=bt(r,"h","multiRNNCell");let i=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](i,o[t],a[t]);l.push(n[0]),l.push(n[1]),i=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}});const No=yt({multinomial_:function(e,t,n,r=!1){const s=mt(e,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+o+".");if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);n=n||Math.random();const i={logits:1===a?Br(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=ut.runKernel("Multinomial",i,l);return 1===a?Br(u,[u.size]):u}});const Mo=yt({notEqual_:function(e,t){let n=mt(e,"a","notEqual","string_or_numeric"),r=mt(t,"b","notEqual","string_or_numeric");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("NotEqual",s)}});const Io=yt({onesLike_:function(e){const t={x:mt(e,"x","onesLike")};return ut.runKernel("OnesLike",t)}});const $o=yt({outerProduct_:function(e,t){const n=mt(e,"v1","outerProduct"),r=mt(t,"v2","outerProduct");a(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=Br(n,[-1,1]),o=Br(r,[1,-1]);return xn(s,o)}});const To=yt({pad_:function(e,t,n=0){const r=mt(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},o={x:r};return ut.runKernel("PadV2",o,s)}});const Do=yt({pad1d_:function(e,t,n=0){return a(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),To(e,[t],n)}});const Ro=yt({pad2d_:function(e,t,n=0){return a(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),To(e,t,n)}});const Fo=yt({pad3d_:function(e,t,n=0){return a(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),To(e,t,n)}});const Co=yt({pad4d_:function(e,t,n=0){return a(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),To(e,t,n)}});const Bo=yt({spaceToBatchND_:function(e,t,n){const r=mt(e,"x","spaceToBatchND");a(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),a(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),a(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},o={blockShape:t,paddings:n};return ut.runKernel("SpaceToBatchND",s,o)}});const Po=yt({pool_:function(e,t,n,r,s,o){null==s&&(s=[1,1]),null==o&&(o=1),0===r&&(r="valid");const i=mt(e,"x","maxPool");let l=i,u=!1;3===i.rank&&(u=!0,l=Br(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a(Fr(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const c=Ar(l.shape,t,o,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),o=e.concat(r,s),a=t.map((e,t)=>(e-o[t]%e)%e),i=s.map((e,t)=>e+a[t]),l=t.map((e,t)=>[r[t],i[t]]),u=t.map((e,t)=>[0,a[t]]);return[l,u]}([c.inHeight,c.inWidth],h,d),m=p?r:"valid",b=p?l:Bo(l,h,f),y=("avg"===n?()=>Pr(b,t,o,m):()=>po(b,t,o,m))(),w=p?y:Ur(y,h,g);return u?Br(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});const Oo=yt({pow_:function(e,t){let n=mt(e,"base","pow"),r=mt(t,"exp","pow");[n,r]=tt(n,r);const s={a:n,b:r};return ut.runKernel("Pow",s)}});const Lo=yt({prelu_:function(e,t){const n={x:mt(e,"x","prelu"),alpha:mt(t,"alpha","prelu")};return ut.runKernel("Prelu",n)}});const zo=yt({prod_:function(e,t=null,n=!1){let r=mt(e,"x","prod");"bool"===r.dtype&&(r=on(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return ut.runKernel("Prod",s,o)}});const qo=yt({rand_:function(e,t,n){const r=c(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return ut.makeTensor(s,e,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function Ko(e,t){return e(t={exports:{}},t.exports),t.exports}var Wo=Ko((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new r(e),o=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.alea=o}(0,e,!1)})),Uo=Ko((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor128=o}(0,e,!1)})),Go=Ko((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorwow=o}(0,e,!1)})),Vo=Ko((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.x&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorshift7=o}(0,e,!1)})),Ho=Ko((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,o=t.i;return t.w=r=r+1640531527|0,n=s[o+34&127],e=s[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[o]=n^e,t.i=o,n+(r^r>>>16)|0},function(e,t){var n,r,s,o,a,i=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,o=-32;o<l;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=a+1640531527|0,s=0==(n=i[127&o]^=r+a)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,o=512;o>0;--o)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=a,e.X=i,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.X&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor4096=o}(0,e,!1)})),jo=Ko((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.tychei=o}(0,e,!1)})),Jo=Ko((function(e){!function(t,n){var r,s=this,o=n.pow(256,6),a=n.pow(2,52),i=2*a;function l(e,l,p){var f=[],g=h(function e(t,n){var r,s=[],o=typeof t;if(n&&"object"==o)for(r in t)try{s.push(e(t[r],n-1))}catch(e){}return s.length?s:"string"==o?t:t+"\0"}((l=1==l?{entropy:!0}:l||{}).entropy?[e,d(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(256):(e=new Uint8Array(256),(s.crypto||s.msCrypto).getRandomValues(e)),d(e)}catch(e){var n=s.navigator,o=n&&n.plugins;return[+new Date,s,o,s.screen,d(t)]}}():e,3),f),m=new u(f),b=function(){for(var e=m.g(6),t=o,n=0;e<a;)e=256*(e+n),t*=256,n=m.g(1);for(;e>=i;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|m.g(4)},b.quick=function(){return m.g(4)/4294967296},b.double=b,h(d(m.S),t),(l.pass||p||function(e,t,r,s){return s&&(s.S&&c(s,m),e.state=function(){return c(m,{})}),r?(n.random=e,t):e})(b,g,"global"in l?l.global:this==n,l.state)}function u(e){var t,n=e.length,r=this,s=0,o=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<256;)a[s]=s++;for(s=0;s<256;s++)a[s]=a[o=255&o+e[s%n]+(t=a[s])],a[o]=t;(r.g=function(e){for(var t,n=0,s=r.i,o=r.j,a=r.S;e--;)t=a[s=255&s+1],n=256*n+a[255&(a[s]=a[o=255&o+t])+(a[o]=t)];return r.i=s,r.j=o,n})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var n,r=e+"",s=0;s<r.length;)t[255&s]=255&(n^=19*t[255&s])+r.charCodeAt(s++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=l,h(n.random(),t),e.exports){e.exports=l;try{r=require("crypto")}catch(e){}}}([],Math)}));Jo.alea=Wo,Jo.xor128=Uo,Jo.xorwow=Go,Jo.xorshift7=Vo,Jo.xor4096=Ho,Jo.tychei=jo;var Zo=Jo.alea;class Yo{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=Zo(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,o;do{r=2*this.random()-1,s=2*this.random()-1,o=r*r+s*s}while(o>=1||0===o);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Xo{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Zo(s.toString()),this.randn=new Yo(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),s=this.randu(),s<t||Math.log(s)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Qo{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Zo(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ea=yt({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const o=new Xo(t,n,r,s),a=sn(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const ta=yt({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const o=new Yo(t,n,r,!1,s),a=sn(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const na=yt({randomUniform_:function(e,t=0,n=1,r="float32",s){const o=sn(e,r),a=new Qo(t,n,null,s);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});function ra(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ut.runKernel("Range",{},s)}const sa=yt({real_:function(e){const t={input:mt(e,"input","real")};return ut.runKernel("Real",t)}});const oa=yt({reciprocal_:function(e){const t={x:mt(e,"x","reciprocal")};return ut.runKernel("Reciprocal",t)}});const aa=yt({relu_:function(e){const t={x:mt(e,"x","relu")};return ut.runKernel("Relu",t)}});const ia=yt({relu6_:function(e){const t={x:mt(e,"x","relu6")};return ut.runKernel("Relu6",t)}});const la=yt({reverse_:function(e,t){const n={x:mt(e,"x","reverse")},r={dims:t};return ut.runKernel("Reverse",n,r)}});const ua=yt({reverse1d_:function(e){const t=mt(e,"x","reverse");return a(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),la(t,0)}});const ca=yt({reverse2d_:function(e,t){const n=mt(e,"x","reverse");return a(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),la(n,t)}});const ha=yt({reverse3d_:function(e,t){const n=mt(e,"x","reverse");return a(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),la(n,t)}});const da=yt({reverse4d_:function(e,t){const n=mt(e,"x","reverse");return a(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),la(n,t)}});const pa=yt({round_:function(e){const t={x:mt(e,"x","round")};return ut.runKernel("Round",t)}});const fa=yt({rsqrt_:function(e){const t={x:mt(e,"x","rsqrt")};return ut.runKernel("Rsqrt",t)}});function ga(e,t){if((k(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&k(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return kt(e,[],[],t)}const ma=yt({selu_:function(e){const t={x:mt(e,"x","selu")};return ut.runKernel("Selu",t)}});const ba=yt({separableConv2d_:function(e,t,n,r,s,o=[1,1],i="NHWC"){const l=mt(e,"x","separableConv2d"),u=mt(t,"depthwiseFilter","separableConv2d"),c=mt(n,"pointwiseFilter","separableConv2d");let h=l,d=!1;if(3===l.rank&&(d=!0,h=Br(l,[1,l.shape[0],l.shape[1],l.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),a(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),a(4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),a(1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),a(1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const p=u.shape[2],f=u.shape[3];a(c.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${c.shape[2]}.`);const g=gs(h,u,r,s,i,o),m=rs(g,c,1,"valid",i);return d?Br(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const ya=async function(e,t){const n=mt(e,"x","setdiff1d"),r=mt(t,"y","setdiff1d");a(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),a(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),a(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),o=await r.data(),i=new Set(o);let l=0;for(let e=0;e<s.length;e++)i.has(s[e])||l++;const u=new We([l],n.dtype),c=new We([l],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};const wa=yt({sign_:function(e){const t={x:mt(e,"x","sign")};return ut.runKernel("Sign",t)}});const ka=yt({sin_:function(e){const t={x:mt(e,"x","sin")};return ut.runKernel("Sin",t)}});const va=yt({sinh_:function(e){const t={x:mt(e,"x","sinh")};return ut.runKernel("Sinh",t)}});const xa=yt({slice1d_:function(e,t,n){const r=mt(e,"x","slice1d");return a(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),qr(r,[t],[n])}});const Ea=yt({slice2d_:function(e,t,n){const r=mt(e,"x","slice2d");return a(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),qr(r,t,n)}});const Sa=yt({slice3d_:function(e,t,n){const r=mt(e,"x","slice3d");return a(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),qr(r,t,n)}});const Aa=yt({slice4d_:function(e,t,n){const r=mt(e,"x","slice4d");return a(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),qr(r,t,n)}});const _a=yt({softmax_:function(e,t=-1){const n=mt(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ut.runKernel("Softmax",r,s)}});const Na=yt({fft_:function(e){a("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ut.runKernel("FFT",t)}});const Ma=yt({ifft_:function(e){a("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ut.runKernel("IFFT",t)}});const Ia=yt({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Br(e,[n,t]);r=Ma(s)}else{const s=[n,2*(t-1)],o=Br(sa(e),[n,t]),a=Br(Os(e),[n,t]),i=la(qr(o,[0,1],[n,t-2]),1),l=hr(la(qr(a,[0,1],[n,t-2]),1),ga(-1)),u=Lr([o,i],1),c=Lr([a,l],1),h=Br(wt(u,c),[s[0],s[1]]);r=Ma(h)}if(r=sa(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Br(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const $a=yt({split_:function(e,t,n=0){const r={x:mt(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ut.runKernel("SplitV",r,s)}});const Ta=yt({rfft_:function(e,t){a("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),o=e.shape.map(e=>e);o[e.shape.length-1]=t,s=qr(e,r,o),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=Lr([e,yo(r)],e.shape.length-1),n=t}else s=e;const o=xs(s),i=Br(wt(s,o),[r,n]),l=Na(i),u=Math.floor(n/2)+1,c=sa(l),h=Os(l),d=$a(c,[u,n-u],c.shape.length-1),p=$a(h,[u,n-u],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,Br(wt(d[0],p[0]),f)}});const Da=yt({sqrt_:function(e){const t={x:mt(e,"x","sqrt")};return ut.runKernel("Sqrt",t)}});const Ra=yt({squaredDifference_:function(e,t){let n=mt(e,"a","squaredDifference"),r=mt(t,"b","squaredDifference");[n,r]=tt(n,r),ws(n.shape,r.shape);const s={a:n,b:r};return ut.runKernel("SquaredDifference",s,{})}});const Fa=yt({squeeze_:function(e,t){const n=mt(e,"x","squeeze");return Br(n,g(n.shape,t).newShape)}});const Ca=yt({stack_:function(e,t=0){const n=bt(e,"tensors","stack","string_or_numeric");a(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&a(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:t};return ut.runKernel("Pack",r,s)}});const Ba=yt({step_:function(e,t=0){const n={x:mt(e,"x","step")},r={alpha:t};return ut.runKernel("Step",n,r)}});const Pa=yt({stridedSlice_:function(e,t,n,r,s=0,o=0,a=0,i=0,l=0){const u={x:mt(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return ut.runKernel("StridedSlice",u,c)}});const Oa=yt({tan_:function(e){const t={x:mt(e,"x","tan")};return ut.runKernel("Tan",t)}});function La(e,t){l(e);const n=ft(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return kt(e,null,n,t)}function za(e,t,n){if(l(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ft(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return kt(e,t,r,n)}const qa=yt({topk_:function(e,t=1,n=!0){const r=mt(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+t);const o={x:r},a={k:t,sorted:n},[i,l]=ut.runKernel("TopK",o,a);return{values:i,indices:l}}});const Ka=yt({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new Yo(t,n,r,!0,s),a=sn(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const Wa=yt({unique_:function(e,t=0){const n=mt(e,"x","unique","string_or_numeric");a(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[o,i]=ut.runKernel("Unique",r,s);return{values:o,indices:i}}});const Ua=yt({unsortedSegmentSum_:function(e,t,n){const r=mt(e,"x","unsortedSegmentSum"),s=mt(t,"segmentIds","unsortedSegmentSum","int32");a(d(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},i={numSegments:n};return ut.runKernel("UnsortedSegmentSum",o,i)}});const Ga=yt({unstack_:function(e,t=0){const n=mt(e,"x","unstack","string_or_numeric");a(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:t};return ut.runKernel("Unpack",r,s)}});function Va(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=sn(e,"int32"),s=sn([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const o=r.indexToLoc(n[t]),a=t*e.length;s.values.set(o,a)}return s.toTensor()}const Ha=async function(e){const t=mt(e,"condition","whereAsync","bool"),n=await t.data(),r=Va(t.shape,n);return e!==t&&t.dispose(),r};const ja=async function(e,t,n){const r=mt(e,"tensor","boolMask"),s=mt(t,"mask","boolMask","bool"),o=null==n?0:n,l=s.rank,u=r.shape;a(l>0,()=>"mask cannot be scalar"),i(u.slice(o,o+l),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let e=o;e<o+l;e++)c*=u[e];const h=u.slice(0,o).concat([c],u.slice(o+l)),d=Br(r,h),p=Br(s,[-1]),f=await Ha(p),g=Fa(f,[1]),m=Cs(d,g,o);return e!==r&&r.dispose(),t!==s&&s.dispose(),g.dispose(),d.dispose(),p.dispose(),f.dispose(),m};const Ja=yt({norm_:function(e,t="euclidean",n=null,r=!1){const s=function e(t,n,r=null){if(0===t.rank)return dr(t);if(1!==t.rank&&null===r)return e(Br(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return no(dr(t),r);if(n===1/0)return eo(dr(t),r);if(n===-1/0)return ko(dr(t),r);if("euclidean"===n||2===n)return Da(no(Oo(dr(t),ga(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return eo(no(dr(t),r[0]),r[1]-1);if(n===1/0)return eo(no(dr(t),r[1]),r[0]);if(n===-1/0)return ko(no(dr(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Da(no(So(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=mt(e,"x","norm"),t,n);let o=s.shape;if(r){const t=f(n,e.shape);o=ao(s.shape,t)}return Br(s,o)}});const Za=yt({movingAverage_:function(e,t,n,r,s=!0){const o=mt(e,"v","movingAverage"),i=mt(t,"x","movingAverage"),l=mt(n,"decay","movingAverage");nt(o,i),a(h(o.shape,i.shape),()=>"Shape mismatch in v and x");const u=ga(1),c=to(u,l);let d=hr(to(i,o),c);if(s){a(null!=r,()=>"When using zeroDebias: true, step is required.");const e=mt(r,"step","movingAverage");d=cr(d,to(u,Oo(l,e)))}return lr(o,d)}});const Ya=yt({scatterND_:function(e,t,n){const r=mt(e,"indices","scatterND","int32"),s=mt(t,"updates","scatterND");Bn(s,r,n);const o={indices:r,updates:s},a={shape:n};return ut.runKernel("ScatterNd",o,a)}});const Xa=yt({sparseToDense_:function(e,t,n,r=0){const s=mt(e,"sparseIndices","sparseToDense","int32"),o=mt(t,"sparseValues","sparseToDense"),a=mt(r,"defaultValue","sparseToDense",o.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,o,n,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},l={outputShape:n};return ut.runKernel("SparseToDense",i,l)}});const Qa=yt({gatherND_:function(e,t){const n=mt(t,"indices","gatherND","int32"),r={params:mt(e,"x","gatherND","string_or_numeric"),indices:n};return ut.runKernel("GatherNd",r)}});const ei=yt({dropout_:function(e,t,n,r){const s=mt(e,"x","dropout");if(a("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),a(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Ve?s.clone():s;const o=function(e,t){if(null==t)return e.shape.slice();if(h(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,l=cr(Fs(lr(na(o,0,1,"float32",r),i)),i);return hr(s,l)}});function ti(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ni(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let o=0;o<e;++o){const a=2*Math.PI*o/(e+r-1);s[o]=t-n*Math.cos(a)}return La(s,"float32")}const ri=async function(e,t,n=1){const r=mt(e,"predictions","inTopK"),s=mt(t,"targets","inTopK");a(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),a(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),i(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];a(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const l=await r.data(),u=await s.data(),[c,h]=[l.length/o,o],d=m("bool",c);for(let e=0;e<c;e++){const t=e*h,r=l.subarray(t,t+h),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort((e,t)=>t.value-e.value),d[e]=0;for(let t=0;t<n;t++)if(s[t].index===u[e]){d[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),vt(d,s.shape,"bool")};const si=yt({conv2DBackpropFilter_:function(e,t,n,r,s,o="NHWC",i){let l=e;3===e.rank&&(l=Br(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Br(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a(4===l.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+l.shape+"."),a(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),a(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const c="NHWC"===o?l.shape[3]:l.shape[1],h="NHWC"===o?u.shape[3]:u.shape[1];a(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),a(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),null!=i&&a(d(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const p={x:l,dy:u},f={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,filterShape:n};return ut.runKernel("Conv2DBackpropFilter",p,f)}});function oi(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return hr(e,Ba(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ai(e,t){let n=t;const r=ys(e.shape,t.shape);return r.length>0&&(n=no(n,r)),Br(n,e.shape)}function ii(e,t,n,r){if("linear"===t)return e;if("relu"===t)return aa(e);if("elu"===t)return _s(e);if("relu6"===t)return ia(e);if("prelu"===t)return Lo(e,n);if("leakyrelu"===t)return Ks(e,r);if("sigmoid"===t)return zr(e);throw new Error(`Unknown fused activation ${t}.`)}const li=(e,t)=>!(e>0)||"linear"===t;const ui=yt({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(u=u||"linear",!1===li(ut.state.gradientDepth,u)){let a=rs(e,t,n,r,s,o,i);return null!=l&&(a=lr(a,l)),ii(a,u,c,h)}const p=mt(e,"x","conv2d"),f=mt(t,"filter","conv2d");let g=p,m=!1;3===p.rank&&(m=!0,g=Br(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a(4===g.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+g.rank+"."),a(4===f.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=i&&a(d(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),a(g.shape[3]===f.shape[2],()=>`Error in conv2d: depth of input (${g.shape[3]}) must match input depth for filter ${f.shape[2]}.`),a(Fr(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),a("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const b=_r(g.shape,f.shape,n,o,r,i);let y,w;null!=l&&(y=mt(l,"bias","fused conv2d"),[y]=tt(y,p),ws(b.outShape,y.shape)),null!=c&&(w=mt(c,"prelu weights","fused conv2d"));const k=(e,t)=>{const[s,i,l,c]=t,h=oi(e,l,u);a(Rr(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const d=[os(i.shape,h,s,n,r),si(i,h,s.shape,n,r)];if(null!=c){const e=ai(c,h);d.push(e)}return d},v={x:g,filter:f,bias:y,preluActivationWeights:w},x={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==l){return Js((e,t,n)=>{let r=ut.runKernel("FusedConv2D",v,x);return n([t,e,r]),m&&(r=Br(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}})(g,f)}return Js((e,t,n,r)=>{let s=ut.runKernel("FusedConv2D",v,x);return r([t,e,s,n]),m&&(s=Br(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}})(g,f,y)}});const ci=yt({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,o=[1,1],a){let i=e;3===e.rank&&(i=Br(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Br(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:i,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:n};return ut.runKernel("DepthwiseConv2dNativeBackpropFilter",u,c)}});const hi=yt({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,o=[1,1],a){let i=t,l=!1;3===t.rank&&(l=!0,i=Br(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:e},h=ut.runKernel("DepthwiseConv2dNativeBackpropInput",u,c);return l?Br(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const di=yt({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(!1===li(ut.state.gradientDepth,u)){let a=gs(e,t,n,r,s,o,i);return null!=l&&(a=lr(a,l)),ii(a,u,c,h)}const p=mt(e,"x","depthwiseConv2d"),f=mt(t,"filter","depthwiseConv2d");let g=p,m=!1;3===p.rank&&(m=!0,g=Br(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a(4===g.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`),a(4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),a(g.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==o&&(o=[1,1]),a(Fr(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=i&&a(d(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const b=_r(g.shape,f.shape,n,o,r,i,!0);let y,w;null!=l&&(y=mt(l,"bias","fused conv2d"),[y]=tt(y,p),ws(b.outShape,y.shape)),null!=c&&(w=mt(c,"prelu weights","fused depthwiseConv2d"));const k=(e,t)=>{a(Rr(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[s,l,c,h]=t,d=oi(e,c,u),p=hi(l.shape,d,s,n,r,o,i),f=ci(l,d,s.shape,n,r,o,i);if(null!=h){return[p,f,ai(y,d)]}return[p,f]},v={x:g,filter:f,bias:y,preluActivationWeights:w},x={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==l){return Js((e,t,n)=>{let r=ut.runKernel("FusedDepthwiseConv2D",v,x);return n([t,e,r]),m&&(r=Br(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}})(g,f)}return Js((e,t,n,r)=>{let s=ut.runKernel("FusedDepthwiseConv2D",v,x);return r([t,e,s,n]),m&&(s=Br(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}})(g,f,y)}});const pi=yt({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:l}){if(!1===li(ut.state.gradientDepth,o)){let a=xn(e,t,n,r);return null!=s&&(a=lr(a,s)),ii(a,o,i,l)}let u=mt(e,"a","fused matMul"),d=mt(t,"b","fused matMul");[u,d]=tt(u,d);const p=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=r?d.shape[d.rank-1]:d.shape[d.rank-2],g=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=r?d.shape[d.rank-2]:d.shape[d.rank-1],b=u.shape.slice(0,-2),y=d.shape.slice(0,-2),w=c(b),k=c(y);a(u.rank>=2&&d.rank>=2&&u.rank===d.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${d.rank}.`),a(h(b,y),()=>`Error in fused matMul: outer dimensions (${b}) and (${y}) of Tensors with shapes ${u.shape} and `+d.shape+" must match."),a(p===f,()=>`Error in fused matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${n} and transposeB=${r} must match.`);const v=u.shape.slice(0,-2).concat([g,m]),x=Br(u,n?[w,p,g]:[w,g,p]),E=Br(d,r?[k,m,f]:[k,f,m]);let S,A;null!=s&&(S=mt(s,"bias","fused matMul"),[S]=tt(S,u),ws(v,S.shape)),null!=i&&(A=mt(i,"prelu weights","fused matMul"));const _=(e,t)=>{const[a,i,l,u]=t,c=oi(Br(e,l.shape),l,o);let h,d;if(n||r?!n&&r?(h=xn(c,i,!1,!1),d=xn(c,a,!0,!1)):n&&!r?(h=xn(i,c,!1,!0),d=xn(a,c,!1,!1)):(h=xn(i,c,!0,!0),d=xn(c,a,!0,!0)):(h=xn(c,i,!1,!0),d=xn(a,c,!0,!1)),null!=s){return[h,d,ai(u,c)]}return[h,d]},N={a:x,b:E,bias:S,preluActivationWeights:A},M={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:l};if(null==s){return Js((e,t,n)=>{const r=ut.runKernel("_FusedMatMul",N,M);return n([e,t,r]),{value:Br(r,v),gradFunc:_}})(x,E)}return Js((e,t,n,r)=>{const s=ut.runKernel("_FusedMatMul",N,M);return r([e,t,s,n]),{value:Br(s,v),gradFunc:_}})(x,E,S)}});var fi=Object.freeze({__proto__:null,conv2d:ui,depthwiseConv2d:di,matMul:pi});const gi=yt({hammingWindow_:function(e){return ni(e,.54,.46)}});const mi=yt({hannWindow_:function(e){return ni(e,.5,.5)}});const bi=yt({frame_:function(e,t,n,r=!1,s=0){let o=0;const a=[];for(;o+t<=e.size;)a.push(qr(e,o,t)),o+=n;if(r)for(;o<e.size;){const r=o+t-e.size,i=Lr([qr(e,o,t-r),Rs([r],s)]);a.push(i),o+=n}return 0===a.length?za([],[0,t]):Br(Lr(a),[a.length,t])}});const yi=yt({stft_:function(e,t,n,r,s=mi){null==r&&(r=ti(t));const o=bi(e,t,n),a=hr(o,s(t));return Ta(a,r)}});const wi=yt({cropAndResize_:function(e,t,n,r,s="bilinear",o=0){const i=mt(e,"image","cropAndResize"),l=mt(t,"boxes","cropAndResize","float32"),u=mt(n,"boxInd","cropAndResize","int32"),c=l.shape[0];a(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),a(2===l.rank&&4===l.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${l.shape}.`),a(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${l.shape}.`),a(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),a(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),a("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s);const h={image:i,boxes:l,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return ut.runKernel("CropAndResize",h,d)}});const ki=yt({flipLeftRight_:function(e){const t=mt(e,"image","flipLeftRight","float32");a(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return ut.runKernel("FlipLeftRight",n,{})}});const vi=yt({rotateWithOffset_:function(e,t,n=0,r=.5){const s=mt(e,"image","rotateWithOffset","float32");a(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},i={radians:t,fillValue:n,center:r};return ut.runKernel("RotateWithOffset",o,i)}});function xi(e,t,n,r,s,o){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);const i=e.shape[0];return n=Math.min(n,i),a(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),a(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),a(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),a(1===t.rank,()=>"scores must be a 1D tensor"),a(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),a(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}const Ei=yt({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=mt(e,"boxes","nonMaxSuppression"),a=mt(t,"scores","nonMaxSuppression"),i=xi(o,a,n,r,s),l={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return ut.runKernel("NonMaxSuppressionV3",{boxes:o,scores:a},l)}});function Si(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}(e,t,n||Ai)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ai(e,t){return e>t?1:e<t?-1:0}function _i(e,t,n,r,s){return Ii(e,t,n,r,s,0)}function Ni(e,t,n,r,s,o){return Ii(e,t,n,r,s,0,!1,o,!0)}function Mi(e,t,n,r,s,o){return Ii(e,t,n,r,s,o,!0)}function Ii(e,t,n,r,s,o,a=!1,i=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Di);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:o,suppressBeginIndex:a}=t;if(n<s)break;let i=!1;for(let n=h.length-1;n>=a;--n){const a=$i(e,o,h[n]);if(a>=r){i=!0;break}if(t.score=t.score*Ti(r,c,a),t.score<=s)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(o),d.push(t.score)):t.score>s&&Si(u,t,Di))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function $i(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(o,u),m=Math.max(a,c),b=Math.min(i,h),y=Math.min(l,d),w=Math.max(b-g,0)*Math.max(y-m,0);return w/(p+f-w)}function Ti(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Di(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Ri=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=mt(e,"boxes","nonMaxSuppressionAsync"),a=mt(t,"scores","nonMaxSuppressionAsync"),i=xi(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const l=await Promise.all([o.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=_i(u,c,n,r,s);return o!==e&&o.dispose(),a!==t&&a.dispose(),La(h,"int32")};const Fi=yt({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=mt(e,"boxes","nonMaxSuppression"),i=mt(t,"scores","nonMaxSuppression"),l=xi(a,i,n,r,s,o),u={boxes:a,scores:i},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:o=l.softNmsSigma},h=ut.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Ci=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=mt(e,"boxes","nonMaxSuppressionAsync"),i=mt(t,"scores","nonMaxSuppressionAsync"),l=xi(a,i,n,r,s,o);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([a.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Mi(c,h,n,r,s,o);return a!==e&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:La(d,"int32"),selectedScores:La(p)}};const Bi=yt({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=mt(e,"boxes","nonMaxSuppression"),i=mt(t,"scores","nonMaxSuppression"),l=xi(a,i,n,r,s,null),u={boxes:a,scores:i},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:o},h=ut.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Pi=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=mt(e,"boxes","nonMaxSuppressionAsync"),i=mt(t,"scores","nonMaxSuppressionAsync"),l=xi(a,i,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:g}=Ni(d,p,u,c,h,o);return a!==e&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:La(f,"int32"),validOutputs:ga(g,"int32")}};const Oi=yt({resizeBilinear_:function(e,t,n=!1,r=!1){const s=mt(e,"images","resizeBilinear");a(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),a(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),a(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;3===s.rank&&(i=!0,o=Br(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=ut.runKernel("ResizeBilinear",l,u);return i?Br(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Li=yt({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=mt(e,"images","resizeNearestNeighbor");a(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),a(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),a("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),a(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;3===s.rank&&(i=!0,o=Br(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=ut.runKernel("ResizeNearestNeighbor",l,u);return i?Br(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const zi=yt({threshold_:function(e,t="binary",n=!1,r=.5){const s=mt(e,"image","threshold"),o=s.shape[0]*s.shape[1];let i,l,u,c,h=hr(La([r]),255);if(a(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),a(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),a("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),a("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===s.shape[2]){[i,l,u]=$a(s,[1,1,1],-1);const e=hr(i,.2989),t=hr(l,.587),n=hr(u,.114);c=lr(lr(e,t),n)}else c=e;if("otsu"===t){h=function(e,t){let n,r,s,o,a,i,l=La([-1]),u=La([0]),c=La([0]);for(let h=0;h<e.size-1;h++){n=qr(e,0,h+1),r=qr(e,h+1),a=cr(no(n),t),i=cr(no(r),t);const d=no(hr(n,ra(0,n.size)));s=cr(d,no(n));const p=Rs(r.shape,n.size),f=lr(ra(0,r.size),p),g=hr(r,f);o=cr(no(g),no(r));const m=to(s,o),b=to(s,o),y=hr(a,i);c=hr(hr(y,m),b);const w=Bs(c,u);u=vs(w,c,u),l=vs(w,La([h]),l)}return l}(Jr(on(pa(c),"int32"),vt([]),256),o)}const d=n?Us(c,h):Bs(c,h);return on(hr(d,255),"int32")}});const qi=yt({transform_:function(e,t,n="nearest",r="constant",s=0,o){const i=mt(e,"image","transform","float32"),l=mt(t,"transforms","transform","float32");a(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),a(2===l.rank&&(l.shape[0]===i.shape[0]||1===l.shape[0])&&8===l.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),a(null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:i,transforms:l},c={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return ut.runKernel("Transform",u,c)}});const Ki=yt({bandPart_:function(e,t,n){a(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),a(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=mt(e,"a","bandPart");a(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,i]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=o),n<0&&(n=i);const l=Br(ra(0,o,1,"int32"),[-1,1]),u=ra(0,i,1,"int32"),c=to(l,u),h=lo(Us(c,ga(+t,"int32")),Ps(c,ga(-n,"int32"))),d=yo([o,i],r.dtype);return Br(Ca(Ga(Br(r,[-1,o,i])).map(e=>vs(h,e,d))),s)}});const Wi=yt({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,a(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)a(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=$a(e,e.shape[0],0).map(e=>Fa(e,[0]));a(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ut.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=hr(no(hr(n[r],e)),n[r]);e=to(e,t)}return cr(e,Ja(e,"euclidean"))}));return t?Ca(n,0):n}});function Ui(e,t=!1){return ut.tidy(()=>{a(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=Ds(n),o=an(e);const i=za([[1]],[1,1]);let l=an(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=o,a=l,u=s;[l,o,s]=ut.tidy(()=>{const t=qr(o,[e,e],[n-e,1]),a=Ja(t),u=qr(o,[e,e],[1,1]),c=vs(Bs(u,0),za([[-1]]),za([[1]])),h=to(u,hr(c,a)),d=cr(t,h);l=1===d.shape[0]?an(i):Lr([i,qr(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Ys(cr(xn(c,h),a)),f=qr(o,[e,0],[n-e,r]),g=hr(p,l),m=Sn(l);if(0===e)o=to(f,xn(g,xn(m,f)));else{const t=to(f,xn(g,xn(m,f)));o=Lr([qr(o,[0,0],[e,r]),t],0)}const b=Sn(g),y=qr(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=to(y,xn(xn(y,l),b));else{const t=to(y,xn(xn(y,l),b));s=Lr([qr(s,[0,0],[n,e]),t],1)}return[l,o,s]}),ar([t,a,u])}return!t&&n>r&&(s=qr(s,[0,0],[n,r]),o=qr(o,[0,0],[r,r])),[s,o]})}const Gi=yt({qr_:function(e,t=!1){if(a(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Ui(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Ga(Br(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],o=[];r.forEach(e=>{const[n,r]=Ui(e,t);s.push(n),o.push(r)});return[Br(Ca(s,0),e.shape),Br(Ca(o,0),e.shape)]}}});var Vi;(Vi=e.Reduction||(e.Reduction={}))[Vi.NONE=0]="NONE",Vi[Vi.MEAN=1]="MEAN",Vi[Vi.SUM=2]="SUM",Vi[Vi.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Hi=yt({computeWeightedLoss_:function(t,n,r=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const s=mt(t,"losses","computeWeightedLoss");let o=null;null!=n&&(o=mt(n,"weights","computeWeightedLoss"));const a=null==o?s:hr(s,o);if(r===e.Reduction.NONE)return a;if(r===e.Reduction.SUM)return no(a);if(r===e.Reduction.MEAN){if(null==o)return bo(a);{const e=s.size/o.size,t=cr(no(a),no(o));return e>1?cr(t,ga(e)):t}}if(r===e.Reduction.SUM_BY_NONZERO_WEIGHTS){if(null==o)return cr(no(a),ga(s.size));{const e=hr(o,wo(s.shape)),t=on(no(Mo(e,ga(0))),"float32");return cr(no(a),t)}}throw Error("Unknown reduction: "+r)}});const ji=yt({absoluteDifference_:function(t,n,r,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=mt(t,"labels","absoluteDifference"),a=mt(n,"predictions","absoluteDifference");let l=null;null!=r&&(l=mt(r,"weights","absoluteDifference")),i(o.shape,a.shape,"Error in absoluteDifference: ");const u=dr(to(o,a));return Hi(u,l,s)}});const Ji=yt({cosineDistance_:function(t,n,r,s,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=mt(t,"labels","cosineDistance"),l=mt(n,"predictions","cosineDistance");let u=null;null!=s&&(u=mt(s,"weights","cosineDistance")),i(a.shape,l.shape,"Error in cosineDistance: ");const c=ga(1),h=to(c,no(hr(a,l),r,!0));return Hi(h,u,o)}});const Zi=yt({hingeLoss_:function(t,n,r,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let o=mt(t,"labels","hingeLoss");const a=mt(n,"predictions","hingeLoss");let l=null;null!=r&&(l=mt(r,"weights","hingeLoss")),i(o.shape,a.shape,"Error in hingeLoss: ");const u=ga(1);o=to(hr(ga(2),o),u);const c=aa(to(u,hr(o,a)));return Hi(c,l,s)}});const Yi=yt({huberLoss_:function(t,n,r,s=1,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=mt(t,"labels","huberLoss"),l=mt(n,"predictions","huberLoss");let u=null;null!=r&&(u=mt(r,"weights","huberLoss")),i(a.shape,l.shape,"Error in huberLoss: ");const c=ga(s),h=dr(to(l,a)),d=vo(h,c),p=to(h,d),f=lr(hr(ga(.5),So(d)),hr(c,p));return Hi(f,u,o)}});const Xi=yt({logLoss_:function(t,n,r,s=1e-7,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=mt(t,"labels","logLoss"),l=mt(n,"predictions","logLoss");let u=null;null!=r&&(u=mt(r,"weights","logLoss")),i(a.shape,l.shape,"Error in logLoss: ");const c=ga(1),h=ga(s),d=Ys(hr(a,Vs(lr(l,h)))),p=hr(to(c,a),Vs(lr(to(c,l),h))),f=to(d,p);return Hi(f,u,o)}});const Qi=yt({meanSquaredError_:function(t,n,r,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=mt(t,"labels","meanSquaredError"),a=mt(n,"predictions","meanSquaredError");let l=null;null!=r&&(l=mt(r,"weights","meanSquaredError")),i(o.shape,a.shape,"Error in meanSquaredError: ");const u=Ra(o,a);return Hi(u,l,s)}});const el=yt({sigmoidCrossEntropy_:function(t,n,r,s=0,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let a=mt(t,"multiClassLabels","sigmoidCrossEntropy");const l=mt(n,"logits","sigmoidCrossEntropy");let u=null;if(null!=r&&(u=mt(r,"weights","sigmoidCrossEntropy")),i(a.shape,l.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=ga(s),t=ga(1),n=ga(.5);a=lr(hr(a,to(t,e)),hr(n,e))}const c=function(e,t){const n=mt(e,"labels","sigmoidCrossEntropyWithLogits"),r=mt(t,"logits","sigmoidCrossEntropyWithLogits");i(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=aa(r),o=hr(r,n),a=Hs(Ms(Ys(dr(r))));return lr(to(s,o),a)}(a,l);return Hi(c,u,o)}});const tl=yt({softmaxCrossEntropy_:function(t,n,r,s=0,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let a=mt(t,"onehotLabels","softmaxCrossEntropy");const l=mt(n,"logits","softmaxCrossEntropy");let u=null;if(null!=r&&(u=mt(r,"weights","softmaxCrossEntropy")),i(a.shape,l.shape,"Error in softmaxCrossEntropy: "),s>0){const e=ga(s),t=ga(1),n=ga(a.shape[1]);a=lr(hr(a,to(t,e)),cr(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return Js((e,t,r)=>{const s=io(t,[n],!0),o=to(on(t,"float32"),s);r([e,o]);const a=Ys(hr(o,e));return{value:no(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,o=ao(e.shape,[n]);return[hr(Br(e,o),to(on(r,"float32"),Ms(s))),hr(Br(e,o),to(Ms(s),on(r,"float32")))]}}})(e,t)}(a,l);return Hi(c,u,o)}});const nl=yt({sparseFillEmptyRows_:function(e,t,n,r){const s=mt(e,"indices","sparseFillEmptyRows"),o=mt(t,"values","sparseFillEmptyRows"),a=mt(n,"denseShape","sparseFillEmptyRows"),i=mt(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==s.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+s.shape);if(1!==o.rank)throw new Error("Values should be Tensor1D but received shape "+o.shape);if(1!==a.rank)throw new Error("Dense shape should be Tensor1D but received shape "+a.shape);if(0!==i.rank)throw new Error("Default value should be a scalar but received shape "+i.shape);const l={indices:s,values:o,denseShape:a,defaultValue:i},u=ut.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const rl=yt({sparseReshape_:function(e,t,n){const r=mt(e,"inputIndices","sparseReshape"),s=mt(t,"inputShape","sparseReshape"),o=mt(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==s.rank)throw new Error("Input shape should be Tensor1D but received shape "+s.shape);if(1!==o.rank)throw new Error("New shape should be Tensor1D but received shape "+o.shape);const a={inputIndices:r,inputShape:s,newShape:o},i=ut.runKernel("SparseReshape",a);return{outputIndices:i[0],outputShape:i[1]}}});const sl=yt({sparseSegmentMean_:function(e,t,n){const r=mt(e,"data","sparseSegmentMean"),s=mt(t,"indices","sparseSegmentMean"),o=mt(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+s.shape);if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+o.shape);const a={data:r,indices:s,segmentIds:o};return ut.runKernel("SparseSegmentMean",a)}});const ol=yt({sparseSegmentSum_:function(e,t,n){const r=mt(e,"data","sparseSegmentSum"),s=mt(t,"indices","sparseSegmentSum"),o=mt(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+s.shape);if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+o.shape);const a={data:r,indices:s,segmentIds:o};return ut.runKernel("SparseSegmentSum",a)}});const al=yt({stringNGrams_:function(e,t,n,r,s,o,a,i){const l=mt(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error("Data must be a vector, saw: "+l.shape);const u=mt(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:l,dataSplits:u},d=ut.runKernel("StringNGrams",h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});const il=yt({stringSplit_:function(e,t,n=!0){const r=mt(e,"input","stringSplit","string"),s=mt(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==s.rank)throw new Error("Delimiter should be a scalar but received shape "+s.shape);const o={skipEmpty:n},a={input:r,delimiter:s},i=ut.runKernel("StringSplit",a,o);return{indices:i[0],values:i[1],shape:i[2]}}});const ll=yt({stringToHashBucketFast_:function(e,t){const n=mt(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ut.runKernel("StringToHashBucketFast",s,r)}}),ul={fft:Na,ifft:Ma,rfft:Ta,irfft:Ia},cl={hammingWindow:gi,hannWindow:mi,frame:bi,stft:yi},hl={flipLeftRight:ki,resizeNearestNeighbor:Li,resizeBilinear:Oi,rotateWithOffset:vi,cropAndResize:wi,nonMaxSuppression:Ei,nonMaxSuppressionAsync:Ri,nonMaxSuppressionWithScore:Fi,nonMaxSuppressionWithScoreAsync:Ci,nonMaxSuppressionPadded:Bi,nonMaxSuppressionPaddedAsync:Pi,threshold:zi,transform:qi},dl={bandPart:Ki,gramSchmidt:Wi,qr:Gi},pl={absoluteDifference:ji,computeWeightedLoss:Hi,cosineDistance:Ji,hingeLoss:Zi,huberLoss:Yi,logLoss:Xi,meanSquaredError:Qi,sigmoidCrossEntropy:el,softmaxCrossEntropy:tl},fl={sparseFillEmptyRows:nl,sparseReshape:rl,sparseSegmentMean:sl,sparseSegmentSum:ol},gl={stringNGrams:al,stringSplit:il,stringToHashBucketFast:ll};class ml extends Yn{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return ar(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return js(e,t)}dispose(){null!=this.iterations_&&ar(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ga(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ml,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class bl extends ml{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ut.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ut.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:or(()=>xs(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:or(()=>xs(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;or(()=>{const e=lr(hr(o,this.rho),hr(So(s),1-this.rho)),t=hr(cr(Da(lr(a,this.epsilon)),Da(lr(o,this.epsilon))),s),n=lr(hr(a,this.rho),hr(So(t),1-this.rho));o.assign(e),a.assign(n);const i=lr(hr(t,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ar(this.accumulatedGrads.map(e=>e.variable)),ar(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}bl.className="Adadelta",Qn(bl);class yl extends ml{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ut.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:or(()=>Rs(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable;or(()=>{const e=lr(o,So(s));o.assign(e);const t=lr(hr(cr(s,Da(lr(e,ut.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ar(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}yl.className="Adagrad",Qn(yl);class wl extends ml{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],or(()=>{this.accBeta1=ga(t).variable(),this.accBeta2=ga(n).variable()}),null==r&&(this.epsilon=ut.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);or(()=>{const n=to(1,this.accBeta1),r=to(1,this.accBeta2);t.forEach((t,s)=>{const o=ut.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:or(()=>xs(o).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:t+"/v",variable:or(()=>xs(o).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=lr(hr(i,this.beta1),hr(a,1-this.beta1)),c=lr(hr(l,this.beta2),hr(So(a),1-this.beta2)),h=cr(u,n),d=cr(c,r);i.assign(u),l.assign(c);const p=lr(hr(cr(h,lr(Da(d),this.epsilon)),-this.learningRate),o);o.assign(p)}),this.accBeta1.assign(hr(this.accBeta1,this.beta1)),this.accBeta2.assign(hr(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ar(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&ar(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),or(()=>{this.accBeta1.assign(Oo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Oo(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}wl.className="Adam",Qn(wl);class kl extends ml{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],or(()=>{this.iteration=ga(0).variable(),this.accBeta1=ga(t).variable()}),null==r&&(this.epsilon=ut.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);or(()=>{const n=to(1,this.accBeta1),r=cr(-this.learningRate,lr(hr(this.iteration,this.decay),1));t.forEach((t,s)=>{const o=ut.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:xs(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:t+"/v",variable:xs(o).variable(!1)});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=lr(hr(i,this.beta1),hr(a,1-this.beta1)),c=hr(l,this.beta2),h=dr(a),d=mo(c,h);i.assign(u),l.assign(d);const p=lr(hr(cr(r,n),cr(u,lr(d,this.epsilon))),o);o.assign(p)}),this.iteration.assign(lr(this.iteration,1)),this.accBeta1.assign(hr(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ar(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&ar(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}kl.className="Adamax",Qn(kl);class vl extends ml{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ut.registeredVariables[t];or(()=>{const e=lr(hr(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ir(ga(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}vl.className="SGD",Qn(vl);class xl extends vl{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ga(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ut.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:or(()=>xs(r).variable(e))}}const s=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&or(()=>{let e;const t=lr(hr(this.m,s),o);e=this.useNesterov?lr(hr(this.c,lr(o,hr(t,this.m))),r):lr(hr(this.c,t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ar(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}xl.className="Momentum",Qn(xl);class El extends ml{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ut.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ut.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:or(()=>xs(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:or(()=>xs(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:or(()=>xs(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;or(()=>{const e=lr(hr(o,this.decay),hr(So(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=lr(hr(t,this.decay),hr(s,1-this.decay)),l=cr(hr(s,this.learningRate),Da(to(e,lr(So(i),this.epsilon)))),u=lr(hr(a,this.momentum),l);o.assign(e),t.assign(i),a.assign(u);const c=to(r,u);r.assign(c)}else{const e=lr(hr(o,this.decay),hr(So(s),1-this.decay)),t=lr(hr(a,this.momentum),cr(hr(s,this.learningRate),Da(lr(e,this.epsilon))));o.assign(e),a.assign(t);const n=to(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ar(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&ar(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&ar(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}El.className="RMSProp",Qn(El);class Sl{static sgd(e){return new vl(e)}static momentum(e,t,n=!1){return new xl(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new El(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new wl(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new bl(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new kl(e,t,n,r,s)}static adagrad(e,t=.1){return new yl(e,t)}}const Al={sgd:Sl.sgd,momentum:Sl.momentum,adadelta:Sl.adadelta,adagrad:Sl.adagrad,rmsprop:Sl.rmsprop,adamax:Sl.adamax,adam:Sl.adam},_l="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();const Nl=/->/g;function Ml(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}var Il=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:function(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=M(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=M(e,n+1);return n},computeOutShape:function(e,t,n){const r=[],s=e.length;for(let o=0;o<s;o++)o!==t?r.push(e[o]):r.push(n);return r},collectGatherOpShapeInfo:function(e,t,n,r){const s=t.shape.length,o=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],i=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<o;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}});var $l=Object.freeze({__proto__:null,slice_util:Zn,segment_util:Il,fromUint8ToStringArray:function(e){try{return e.map(e=>Fe(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}},fromStringArrayToUint8:function(e){return e.map(e=>Re(e))},upcastType:et,axesAreInnerMostDims:so,combineLocations:oo,computeOutAndReduceShapes:function(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]},expandShapeToKeepDim:ao,assertAxesAreInnerMostDims:function(e,t,n){a(so(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)},getAxesPermutation:function(e,t){if(so(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n},getUndoAxesPermutation:function(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])},getInnerMostAxes:function(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n},getBroadcastDims:function(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=e[o]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(o)}return r},getReductionAxes:ys,assertAndGetBroadcastShape:ws,assertParamsConsistent:function(e,t){const n=e[0].length;e.forEach((e,t)=>{a(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),a(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let o=0;o<n;o++)a(o===t||e[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})},computeOutShape:function(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n},computeDilation2DInfo:function(e,t,n,r,s="NHWC",o){return _r(e,[...t,e[3]],n,o,r,null,null,Cr(s))},computePool2DInfo:Ar,computePool3DInfo:function(e,t,n,r,s,o,a="NDHWC"){const[i,l,u]=$r(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[i,l,u,e[1],e[1]]}return Nr(e,c,n,r,s,!1,h,o)},computeConv2DInfo:_r,computeConv3DInfo:Nr,computeDefaultPad:Mr,tupleValuesAreOne:Rr,eitherStridesOrDilationsAreOne:Fr,convertConv2DDataFormat:Cr,getFusedDyActivation:oi,getFusedBiasGradient:ai,applyActivation:ii,shouldFuse:li,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:function(e){return e<=30?e:M(e,Math.floor(Math.sqrt(e)))},getImageCenter:function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]},getReshaped:function(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s},getPermuted:function(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r},getReshapedPermuted:function(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s},getSliceBeginCoords:function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n},getSliceSize:function(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r},prepareAndValidate:Rn,validateUpdateShape:Cn,validateInput:Bn,calculateShapes:Pn,SELU_SCALEALPHA:1.7580993408473768,SELU_SCALE:1.0507009873554805,ERF_P:.3275911,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,warn:function(...e){P().getBool("IS_TEST")||console.warn(...e)},log:function(...e){P().getBool("IS_TEST")||console.log(...e)},mergeRealAndImagArrays:function(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n},splitRealAndImagArrays:function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}},complexWithEvenIndex:function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},complexWithOddIndex:function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},getComplexWithIndex:function(e,t){return{real:e[2*t],imag:e[2*t+1]}},assignToTypedArray:function(e,t,n,r){e[2*r]=t,e[2*r+1]=n},exponents:function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const o=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}},exponent:function(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}},decodeEinsumEquation:function(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Nl,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");a(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const o=r.split(","),i=o.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let e=0;e<s.length;++e){const t=s[e];if(!o.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===l.indexOf(t)&&l.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===l.indexOf(t)&&","!==t&&l.push(t)}const u=new Array(o.length);for(let e=0;e<i;++e){if(new Set(o[e].split("")).size!==o[e].length)throw new Error(`Found duplicate axes in input component ${o[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<o[e].length;++t)u[e].push(l.indexOf(o[e][t]))}const c=l.length,h=[];for(let e=s.length;e<c;++e)h.push(e);return{allDims:l,summedDims:h,idDims:u}},getEinsumPermutation:function(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}},checkEinsumDimSizes:function(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:a(r[t[e][n]]===s[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension `+s[n])}},getEinsumComputePath:function(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const o=[];for(let e=0;e<n.length;++e){const s=Ml(t,n[e]);for(const t of s)-1===o.indexOf(t)&&(r[e].push(t),o.push(t))}return{path:n,steps:r}},isIdentityPermutation:function(e){return e.every((e,t)=>e===t)},prepareSplitSize:function(e,t,n=0){let r=[];if("number"==typeof t)a(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{a(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}a(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}}),Tl=Object.freeze({__proto__:null,nonMaxSuppressionV3Impl:_i,nonMaxSuppressionV4Impl:Ni,nonMaxSuppressionV5Impl:Mi,whereImpl:Va});e.Abs="Abs",e.Acos="Acos",e.Acosh="Acosh",e.AdadeltaOptimizer=bl,e.AdagradOptimizer=yl,e.AdamOptimizer=wl,e.AdamaxOptimizer=kl,e.Add="Add",e.AddN="AddN",e.All="All",e.Any="Any",e.ArgMax="ArgMax",e.ArgMin="ArgMin",e.Asin="Asin",e.Asinh="Asinh",e.Atan="Atan",e.Atan2="Atan2",e.Atanh="Atanh",e.AvgPool="AvgPool",e.AvgPool3D="AvgPool3D",e.AvgPool3DGrad="AvgPool3DGrad",e.AvgPoolGrad="AvgPoolGrad",e.BatchMatMul="BatchMatMul",e.BatchToSpaceND="BatchToSpaceND",e.Bincount="Bincount",e.BroadcastTo="BroadcastTo",e.Cast="Cast",e.Ceil="Ceil",e.ClipByValue="ClipByValue",e.Complex="Complex",e.ComplexAbs="ComplexAbs",e.Concat="Concat",e.Conv2D="Conv2D",e.Conv2DBackpropFilter="Conv2DBackpropFilter",e.Conv2DBackpropInput="Conv2DBackpropInput",e.Conv3D="Conv3D",e.Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",e.Conv3DBackpropInputV2="Conv3DBackpropInputV2",e.Cos="Cos",e.Cosh="Cosh",e.CropAndResize="CropAndResize",e.Cumsum="Cumsum",e.DataStorage=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},e.DenseBincount="DenseBincount",e.DepthToSpace="DepthToSpace",e.DepthwiseConv2dNative="DepthwiseConv2dNative",e.DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",e.DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",e.Diag="Diag",e.Dilation2D="Dilation2D",e.Dilation2DBackpropFilter="Dilation2DBackpropFilter",e.Dilation2DBackpropInput="Dilation2DBackpropInput",e.Einsum="Einsum",e.Elu="Elu",e.EluGrad="EluGrad",e.Environment=C,e.Equal="Equal",e.Erf="Erf",e.Exp="Exp",e.ExpandDims="ExpandDims",e.Expm1="Expm1",e.FFT="FFT",e.Fill="Fill",e.FlipLeftRight="FlipLeftRight",e.Floor="Floor",e.FloorDiv="FloorDiv",e.FromPixels="FromPixels",e.FusedBatchNorm="FusedBatchNorm",e.FusedConv2D="FusedConv2D",e.FusedDepthwiseConv2D="FusedDepthwiseConv2D",e.GatherNd="GatherNd",e.GatherV2="GatherV2",e.Greater="Greater",e.GreaterEqual="GreaterEqual",e.IFFT="IFFT",e.Identity="Identity",e.Imag="Imag",e.IsFinite="IsFinite",e.IsInf="IsInf",e.IsNan="IsNan",e.KernelBackend=t,e.LRN="LRN",e.LRNGrad="LRNGrad",e.LeakyRelu="LeakyRelu",e.Less="Less",e.LessEqual="LessEqual",e.LinSpace="LinSpace",e.Log="Log",e.Log1p="Log1p",e.LogSoftmax="LogSoftmax",e.LogicalAnd="LogicalAnd",e.LogicalNot="LogicalNot",e.LogicalOr="LogicalOr",e.Max="Max",e.MaxPool="MaxPool",e.MaxPool3D="MaxPool3D",e.MaxPool3DGrad="MaxPool3DGrad",e.MaxPoolGrad="MaxPoolGrad",e.MaxPoolWithArgmax="MaxPoolWithArgmax",e.Maximum="Maximum",e.Mean="Mean",e.Min="Min",e.Minimum="Minimum",e.MirrorPad="MirrorPad",e.Mod="Mod",e.MomentumOptimizer=xl,e.Multinomial="Multinomial",e.Multiply="Multiply",e.Neg="Neg",e.NonMaxSuppressionV3="NonMaxSuppressionV3",e.NonMaxSuppressionV4="NonMaxSuppressionV4",e.NonMaxSuppressionV5="NonMaxSuppressionV5",e.NotEqual="NotEqual",e.OP_SCOPE_SUFFIX="__op",e.OneHot="OneHot",e.OnesLike="OnesLike",e.Optimizer=ml,e.Pack="Pack",e.PadV2="PadV2",e.Pool="Pool",e.Pow="Pow",e.Prelu="Prelu",e.Prod="Prod",e.RMSPropOptimizer=El,e.Range="Range",e.Real="Real",e.RealDiv="RealDiv",e.Reciprocal="Reciprocal",e.Relu="Relu",e.Relu6="Relu6",e.Reshape="Reshape",e.ResizeBilinear="ResizeBilinear",e.ResizeBilinearGrad="ResizeBilinearGrad",e.ResizeNearestNeighbor="ResizeNearestNeighbor",e.ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",e.Reverse="Reverse",e.RotateWithOffset="RotateWithOffset",e.Round="Round",e.Rsqrt="Rsqrt",e.SGDOptimizer=vl,e.ScatterNd="ScatterNd",e.Select="Select",e.Selu="Selu",e.Sigmoid="Sigmoid",e.Sign="Sign",e.Sin="Sin",e.Sinh="Sinh",e.Slice="Slice",e.Softmax="Softmax",e.Softplus="Softplus",e.SpaceToBatchND="SpaceToBatchND",e.SparseFillEmptyRows="SparseFillEmptyRows",e.SparseReshape="SparseReshape",e.SparseSegmentMean="SparseSegmentMean",e.SparseSegmentSum="SparseSegmentSum",e.SparseToDense="SparseToDense",e.SplitV="SplitV",e.Sqrt="Sqrt",e.Square="Square",e.SquaredDifference="SquaredDifference",e.Step="Step",e.StridedSlice="StridedSlice",e.StringNGrams="StringNGrams",e.StringSplit="StringSplit",e.StringToHashBucketFast="StringToHashBucketFast",e.Sub="Sub",e.Sum="Sum",e.Tan="Tan",e.Tanh="Tanh",e.Tensor=Ve,e.TensorBuffer=We,e.Tile="Tile",e.TopK="TopK",e.Transform="Transform",e.Transpose="Transpose",e.Unique="Unique",e.Unpack="Unpack",e.UnsortedSegmentSum="UnsortedSegmentSum",e.Variable=He,e.ZerosLike="ZerosLike",e._FusedMatMul="_FusedMatMul",e.abs=dr,e.acos=pr,e.acosh=fr,e.add=lr,e.addN=gr,e.all=mr,e.any=br,e.argMax=yr,e.argMin=wr,e.asin=kr,e.asinh=vr,e.atan=xr,e.atan2=Er,e.atanh=Sr,e.avgPool=Pr,e.avgPool3d=Or,e.backend=function(){return ut.backend},e.backend_util=$l,e.basicLSTMCell=Wr,e.batchNorm=Gr,e.batchNorm2d=Vr,e.batchNorm3d=Hr,e.batchNorm4d=jr,e.batchToSpaceND=Ur,e.bincount=Jr,e.booleanMaskAsync=ja,e.broadcastTo=Zr,e.browser=Dn,e.buffer=sn,e.cast=on,e.ceil=Yr,e.clipByValue=Xr,e.clone=an,e.complex=wt,e.concat=Lr,e.concat1d=Qr,e.concat2d=es,e.concat3d=ts,e.concat4d=ns,e.conv1d=ss,e.conv2d=rs,e.conv2dTranspose=as,e.conv3d=is,e.conv3dTranspose=us,e.copyRegisteredKernels=function(e,t){G(e).forEach(e=>{V(Object.assign({},e,{backendName:t}))})},e.cos=cs,e.cosh=hs,e.cosineWindow=ni,e.cumsum=ds,e.customGrad=Js,e.denseBincount=ps,e.deprecationWarn=function(e){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")},e.depthToSpace=fs,e.depthwiseConv2d=gs,e.device_util=dt,e.diag=ms,e.dilation2d=bs,e.disableDeprecationWarnings=function(){P().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")},e.dispose=ar,e.disposeVariables=function(){ut.disposeVariables()},e.div=cr,e.divNoNan=Es,e.dot=Ss,e.dropout=ei,e.einsum=As,e.elu=_s,e.enableDebugMode=function(){P().set("DEBUG",!0)},e.enableProdMode=function(){P().set("PROD",!0)},e.enclosingPowerOfTwo=ti,e.engine=function(){return ut},e.env=P,e.equal=ks,e.erf=Ns,e.exp=Ms,e.expandDims=Is,e.expm1=$s,e.eye=Ds,e.fft=Na,e.fill=Rs,e.findBackend=function(e){return ut.findBackend(e)},e.findBackendFactory=function(e){return ut.findBackendFactory(e)},e.floor=Fs,e.floorDiv=ur,e.fused=fi,e.gather=Cs,e.gatherND=Qa,e.gather_util=Fn,e.getBackend=function(){return ut.backendName},e.getGradient=U,e.getKernel=W,e.getKernelsForBackend=G,e.grad=function(e){return a(N(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=mt(t,"x","tf.grad","string_or_numeric"),s=null!=n?mt(n,"dy","tf.grad"):null;return ut.tidy(()=>{const{value:t,grads:n}=ut.gradients(()=>e(r),[r],s);return null!=s&&i(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Zs(n),n[0]})}},e.grads=function(e){return a(N(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{a(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=bt(t,"args","tf.grads","string_or_numeric"),s=null!=n?mt(n,"dy","tf.grads"):null;return ut.tidy(()=>{const{value:t,grads:n}=ut.gradients(()=>e(...r),r,s);return null!=s&&i(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zs(n),n})}},e.greater=Bs,e.greaterEqual=Ps,e.ifft=Ma,e.imag=Os,e.image=hl,e.inTopKAsync=ri,e.io=vn,e.irfft=Ia,e.isFinite=Ls,e.isInf=zs,e.isNaN=qs,e.keep=ir,e.kernel_impls=Tl,e.leakyRelu=Ks,e.less=Ws,e.lessEqual=Us,e.linalg=dl,e.linspace=function(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ut.runKernel("LinSpace",{},r)},e.localResponseNormalization=Gs,e.log=Vs,e.log1p=Hs,e.logSigmoid=Qs,e.logSoftmax=ro,e.logSumExp=io,e.logicalAnd=lo,e.logicalNot=uo,e.logicalOr=co,e.logicalXor=ho,e.losses=pl,e.matMul=xn,e.math=_n,e.max=eo,e.maxPool=po,e.maxPool3d=fo,e.maxPoolWithArgmax=go,e.maximum=mo,e.mean=bo,e.memory=function(){return ut.memory()},e.meshgrid=function(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=mt(e,"x","meshgrid",e instanceof Ve?e.dtype:"float32");if(void 0===t)return[r];let s=mt(t,"y","meshgrid",t instanceof Ve?t.dtype:"float32");const o=c(r.shape),a=c(s.shape);return"xy"===n?(r=Br(r,[1,-1]),s=Br(s,[-1,1]),[xn(wo([a,1],r.dtype),r),xn(s,wo([1,o],s.dtype))]):(r=Br(r,[-1,1]),s=Br(s,[1,-1]),[xn(r,wo([1,a],r.dtype)),xn(wo([o,1],s.dtype),s)])},e.min=ko,e.minimum=vo,e.mirrorPad=xo,e.mod=Eo,e.moments=Ao,e.movingAverage=Za,e.mul=hr,e.multiRNNCell=_o,e.multinomial=No,e.neg=Ys,e.nextFrame=function(){return new Promise(e=>_l(()=>e()))},e.norm=Ja,e.notEqual=Mo,e.oneHot=En,e.ones=wo,e.onesLike=Io,e.op=yt,e.outerProduct=$o,e.pad=To,e.pad1d=Do,e.pad2d=Ro,e.pad3d=Fo,e.pad4d=Co,e.pool=Po,e.pow=Oo,e.prelu=Lo,e.print=ln,e.prod=zo,e.profile=function(e){return ut.profile(e)},e.rand=qo,e.randomGamma=ea,e.randomNormal=ta,e.randomUniform=na,e.range=ra,e.ready=function(){return ut.ready()},e.real=sa,e.reciprocal=oa,e.registerBackend=function(e,t,n=1){return ut.registerBackend(e,t,n)},e.registerGradient=function(e){const{kernelName:t}=e;K.has(t)&&P().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),K.set(t,e)},e.registerKernel=V,e.relu=aa,e.relu6=ia,e.removeBackend=function(e){ut.removeBackend(e)},e.reshape=Br,e.reverse=la,e.reverse1d=ua,e.reverse2d=ca,e.reverse3d=ha,e.reverse4d=da,e.rfft=Ta,e.round=pa,e.rsqrt=fa,e.scalar=ga,e.scatterND=Ya,e.scatter_util=On,e.selu=ma,e.separableConv2d=ba,e.serialization=er,e.setBackend=function(e){return ut.setBackend(e)},e.setPlatform=function(e,t){P().setPlatform(e,t)},e.setdiff1dAsync=ya,e.sigmoid=zr,e.sign=wa,e.signal=cl,e.sin=ka,e.sinh=va,e.slice=qr,e.slice1d=xa,e.slice2d=Ea,e.slice3d=Sa,e.slice4d=Aa,e.slice_util=Zn,e.softmax=_a,e.softplus=Xs,e.spaceToBatchND=Bo,e.sparse=fl,e.sparseToDense=Xa,e.spectral=ul,e.split=$a,e.sqrt=Da,e.square=So,e.squaredDifference=Ra,e.squeeze=Fa,e.stack=Ca,e.step=Ba,e.stridedSlice=Pa,e.string=gl,e.sub=to,e.sum=no,e.sumOutType=function(e){return et(e,"int32")},e.tan=Oa,e.tanh=Kr,e.tensor=vt,e.tensor1d=La,e.tensor2d=za,e.tensor3d=Nn,e.tensor4d=function(e,t,n){if(l(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ft(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return kt(e,t,r,n)},e.tensor5d=function(e,t,n){if(l(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=ft(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return kt(e,t,r,n)},e.tensor6d=function(e,t,n){if(l(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=ft(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return kt(e,t=t||r,r,n)},e.tensor_util=st,e.test_util=sr,e.tidy=or,e.tile=Ts,e.time=function(e){return ut.time(e)},e.topk=qa,e.train=Al,e.transpose=Sn,e.truncatedNormal=Ka,e.unique=Wa,e.unregisterGradient=function(e){if(!K.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);K.delete(e)},e.unregisterKernel=function(e,t){const n=H(e,t);if(!q.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);q.delete(n)},e.unsortedSegmentSum=Ua,e.unstack=Ga,e.upcastType=et,e.util=Ce,e.valueAndGrad=function(e){return a(N(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{a(t instanceof Ve,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),a(null==n||n instanceof Ve,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=ut.gradients(()=>e(t),[t],n);return Zs(r),{grad:r[0],value:s}}},e.valueAndGrads=function(e){return a(N(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{a(Array.isArray(t)&&t.every(e=>e instanceof Ve),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),a(null==n||n instanceof Ve,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ut.gradients(()=>e(...t),t,n);return null!=n&&i(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zs(r.grads),r}},e.variable=function(e,t=!0,n,r){return ut.makeVariable(e,t,n,r)},e.variableGrads=js,e.version_core="3.8.0",e.where=vs,e.whereAsync=Ha,e.zeros=yo,e.zerosLike=xs,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tf-core.es2017.min.js.map
