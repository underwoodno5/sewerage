/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class e{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class t{refCount(e){return n("refCount")}incRef(e){return n("incRef")}timerAvailable(){return!0}time(e){return n("time")}read(e){return n("read")}readSync(e){return n("readSync")}numDataIds(){return n("numDataIds")}disposeData(e,t){return n("disposeData")}write(e,t,r){return n("write")}move(e,t,r,s,o){return n("move")}memory(){return n("memory")}floatPrecision(){return n("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return n("dispose")}}function n(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function a(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function i(e,t,n=""){a(h(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function l(e){a(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function u(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||k(e)&&!n)for(let r=0;r<e.length;++r)u(e[r],t,n);else t.push(e);return t}function c(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function h(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e){return e%1==0}function p(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function f(e,t){const n=t.length;return a((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),a(e.every(e=>d(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function g(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||s?null:f(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=o){if(o[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==o[a]||o[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),o[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function m(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function b(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function w(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function y(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function k(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function v(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function x(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function E(e){return"string"==typeof e||e instanceof String}function S(e){return"boolean"==typeof e}function _(e){return"number"==typeof e}function A(e){return Array.isArray(e)?A(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":_(e)?"float32":E(e)?"string":S(e)?"bool":"float32"}function N(e){return!!(e&&e.constructor&&e.call&&e.apply)}function I(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function M(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,r,s=!1){const o=new Array;if(1===n.length){const e=n[0]*(s?2:1);for(let n=0;n<e;n++)o[n]=r[t+n]}else{const a=n[0],i=n.slice(1),l=i.reduce((e,t)=>e*t)*(s?2:1);for(let n=0;n<a;n++)o[n]=e(t+n*l,i,r,s)}return o}(0,e,t,n)}function T(e,t){const n=D(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function D(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function F(e){e.forEach(t=>{a(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function R(e){return e&&e.then&&"function"==typeof e.then}class C{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=B,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(R(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function B(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function P(){return L}let O,L=null;function z(){if(null==O){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}O=e}return O}function W(e,t){const n=function(){const e=z();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const K="Abs",q="Acos",U="Acosh",G="Add",H="AddN",V="All",j="Any",J="ArgMax",Z="ArgMin",Y="Asin",X="Asinh",Q="Atan",ee="Atanh",te="Atan2",ne="AvgPool",re="AvgPoolGrad",se="AvgPool3D",oe="AvgPool3DGrad",ae="BatchMatMul",ie="BatchToSpaceND",le="Bincount",ue="BroadcastTo",ce="Cast",he="Ceil",de="ClipByValue",pe="Complex",fe="ComplexAbs",ge="Concat",me="Conv2D",be="Conv2DBackpropFilter",we="Conv2DBackpropInput",ye="Conv3D",ke="Conv3DBackpropFilterV2",ve="Conv3DBackpropInputV2",xe="Cos",Ee="Cosh",Se="Cumsum",_e="CropAndResize",Ae="DenseBincount",Ne="DepthToSpace",Ie="DepthwiseConv2dNative",Me="DepthwiseConv2dNativeBackpropFilter",$e="DepthwiseConv2dNativeBackpropInput",Te="Diag",De="Dilation2D",Fe="Dilation2DBackpropInput",Re="Dilation2DBackpropFilter",Ce="RealDiv",Be="Einsum",Pe="Elu",Oe="EluGrad",Le="Erf",ze="Equal",We="Exp",Ke="ExpandDims",qe="Expm1",Ue="FFT",Ge="Fill",He="FlipLeftRight",Ve="Floor",je="FloorDiv",Je="FusedBatchNorm",Ze="GatherV2",Ye="GatherNd",Xe="Greater",Qe="GreaterEqual",et="Identity",tt="IFFT",nt="Imag",rt="IsFinite",st="IsInf",ot="IsNan",at="LeakyRelu",it="Less",lt="LessEqual",ut="LinSpace",ct="Log",ht="Log1p",dt="LogicalAnd",pt="LogicalNot",ft="LogicalOr",gt="LogSoftmax",mt="LRN",bt="LRNGrad",wt="Max",yt="Maximum",kt="MaxPool",vt="MaxPoolGrad",xt="MaxPool3D",Et="MaxPool3DGrad",St="MaxPoolWithArgmax",_t="Mean",At="Min",Nt="Minimum",It="MirrorPad",Mt="Mod",$t="Multinomial",Tt="Multiply",Dt="Neg",Ft="NotEqual",Rt="NonMaxSuppressionV3",Ct="NonMaxSuppressionV4",Bt="NonMaxSuppressionV5",Pt="OnesLike",Ot="OneHot",Lt="Pack",zt="PadV2",Wt="Pool",Kt="Pow",qt="Prelu",Ut="Prod",Gt="Range",Ht="Real",Vt="Reciprocal",jt="Relu",Jt="Reshape",Zt="ResizeNearestNeighbor",Yt="ResizeNearestNeighborGrad",Xt="ResizeBilinear",Qt="ResizeBilinearGrad",en="Relu6",tn="Reverse",nn="Round",rn="Rsqrt",sn="ScatterNd",on="Select",an="Selu",ln="Slice",un="Sin",cn="Sinh",hn="Sign",dn="Sigmoid",pn="Softplus",fn="Sqrt",gn="Sum",mn="SpaceToBatchND",bn="SplitV",wn="Softmax",yn="SparseFillEmptyRows",kn="SparseReshape",vn="SparseSegmentMean",xn="SparseSegmentSum",En="SparseToDense",Sn="SquaredDifference",_n="Square",An="StridedSlice",Nn="StringNGrams",In="StringSplit",Mn="StringToHashBucketFast",$n="Sub",Tn="Tan",Dn="Tanh",Fn="Tile",Rn="TopK",Cn="Transform",Bn="Transpose",Pn="Unique",On="Unpack",Ln="UnsortedSegmentSum",zn="ZerosLike",Wn="Step",Kn="FromPixels",qn="RotateWithOffset",Un="_FusedMatMul",Gn="FusedConv2D",Hn="FusedDepthwiseConv2D",Vn=W("kernelRegistry",()=>new Map),jn=W("gradRegistry",()=>new Map);function Jn(e,t){const n=rr(e,t);return Vn.get(n)}function Zn(e){return jn.get(e)}function Yn(e){const t=Vn.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===e&&n.push(a)}return n}function Xn(e){const{kernelName:t,backendName:n}=e,r=rr(t,n);Vn.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Vn.set(r,e)}function Qn(e){const{kernelName:t}=e;jn.has(t)&&P().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),jn.set(t,e)}function er(e,t){const n=rr(e,t);if(!Vn.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Vn.delete(n)}function tr(e){if(!jn.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);jn.delete(e)}function nr(e,t){Yn(e).forEach(e=>{Xn(Object.assign({},e,{backendName:t}))})}function rr(e,t){return`${t}_${e}`}var sr=ar,or=null;try{or=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function ar(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function ir(e){return!0===(e&&e.__isLong__)}ar.prototype.__isLong__,Object.defineProperty(ar.prototype,"__isLong__",{value:!0}),ar.isLong=ir;var lr={},ur={};function cr(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=ur[e])?r:(n=dr(e,(0|e)<0?-1:0,!0),s&&(ur[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=lr[e])?r:(n=dr(e,e<0?-1:0,!1),s&&(lr[e]=n),n)}function hr(e,t){if(isNaN(e))return t?vr:kr;if(t){if(e<0)return vr;if(e>=br)return Ar}else{if(e<=-wr)return Nr;if(e+1>=wr)return _r}return e<0?hr(-e,t).neg():dr(e%mr|0,e/mr|0,t)}function dr(e,t,n){return new ar(e,t,n)}ar.fromInt=cr,ar.fromNumber=hr,ar.fromBits=dr;var pr=Math.pow;function fr(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return kr;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return fr(e.substring(1),t,n).neg();for(var s=hr(pr(n,8)),o=kr,a=0;a<e.length;a+=8){var i=Math.min(8,e.length-a),l=parseInt(e.substring(a,a+i),n);if(i<8){var u=hr(pr(n,i));o=o.mul(u).add(hr(l))}else o=(o=o.mul(s)).add(hr(l))}return o.unsigned=t,o}function gr(e,t){return"number"==typeof e?hr(e,t):"string"==typeof e?fr(e,t):dr(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}ar.fromString=fr,ar.fromValue=gr;var mr=4294967296,br=mr*mr,wr=br/2,yr=cr(1<<24),kr=cr(0);ar.ZERO=kr;var vr=cr(0,!0);ar.UZERO=vr;var xr=cr(1);ar.ONE=xr;var Er=cr(1,!0);ar.UONE=Er;var Sr=cr(-1);ar.NEG_ONE=Sr;var _r=dr(-1,2147483647,!1);ar.MAX_VALUE=_r;var Ar=dr(-1,-1,!0);ar.MAX_UNSIGNED_VALUE=Ar;var Nr=dr(0,-2147483648,!1);ar.MIN_VALUE=Nr;var Ir=ar.prototype;Ir.toInt=function(){return this.unsigned?this.low>>>0:this.low},Ir.toNumber=function(){return this.unsigned?(this.high>>>0)*mr+(this.low>>>0):this.high*mr+(this.low>>>0)},Ir.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Nr)){var t=hr(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=hr(pr(e,6),this.unsigned),o=this,a="";;){var i=o.div(s),l=(o.sub(i.mul(s)).toInt()>>>0).toString(e);if((o=i).isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}},Ir.getHighBits=function(){return this.high},Ir.getHighBitsUnsigned=function(){return this.high>>>0},Ir.getLowBits=function(){return this.low},Ir.getLowBitsUnsigned=function(){return this.low>>>0},Ir.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Nr)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},Ir.isZero=function(){return 0===this.high&&0===this.low},Ir.eqz=Ir.isZero,Ir.isNegative=function(){return!this.unsigned&&this.high<0},Ir.isPositive=function(){return this.unsigned||this.high>=0},Ir.isOdd=function(){return 1==(1&this.low)},Ir.isEven=function(){return 0==(1&this.low)},Ir.equals=function(e){return ir(e)||(e=gr(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},Ir.eq=Ir.equals,Ir.notEquals=function(e){return!this.eq(e)},Ir.neq=Ir.notEquals,Ir.ne=Ir.notEquals,Ir.lessThan=function(e){return this.comp(e)<0},Ir.lt=Ir.lessThan,Ir.lessThanOrEqual=function(e){return this.comp(e)<=0},Ir.lte=Ir.lessThanOrEqual,Ir.le=Ir.lessThanOrEqual,Ir.greaterThan=function(e){return this.comp(e)>0},Ir.gt=Ir.greaterThan,Ir.greaterThanOrEqual=function(e){return this.comp(e)>=0},Ir.gte=Ir.greaterThanOrEqual,Ir.ge=Ir.greaterThanOrEqual,Ir.compare=function(e){if(ir(e)||(e=gr(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Ir.comp=Ir.compare,Ir.negate=function(){return!this.unsigned&&this.eq(Nr)?Nr:this.not().add(xr)},Ir.neg=Ir.negate,Ir.add=function(e){ir(e)||(e=gr(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=s+(65535&e.low))>>>16,u+=(c+=r+i)>>>16,l+=(u+=n+a)>>>16,l+=t+o,dr((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},Ir.subtract=function(e){return ir(e)||(e=gr(e)),this.add(e.neg())},Ir.sub=Ir.subtract,Ir.multiply=function(e){if(this.isZero())return kr;if(ir(e)||(e=gr(e)),or)return dr(or.mul(this.low,this.high,e.low,e.high),or.get_high(),this.unsigned);if(e.isZero())return kr;if(this.eq(Nr))return e.isOdd()?Nr:kr;if(e.eq(Nr))return this.isOdd()?Nr:kr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(yr)&&e.lt(yr))return hr(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,d=0;return h+=(d+=s*l)>>>16,c+=(h+=r*l)>>>16,h&=65535,c+=(h+=s*i)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=r*i)>>>16,c&=65535,u+=(c+=s*a)>>>16,u+=t*l+n*i+r*a+s*o,dr((h&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},Ir.mul=Ir.multiply,Ir.divide=function(e){if(ir(e)||(e=gr(e)),e.isZero())throw Error("division by zero");var t,n,r;if(or)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?dr((this.unsigned?or.div_u:or.div_s)(this.low,this.high,e.low,e.high),or.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?vr:kr;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return vr;if(e.gt(this.shru(1)))return Er;r=vr}else{if(this.eq(Nr))return e.eq(xr)||e.eq(Sr)?Nr:e.eq(Nr)?xr:(t=this.shr(1).div(e).shl(1)).eq(kr)?e.isNegative()?xr:Sr:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(Nr))return this.unsigned?vr:kr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=kr}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),o=s<=48?1:pr(2,s-48),a=hr(t),i=a.mul(e);i.isNegative()||i.gt(n);)i=(a=hr(t-=o,this.unsigned)).mul(e);a.isZero()&&(a=xr),r=r.add(a),n=n.sub(i)}return r},Ir.div=Ir.divide,Ir.modulo=function(e){return ir(e)||(e=gr(e)),or?dr((this.unsigned?or.rem_u:or.rem_s)(this.low,this.high,e.low,e.high),or.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},Ir.mod=Ir.modulo,Ir.rem=Ir.modulo,Ir.not=function(){return dr(~this.low,~this.high,this.unsigned)},Ir.and=function(e){return ir(e)||(e=gr(e)),dr(this.low&e.low,this.high&e.high,this.unsigned)},Ir.or=function(e){return ir(e)||(e=gr(e)),dr(this.low|e.low,this.high|e.high,this.unsigned)},Ir.xor=function(e){return ir(e)||(e=gr(e)),dr(this.low^e.low,this.high^e.high,this.unsigned)},Ir.shiftLeft=function(e){return ir(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?dr(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):dr(0,this.low<<e-32,this.unsigned)},Ir.shl=Ir.shiftLeft,Ir.shiftRight=function(e){return ir(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?dr(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):dr(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Ir.shr=Ir.shiftRight,Ir.shiftRightUnsigned=function(e){if(ir(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?dr(this.low>>>e|t<<32-e,t>>>e,this.unsigned):dr(32===e?t:t>>>e-32,0,this.unsigned)},Ir.shru=Ir.shiftRightUnsigned,Ir.shr_u=Ir.shiftRightUnsigned,Ir.toSigned=function(){return this.unsigned?dr(this.low,this.high,!1):this},Ir.toUnsigned=function(){return this.unsigned?this:dr(this.low,this.high,!0)},Ir.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Ir.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},Ir.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},ar.fromBytes=function(e,t,n){return n?ar.fromBytesLE(e,t):ar.fromBytesBE(e,t)},ar.fromBytesLE=function(e,t){return new ar(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},ar.fromBytesBE=function(e,t){return new ar(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Mr=sr||Object.freeze({__proto__:null,default:sr,__moduleExports:sr});function $r(e){return Mr.fromString(e,!0,16)}const Tr=$r("c3a5c85c97cb3127"),Dr=$r("b492b66fbe98f273"),Fr=$r("9ae16a3b2f90404f");function Rr(e){return e.xor(e.shru(47))}function Cr(e,t,n){const r=e.slice(t,t+n);return Mr.fromBytes(Array.from(r),!0,!0)}function Br(e,t){return Cr(e,t,8)}function Pr(e,t){return Cr(e,t,4)}function Or(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Lr(e,t,n=$r("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function zr(e,t,n,r){return function(e,t,n,r,s,o){s=s.add(e),o=Or(o.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),o=o.add(Or(s,44)),[s.add(r),o.add(a)]}(Br(e,t),Br(e,t+8),Br(e,t+16),Br(e,t+24),n,r)}function Wr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=u(e)),P().getBool("DEBUG")&&w(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Kr(){return P().platform.now()}function qr(e,t="utf-8"){return t=t||"utf-8",P().platform.encode(e,t)}function Ur(e,t="utf-8"){return t=t||"utf-8",P().platform.decode(e,t)}var Gr=Object.freeze({__proto__:null,createScalarValue:function(e,t){return"string"===t?qr(e):Wr([e],t)},toTypedArray:Wr,now:Kr,fetch:function(e,t){return P().platform.fetch(e,t)},encodeString:qr,decodeString:Ur,shuffle:r,shuffleCombo:function(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)},clamp:s,nearestLargerEven:function(e){return e%2==0?e:e+1},swap:o,sum:function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t},randUniform:function(e,t){const n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n},assert:a,assertShapesMatch:i,assertNonNull:l,flatten:u,sizeFromShape:c,isScalarShape:function(e){return 0===e.length},arraysEqual:h,isInt:d,tanh:function(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}},sizeToSquarishShape:function(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]},createShuffledIndices:function(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t},rightPad:p,repeatedTry:function(e,t=(e=>0),n){return new Promise((r,s)=>{let o=0;const a=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?s():setTimeout(a,i)};a()})},inferFromImplicitShape:function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s},parseAxisParam:f,squeezeShape:g,getTypedArrayFromDType:m,getArrayFromDType:b,checkConversionForErrors:w,isValidDtype:y,hasEncodingLoss:function(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))},isTypedArray:k,bytesPerElement:v,bytesFromStringArray:x,isString:E,isBoolean:S,isNumber:_,inferDtype:A,isFunction:N,nearestDivisor:I,computeStrides:M,toNestedArray:$,makeOnesTypedArray:T,makeZerosTypedArray:D,makeZerosNestedTypedArray:function(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return $(e,new Float32Array(n));if("int32"===t)return $(e,new Int32Array(n));if("bool"===t)return $(e,new Uint8Array(n));throw new Error("Unknown data type "+t)},assertNonNegativeIntegerDimensions:F,locToIndex:function(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r},indexToLoc:function(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r},isPromise:R,hexToLong:$r,fingerPrint64:function(e,t=e.length){const n=Mr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Fr.add(2*t),r=Br(e,0).add(Fr),s=Br(e,t-8);return Lr(Or(s,37).mul(n).add(r),Or(r,25).add(s).mul(n),n)}if(t>=4){const n=Fr.add(2*t);return Lr(Pr(e,0).shl(3).add(t),Pr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Rr(Fr.mul(n).xor(Tr.mul(r))).mul(Fr)}return Fr}(e,t):function(e,t=e.length){const n=Fr.add(2*t),r=Br(e,0).mul(Dr),s=Br(e,8),o=Br(e,t-8).mul(n),a=Br(e,t-16).mul(Fr);return Lr(Or(r.add(s),43).add(Or(o,30)).add(a),r.add(Or(s.add(Fr),18)).add(o),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Fr.add(2*t),r=Br(e,0).mul(Fr),s=Br(e,8),o=Br(e,t-8).mul(n),a=Br(e,t-16).mul(Fr),i=Or(r.add(s),43).add(Or(o,30)).add(a),l=Lr(i,r.add(Or(s.add(Fr),18)).add(o),n),u=Br(e,16).mul(n),c=Br(e,24),h=i.add(Br(e,t-32)).mul(n),d=l.add(Br(e,t-24)).mul(n);return Lr(Or(u.add(c),43).add(Or(h,30)).add(d),u.add(Or(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Dr).add(113),o=Rr(s.mul(Fr).add(113)).mul(Fr),a=[Mr.UZERO,Mr.UZERO],i=[Mr.UZERO,Mr.UZERO];r=r.mul(Fr).add(Br(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Or(r.add(s).add(a[0]).add(Br(e,l+8)),37).mul(Dr),s=Or(s.add(a[1]).add(Br(e,l+48)),42).mul(Dr),r=r.xor(i[1]),s=s.add(a[0]).add(Br(e,l+40)),o=Or(o.add(i[0]),33).mul(Dr),a=zr(e,l,a[1].mul(Dr),r.add(i[0])),i=zr(e,l+32,o.add(i[1]),s.add(Br(e,l+16))),[o,r]=[r,o],l+=64}while(l!==u);const h=Dr.add(o.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Or(r.add(s).add(a[0]).add(Br(e,l+8)),37).mul(h),s=Or(s.add(a[1]).add(Br(e,l+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(Br(e,l+40))),o=Or(o.add(i[0]),33).mul(h),a=zr(e,l,a[1].mul(h),r.add(i[0])),i=zr(e,l+32,o.add(i[1]),s.add(Br(e,l+16))),[o,r]=[r,o],Lr(Lr(a[0],i[0],h).add(Rr(s).mul(Tr)).add(o),Lr(a[1],i[1],h).add(r),h)}});class Hr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new jr)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const a=Kr();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:Kr()-a})}if(P().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{Vr(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:o}=e;n.forEach(e=>{Promise.all([e.data(),r,o]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function Vr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class jr{logKernelProfile(e,t,n,r,s,o){const a="number"==typeof r?p(r+"ms",9):r.error,i=p(e,25),l=t.rank,u=t.size,c=p(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Jr(e,t,n,r){const s=M(t),o=function(e,t,n,r){const s=c(t),o=r[r.length-1],a=new Array(o).fill(0),i=t.length,l="complex64"===n?Xr(e):e;if(i>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)a[e]=Math.max(a[e],Zr(l[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,i=function e(t,n,r,s,o,a=!0){const i="complex64"===r?2:1,l=n[0],u=n.length;if(0===u){if("complex64"===r){return[Zr(Xr(t)[0],0,r)]}return"bool"===r?[Yr(t[0])]:[t[0].toString()]}if(1===u){if(l>20){const e=3*i;let n=Array.from(t.slice(0,e)),s=Array.from(t.slice((l-3)*i,l*i));return"complex64"===r&&(n=Xr(n),s=Xr(s)),["["+n.map((e,t)=>Zr(e,o[t],r)).join(", ")+", ..., "+s.map((e,t)=>Zr(e,o[l-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?Xr(t):Array.from(t)).map((e,t)=>Zr(e,o[t],r)).join(", ")+"]"]}const c=n.slice(1),h=s.slice(1),d=s[0]*i,p=[];if(l>20){for(let n=0;n<3;n++){const s=n*d,a=s+d;p.push(...e(t.slice(s,a),c,r,h,o,!1))}p.push("...");for(let n=l-3;n<l;n++){const s=n*d,a=s+d;p.push(...e(t.slice(s,a),c,r,h,o,n===l-1))}}else for(let n=0;n<l;n++){const s=n*d,a=s+d;p.push(...e(t.slice(s,a),c,r,h,o,n===l-1))}const f=2===u?",":"";p[0]="["+p[0]+f;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+f;let g=",\n";for(let e=2;e<u;e++)g+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":g),p}(e,t,n,s,o),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+a),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(e=>"    "+e).join("\n")),l.join("\n")}function Zr(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":E(e)?`'${e}'`:"bool"===n?Yr(e):parseFloat(e.toFixed(7)).toString(),p(r,t)}function Yr(e){return 0===e?"false":"true"}function Xr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Qr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=c(e),null!=n){const e=n.length;a(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||b(t,this.size),this.strides=M(e)}set(e,...t){0===t.length&&(t=[0]),a(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return es().makeTensor(this.values,this.shape,this.dtype)}}let es=null,ts=null;class ns{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=c(e),this.strides=M(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ts.buffer(this.shape,this.dtype,e)}bufferSync(){return ts.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return $(this.shape,e,"complex64"===this.dtype)}arraySync(){return $(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=es().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Ur(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=es().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Ur(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await es().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(es().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ts.print(this,e)}clone(){return this.throwIfDisposed(),ts.clone(this)}toString(e=!1){return Jr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ts.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),es().makeVariable(this,e,t,n)}}Object.defineProperty(ns,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),W("Tensor",()=>ns);class rs extends ns{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!h(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);es().disposeTensor(this),this.dataId=e.dataId,es().incRef(this,null)}dispose(){es().disposeVariable(this),this.isDisposedInternal=!0}}var ss,os,as,is,ls;Object.defineProperty(rs,Symbol.hasInstance,{value:e=>e instanceof ns&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ss||(ss={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(os||(os={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(as||(as={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(is||(is={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ls||(ls={}));const us={float32:is,int32:os,bool:as,complex64:ls};function cs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return us[e][t]}function hs(e){return cs(e,"int32")}function ds(e,t){if(e.dtype===t.dtype)return[e,t];const n=cs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ps(e,t){a(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function fs(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof ns)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const o=t;for(const t in o){const s=o[t];r.has(s)||(r.add(s),e(s,n,r))}}(e,t,new Set),t}var gs=Object.freeze({__proto__:null,makeTypesMatch:ds,assertTypesMatch:ps,isTensorInList:function(e,t){return t.some(t=>t.id===e.id)},getTensorsInContainer:fs});function ms(e){return null!=e.kernelName}class bs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ws{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new bs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Hr(this.backendInstance),!0}setupRegisteredKernels(){Yn(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Yn(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(!r||r instanceof t||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=r.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ws.nextTensorId++}nextVariableId(){return ws.nextVariableId++}clone(e){const t=ks.runKernel("Identity",{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ks.runKernel("Cast",t,n)}}),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Jn(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,o=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ms(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ms(e)){const{kernelName:t,inputs:s,attrs:o}=e;null==this.backendName&&this.backend;const u=Jn(t,this.backendName);a(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:o,backend:this.backend});const a=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const i=a.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,s,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy(()=>t(this.backend,s));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:h}=e,d=ms(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()}),r&&this.addTapeNode(u,c,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(e=>null!=c[e]?c[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=Zn(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let o;r.saveAllInputs?(a(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(e=>t[e])):o=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return o.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&E(e[0])&&(s=e.map(e=>qr(e)));const o=r.write(s,t,n),a=new ns(t,n,o,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(o),t=x(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s=new ns(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new rs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*v(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof rs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*v(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Zn(e);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=D(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=fs(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(a(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));a(s instanceof ns,()=>"The result y returned by f() must be a tensor.");const o=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const o=e[n],a=o.inputs;for(const e in a){const n=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){o.outputs.forEach(e=>r[e.id]=!0),i=!0,s[o.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(o[n.outputs[e].id]){for(const e in r)o[r[e].id]=!0,a[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=T(c(e),"float32");return ks.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const o=t[s],a=[];if(o.outputs.forEach(t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n(()=>i[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=o.inputs[t];if(!h(s.shape,a.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}(e,o,e=>this.tidy(e),vs);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return a(N(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;a(t.every(e=>e instanceof ns),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),a(n.value instanceof ns,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),a(N(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),o=Array.isArray(s)?s:[s];a(o.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),a(o.every(e=>e instanceof ns),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return o.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Kr(),n=await this.backend.time(e);return n.wallMs=Kr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new bs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ys(){const e=z();if(null==e._tfengine){const t=new C(e);e._tfengine=new ws(t)}var t;return t=e._tfengine.ENV,L=t,es=()=>e._tfengine,e._tfengine}ws.nextTensorId=0,ws.nextVariableId=0;const ks=ys();function vs(e,t){const n={a:e,b:t};return ks.runKernel("Add",n)}function xs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var Es=Object.freeze({__proto__:null,isMobile:function(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1},isBrowser:xs});const Ss=P();function _s(e,t){let n=e;if(k(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||k(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!k(t))return void a(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);a(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),a(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const s=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],s,r.concat(n))}(e,r,[]),r}function As(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ns(e,t,n,r="numeric"){if(e instanceof ns)return As(r,e.dtype,t,n),e;let s=A(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),As(r,s,t,n),null==e||!k(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const o=_s(e,s);k(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?Wr(e,s):u(e,[],!0);return ks.makeTensor(a,o,s)}function Is(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>Ns(e,`${t}[${s}]`,n,r))}Ss.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ss.registerFlag("IS_BROWSER",()=>xs()),Ss.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ss.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ss.registerFlag("PROD",()=>!1),Ss.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ss.getBool("DEBUG")),Ss.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ss.registerFlag("IS_TEST",()=>!1),Ss.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),Ss.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const Ms="__op";function $s(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ks.startScope(n);try{const t=r(...e);return R(t)&&console.error("Cannot return a Promise inside of tidy."),ks.endScope(t),t}catch(e){throw ks.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ts=$s({complex_:function(e,t){const n=Ns(e,"real","complex"),r=Ns(t,"imag","complex");i(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ks.runKernel("Complex",s)}});function Ds(e,t,n,r){if(null==r&&(r=A(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!k(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){F(t);const e=c(t),r=c(n);a(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==c(t.slice(e));a(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return k(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Wr(e,r):u(e,[],!0),ks.makeTensor(e,t,r)}function Fs(e,t,n){return Ds(e,t,_s(e,n),n)}const Rs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function Cs(e,t){const n={};let r,s=0;for(const o of t){const t=o.name,a=o.dtype,i=o.shape,l=c(i);let u;if("quantization"in o){const n=o.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${o.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${o.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const i=Rs[n.dtype],c=e.slice(s,s+l*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Us()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*i}else if("string"===a){const t=c(o.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=Rs[a],o=e.slice(s,s+l*r);if("float32"===a)u=new Float32Array(o);else if("int32"===a)u=new Int32Array(o);else if("bool"===a)u=new Uint8Array(o);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{u=new Float32Array(o);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=Fs(e,i,"float32"),a=Fs(r,i,"float32");n[t]=Ts(s,a),s.dispose(),a.dispose()}}s+=l*r}"complex64"!==a&&(n[t]=Fs(u,i,a))}return n}function Bs(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const Ps="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Os(e){return Ps?Buffer.byteLength(e):new Blob([e]).size}function Ls(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function zs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ws(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ks(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function qs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Os(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Os(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Us(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],i=e[n[a>>10]+(1023&a)]+t[a>>10];o[s]=i}return new Float32Array(s)}}class Gs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Gs.instance&&(Gs.instance=new Gs),Gs.instance}static registerSaveRouter(e){Gs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Gs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Gs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Gs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Gs.getInstance().loadRouters:Gs.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}function Hs(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Vs(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class js{constructor(e){if(this.indexedDB=Hs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Vs(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=qs(t),o=s.transaction("model_info_store","readwrite");let a=o.objectStore("model_info_store");const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;i.onsuccess=()=>{l=s.transaction("models_store","readwrite");const i=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=o.objectStore("model_info_store");const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}js.URL_SCHEME="indexeddb://";const Js=e=>{return P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(js.URL_SCHEME)?(t=e.slice(js.URL_SCHEME.length),new js(t)):null;var t};Gs.registerSaveRouter(Js),Gs.registerLoadRouter(Js);class Zs{constructor(){this.indexedDB=Hs()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Vs(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),o=s.objectStore("model_info_store").getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(js.URL_SCHEME)?t.slice(js.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Vs(r),r.onsuccess=()=>{const s=r.result,o=s.transaction("model_info_store","readwrite"),a=o.objectStore("model_info_store"),i=a.get(e);let l;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),o=()=>{l=s.transaction("models_store","readwrite");const r=l.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Ys="tensorflowjs_models",Xs="info",Qs="model_topology",eo="weight_specs",to="weight_data",no="model_metadata";function ro(e){return{info:[Ys,e,Xs].join("/"),topology:[Ys,e,Qs].join("/"),weightSpecs:[Ys,e,eo].join("/"),weightData:[Ys,e,to].join("/"),modelMetadata:[Ys,e,no].join("/")}}function so(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oo(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class ao{constructor(e){if(!P().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ro(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=qs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ps)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw so(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ps){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(o),t}}ao.URL_SCHEME="localstorage://";const io=e=>{return P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ao.URL_SCHEME)?(t=e.slice(ao.URL_SCHEME.length),new ao(t)):null;var t};Gs.registerSaveRouter(io),Gs.registerLoadRouter(io);class lo{constructor(){a(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),a("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ys+"/",n="/"+Xs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[oo(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=ro(e=(t=e).startsWith(ao.URL_SCHEME)?t.slice(ao.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return so(n),r}}class uo{constructor(){this.managers={}}static getInstance(){return null==uo.instance&&(uo.instance=new uo),uo.instance}static registerManager(e,t){a(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),a(e.length>0,()=>"scheme must not be an empty string.");const n=uo.getInstance();a(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function co(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+uo.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function ho(e,t,n=!1){a(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Gs.getLoadHandlers(e);a(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),a(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],o=Gs.getSaveHandlers(t);a(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),a(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=o[0],l=co(e).scheme,u=co(e).path,c=l===co(e).scheme,h=await s.load();n&&c&&await uo.getManager(l).removeModel(u);const d=await i.save(h);return n&&!c&&await uo.getManager(l).removeModel(u),d.modelArtifactsInfo}class po{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(P().get("IS_BROWSER")){P().setPlatform("browser",new po);try{uo.registerManager(ao.URL_SCHEME,new lo)}catch(e){}try{uo.registerManager(js.URL_SCHEME,new Zs)}catch(e){}}const fo=()=>require("node-fetch");let go;class mo{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=P().global.fetch?P().global.fetch(e,t):(null==go&&(go=fo()),go(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function bo(e,t="float32",n){return t=t||"float32",F(e),new Qr(e,t,n)}P().get("IS_NODE")&&P().setPlatform("node",new mo);const wo=$s({cast_:function(e,t){const n=Ns(e,"x","cast");if(!y(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ks.runKernel("Cast",r,s)}});const yo=$s({clone_:function(e){const t={x:Ns(e,"x","clone","string_or_numeric")};return ks.runKernel("Identity",t)}});function ko(e,t=!1){console.log(e.toString(t))}ys();ts={buffer:bo,cast:wo,clone:yo,print:ko};function vo(e){return new Promise(e=>setTimeout(e)).then(e)}class xo{constructor(e){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(xo.URL_SCHEME)&&(e=e.slice(xo.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Ws(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await vo(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await vo(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:qs(e)}}}}xo.URL_SCHEME="downloads://";class Eo{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error("modelTopology field is missing from file "+this.jsonFile.name));if(null==r.weightsManifest)return void t(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void e({modelTopology:s});const o=Ks(r,e=>this.loadWeights(e));e(o)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(s).then(e=>[t,Ls(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>zs(e.name)),r={};for(const s of e)s.paths.forEach(e=>{const s=zs(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function So(e,t,n,r){!function(e){a(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){a(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),a(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),a(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(o=>(o.then(o=>{const a=n+ ++s/e.length*(r-n);return t(a),o}),o)))}async function _o(e,t){null==t&&(t={});const n=null==t.fetchFunc?P().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await So(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await So(s,t.onProgress,.5,1)}function Ao(e){return async(t,n="",r)=>{const s=t.map(()=>!1),o={},a=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Rs[l]*c(e.shape),h=()=>{s[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(h(),a[n]=!0)}):h(),i.push(e.name),n+=u})}),!a.every(e=>e)){const e=r.filter((e,t)=>!a[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const l=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});const h=await e(u),d={};let p=0;return l.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=h[p+e].byteLength;const s=new ArrayBuffer(r),a=new Uint8Array(s);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(h[p+e]);a.set(t,i),i+=t.byteLength}o[e].forEach(e=>{const t=Cs(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]}),p+=n}),d}}Gs.registerSaveRouter(e=>P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xo.URL_SCHEME)?function(e="model"){return new xo(e)}(e.slice(xo.URL_SCHEME.length)):null);class No{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(a("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=P().platform.fetch,a(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&a(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ws(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:qs(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ks(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,o=[];for(const t of e)o.push(...t.weights);const a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);this.weightUrlConverter&&a.push(...await Promise.all(i));return[o,Ls(await _o(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Io(e){return null!=e.match(No.URL_SCHEME_REGEX)}No.URL_SCHEME_REGEX=/^https?:\/\//;const Mo=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Io(e)):Io(e),n)return $o(e,t)}return null};function $o(e,t){return new No(e,t)}Gs.registerSaveRouter(Mo),Gs.registerLoadRouter(Mo);class To{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Do{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var Fo=Object.freeze({__proto__:null,browserFiles:function(e){return new Eo(e)},browserHTTPRequest:function(e,t){return $o(e,t)},concatenateArrayBuffers:Ls,decodeWeights:Cs,encodeWeights:async function(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let o=0;o<s.length;++o){const a=s[o],i=Array.isArray(e)?e[o].tensor:e[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const l={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],o=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(o,s),s+=4,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(l.group=t),n.push(l)}return{data:Bs(await Promise.all(r)),specs:n}},fromMemory:function(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new To(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new To({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new To({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})},getLoadHandlers:(e,t)=>Gs.getLoadHandlers(e,t),getModelArtifactsForJSON:Ks,getModelArtifactsInfoForJSON:qs,getSaveHandlers:e=>Gs.getSaveHandlers(e),http:$o,isHTTPScheme:Io,loadWeights:async function(e,t="",n,r){return Ao(e=>_o(e,{requestInit:r}))(e,t,n)},registerLoadRouter:e=>Gs.registerLoadRouter(e),registerSaveRouter:e=>Gs.registerSaveRouter(e),weightsLoaderFactory:Ao,withSaveHandler:function(e){return new Do(e)},copyModel:async function(e,t){return ho(e,t,!1)},listModels:async function(){const e=uo.getSchemes(),t={};for(const n of e){const e=await uo.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t},moveModel:async function(e,t){return ho(e,t,!0)},removeModel:async function(e){const t=co(e);return uo.getManager(t.scheme).removeModel(t.path)}});const Ro=$s({matMul_:function(e,t,n=!1,r=!1){let s=Ns(e,"a","matMul"),o=Ns(t,"b","matMul");[s,o]=ds(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return ks.runKernel("BatchMatMul",a,i)}});const Co=$s({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const s={indices:Ns(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return ks.runKernel("OneHot",s,o)}});const Bo=$s({transpose_:function(e,t){const n=Ns(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),a(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{a(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return ks.runKernel("Transpose",r,s)}});const Po=$s({confusionMatrix_:function(e,t,n){const r=Ns(e,"labels","confusionMatrix"),s=Ns(t,"predictions","confusionMatrix");a(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),a(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),a(1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),a(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),a(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const o=Co(wo(r,"int32"),n),i=Co(wo(s,"int32"),n),l=Bo(o),u=Ro(l,i);return wo(u,"int32")}});var Oo=Object.freeze({__proto__:null,confusionMatrix:Po});function Lo(e,t,n){if(l(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=_s(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ds(e,t,r,n)}let zo;function Wo(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Jn("FromPixels",ks.backendName)){const n={pixels:e},r={numChannels:t};return ks.runKernel("FromPixels",n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(a?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(o||s||i)&&(null==zo&&(zo=document.createElement("canvas").getContext("2d")),zo.canvas.width=l,zo.canvas.height=u,zo.drawImage(e,0,0,l,u),c=zo.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Lo(h,[u,l,t],"int32")}function Ko(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}const qo=$s({fromPixels_:Wo});var Uo=Object.freeze({__proto__:null,fromPixelsAsync:async function(e,t=3){let n=null;if(P().getBool("WRAP_TO_IMAGEBITMAP")&&Ko(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Wo(n,t)},toPixels:async function(e,t){let n=Ns(e,"img","toPixels");if(!(e instanceof ns)){const e=n;n=wo(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),i="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<o;r++){const s=a[e*o+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===o?(t[0]=s*i,t[1]=s*i,t[2]=s*i):t[r]=s*i}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l},fromPixels:qo});function Go(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===c(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,o=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const i=e.shape,l=s.slice();l.pop();let u=1;for(let e=o;e<n;++e)u*=i[e],l.push(i[e]);const h=[...M(e.shape).map(e=>e/u),1].slice(0,o);return[l,a,u,h]}var Ho=Object.freeze({__proto__:null,prepareAndValidate:Go});function Vo(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(o+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+e.length-r)throw new Error(o+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(o+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(o+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function jo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Vo(n,t,e)}function Jo(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let a=1;for(let e=s;e<o;++e)a*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:c(t.shape)/i,sliceSize:a,strides:[...M(n.slice(0,s)),1],outputSize:c(n)}}var Zo=Object.freeze({__proto__:null,validateUpdateShape:Vo,validateInput:jo,calculateShapes:Jo});function Yo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Xo(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Qo(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function ea(e,t,n){return n<=e?n:n-(t-1)}function ta(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function na(e,t,n,r,s,o,a,i,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=ra(a,l,u,r,e),h=sa(i,l,u,s,e),d=Qo(o,l,u,e)}else for(let t=0;t<u;t++)c[t]=aa(a,r,o,e,t,l),h[t]=ia(i,s,o,e,t,l),d[t]=oa(o,t,l);return{begin:c,end:h,strides:d}}function ra(e,t,n,r,s){const o=[...s],a=ta(n,t);for(let s=0;s<o.length;s++)if(a.indexOf(s)>-1)o[s]=0;else{const a=ea(t,n,s);let i=r[a];e&1<<a&&(i=0),o[s]=i}return o}function sa(e,t,n,r,o){const a=[...o],i=ta(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=ea(t,n,s);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let e=0;e<a.length;e++){const t=o[e];a[e]<0&&(a[e]+=t),a[e]=s(0,a[e],o[e])}return a}function oa(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function aa(e,t,n,r,o,a){let i=t[o];const l=n[o]||1;(e&1<<o||a&1<<o||null==i)&&(i=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[o];return i<0&&(i+=u),i=s(0,i,u-1),i}function ia(e,t,n,r,o,a){let i=t[o];const l=n[o]||1;(e&1<<o||a&1<<o||null==i)&&(i=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[o];return i<0&&(i+=u),i=l>0?s(0,i,u):s(-1,i,u-1),i}var la=Object.freeze({__proto__:null,assertParamsValid:function(e,t,n){const r=e.shape.length;a(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),a(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)a(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)},maskToAxes:Yo,computeOutShape:Xo,stridesWithElidedDims:Qo,getNormalizedAxes:na,startIndicesWithElidedDims:ra,stopIndicesWithElidedDims:sa,stridesForAxis:oa,startForAxis:aa,stopForAxis:ia,isSliceContinous:function(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0},computeFlatOffset:function(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n},parseSliceParams:function(e,t,n){let r;const s=e.shape.length;let o;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{a(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(a(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,o]},sliceInfo:function(e,t,n,r,s,o,a,i,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Yo(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Yo(i),g=e.slice();f.forEach(e=>{u[e]=0,c[e]=1,g.splice(e,0,1)});const{begin:m,end:b,strides:w}=na(g,d,p,u,c,h,s,o,a);u=m,c=b,h=w;const y=Yo(l);y.forEach(e=>{c[e]=u[e]+1,h[e]=1});const k=Xo(u,c,h),v=k.filter((e,t)=>-1===y.indexOf(t));return{nonStrided:h.every(e=>1===e),$begin:u,$end:c,$strides:h,size:k,newShape:g,outShape:v}}});class ua{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ca{constructor(){this.classNameMap={}}static getMap(){return null==ca.instance&&(ca.instance=new ca),ca.instance}static register(e){ca.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ha(e){a(null!=e.className,()=>"Class being registered does not have the static className property defined."),a("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),a(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ca.register(e)}var da=Object.freeze({__proto__:null,Serializable:ua,SerializationMap:ca,registerClass:ha});function pa(){return 32===ks.backend.floatPrecision()?.001:.1}function fa(e,t,n){let r=!0;if((k(e)||k(t))&&(r=!1),k(e)&&k(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=_s(e),r=_s(t);if(!h(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=k(e)?e:u(e),o=k(t)?t:u(t);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.\nActual:   ${s}.\nExpected: ${o}.`);for(let e=0;e<o.length;++e){const t=s[e],r=o[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${o}.`)}}function ga(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var ma=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=pa()),fa(e,t,(e,t)=>ga(e,t,n))},testEpsilon:pa,expectPromiseToFail:function(e,t){e().then(()=>t.fail(),()=>t())},expectArraysEqual:function(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return E(e)||E(e[0])||E(t)||E(t[0])?fa(e,n,(e,t)=>e==t):fa(e,t,(e,t)=>ga(e,t,0))},expectNumbersClose:function(e,t,n){if(null==n&&(n=pa()),!ga(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)},expectValuesInRange:function(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))},encodeStrings:function e(t){for(let n=0;n<t.length;n++){const r=t[n];Array.isArray(r)?e(r):t[n]=qr(r)}return t}});const ba="3.8.0";function wa(){P().set("PROD",!0)}function ya(){P().set("DEBUG",!0)}function ka(){P().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function va(e){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function xa(){ks.disposeVariables()}function Ea(){return ks}function Sa(){return ks.memory()}function _a(e){return ks.profile(e)}function Aa(e,t){return ks.tidy(e,t)}function Na(e){fs(e).forEach(e=>e.dispose())}function Ia(e){return ks.keep(e)}function Ma(e){return ks.time(e)}function $a(e){return ks.setBackend(e)}function Ta(){return ks.ready()}function Da(){return ks.backendName}function Fa(e){ks.removeBackend(e)}function Ra(e){return ks.findBackend(e)}function Ca(e){return ks.findBackendFactory(e)}function Ba(e,t,n=1){return ks.registerBackend(e,t,n)}function Pa(){return ks.backend}function Oa(e,t){P().setPlatform(e,t)}const La=$s({add_:function(e,t){let n=Ns(e,"a","add"),r=Ns(t,"b","add");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("Add",s)}});const za=$s({floorDiv_:function(e,t){let n=Ns(e,"a","floorDiv"),r=Ns(t,"b","floorDiv");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("FloorDiv",s)}});const Wa=$s({div_:function(e,t){let n=Ns(e,"a","div"),r=Ns(t,"b","div");if([n,r]=ds(n,r),"int32"===n.dtype&&"int32"===r.dtype)return za(n,r);const s={a:n,b:r};return ks.runKernel("RealDiv",s,{})}});const Ka=$s({mul_:function(e,t){let n=Ns(e,"a","mul"),r=Ns(t,"b","mul");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("Multiply",s)}});const qa=$s({abs_:function(e){const t=Ns(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ks.runKernel("ComplexAbs",e)}{const e={x:t};return ks.runKernel("Abs",e)}}});const Ua=$s({acos_:function(e){const t={x:Ns(e,"x","acos")};return ks.runKernel("Acos",t)}});const Ga=$s({acosh_:function(e){const t={x:Ns(e,"x","acosh")};return ks.runKernel("Acosh",t)}});const Ha=$s({addN_:function(e){a(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),a(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Ns(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!h(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return ks.runKernel("AddN",r)}});const Va=$s({all_:function(e,t=null,n=!1){const r={x:Ns(e,"x","all","bool")},s={axis:t,keepDims:n};return ks.runKernel("All",r,s)}});const ja=$s({any_:function(e,t=null,n=!1){const r={x:Ns(e,"x","any","bool")},s={axis:t,keepDims:n};return ks.runKernel("Any",r,s)}});const Ja=$s({argMax_:function(e,t=0){const n={x:Ns(e,"x","argMax")},r={axis:t};return ks.runKernel("ArgMax",n,r)}});const Za=$s({argMin_:function(e,t=0){const n={x:Ns(e,"x","argMin")},r={axis:t};return ks.runKernel("ArgMin",n,r)}});const Ya=$s({asin_:function(e){const t={x:Ns(e,"x","asin")};return ks.runKernel("Asin",t)}});const Xa=$s({asinh_:function(e){const t={x:Ns(e,"x","asinh")};return ks.runKernel("Asinh",t)}});const Qa=$s({atan_:function(e){const t={x:Ns(e,"x","atan")};return ks.runKernel("Atan",t)}});const ei=$s({atan2_:function(e,t){let n=Ns(e,"a","atan2"),r=Ns(t,"b","atan2");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("Atan2",s)}});const ti=$s({atanh_:function(e){const t={x:Ns(e,"x","atanh")};return ks.runKernel("Atanh",t)}});function ni(e,t,n,r,s,o,a="channelsLast"){const[i,l]=ai(t);let u;if("channelsLast"===a)u=[i,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);u=[i,l,e[1],e[1]]}return ri(e,u,n,r,s,o,!1,a)}function ri(e,t,n,r,s,o,a=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=ai(n),[b,w]=ai(r),y=li(d,b),k=li(p,w),{padInfo:v,outHeight:x,outWidth:E}=function(e,t,n,r,s,o,a,i,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=oi(e,t,n));const o=e[0],a=e[1],i=ui((o-t+2*r)/n+1,s),l=ui((a-t+2*r)/n+1,s);return[i,l]}([t,n],o,r,e,i);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+o-t),i=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(i/2);u={top:l,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-o+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=ui((t-o+d+p)/r+1,i),h=ui((n-a+f+g)/s+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,y,k,o,i),S=a?f*h:f;let _;return"channelsFirst"===i?_=[l,S,x,E]:"channelsLast"===i&&(_=[l,x,E,S]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:x,outWidth:E,outChannels:S,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:w,inShape:e,outShape:_,filterShape:t}}function si(e,t,n,r,s,o=!1,a="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,w,y]=ii(n),[k,v,x]=ii(r),E=li(p,k),S=li(f,v),_=li(g,x),{padInfo:A,outDepth:N,outHeight:I,outWidth:M}=function(e,t,n,r,s,o,a,i,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,s,o){null==s&&(s=oi(e,t,r));const a=e[0],i=e[1],l=e[2],u=ui((a-t+2*s)/r+1,o),c=ui((i-t+2*s)/r+1,o),h=ui((l-t+2*s)/r+1,o);return[u,c,h,n]}([t,n,r,1],i,1,s,e,c);d=o[0],p=o[1],f=o[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/o),f=Math.ceil(r/a);const e=(d-1)*s+i-t,c=(p-1)*o+l-n,g=(f-1)*a+u-r,m=Math.floor(e/2),b=e-m,w=Math.floor(c/2),y=c-w,k=Math.floor(g/2);h={top:w,bottom:y,left:k,right:g-k,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/s),p=Math.ceil((n-l+1)/o),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,w,y,E,S,_,i),$=o?m*d:m;let T;return"channelsFirst"===a?T=[l,$,N,I,M]:"channelsLast"===a&&(T=[l,N,I,M,$]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:I,outWidth:M,outChannels:$,padInfo:A,strideDepth:b,strideHeight:w,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:E,effectiveFilterHeight:S,effectiveFilterWidth:_,dilationDepth:k,dilationHeight:v,dilationWidth:x,inShape:e,outShape:T,filterShape:t}}function oi(e,t,n,r=1){const s=li(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ai(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ii(e){return"number"==typeof e?[e,e,e]:e}function li(e,t){return t<=1?e:e+(e-1)*(t-1)}function ui(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function ci(e){const[t,n,r]=ai(e);return 1===t&&1===n&&1===r}function hi(e,t){return ci(e)||ci(t)}function di(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const pi=$s({reshape_:function(e,t){const n={x:Ns(e,"x","reshape","string_or_numeric")},r={shape:t};return ks.runKernel("Reshape",n,r)}});const fi=$s({avgPool_:function(e,t,n,r,s){const o=Ns(e,"x","avgPool","float32");a(hi(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=o,l=!1;3===o.rank&&(l=!0,i=pi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&a(d(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let h=ks.runKernel("AvgPool",u,c);return h=wo(h,o.dtype),l?pi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const gi=$s({avgPool3d_:function(e,t,n,r,s,o="NDHWC"){const i=Ns(e,"x","avgPool3d","float32");let l=i,u=!1;4===i.rank&&(u=!0,l=pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),a(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),a("NDHWC"===o,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+o),null!=s&&a(d(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:o};let p=ks.runKernel("AvgPool3D",c,h);return p=wo(p,l.dtype),u?pi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const mi=$s({concat_:function(e,t=0){a(e.length>=1,()=>"Pass at least one tensor to concat");const n=Is(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return yo(n[0]);const r=n,s={axis:t};return ks.runKernel("Concat",r,s)}});const bi=$s({sigmoid_:function(e){const t={x:Ns(e,"x","sigmoid")};return ks.runKernel("Sigmoid",t)}});const wi=$s({slice_:function(e,t,n){const r=Ns(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:t,size:n};return ks.runKernel("Slice",s,o)}});const yi=$s({tanh_:function(e){const t={x:Ns(e,"x","tanh")};return ks.runKernel("Tanh",t)}});const ki=$s({basicLSTMCell_:function(e,t,n,r,s,o){const a=Ns(e,"forgetBias","basicLSTMCell"),i=Ns(t,"lstmKernel","basicLSTMCell"),l=Ns(n,"lstmBias","basicLSTMCell"),u=Ns(r,"data","basicLSTMCell"),c=Ns(s,"c","basicLSTMCell"),h=Ns(o,"h","basicLSTMCell"),d=mi([u,h],1),p=Ro(d,i),f=La(p,l),g=f.shape[0],m=f.shape[1]/4,b=[g,m],w=wi(f,[0,0],b),y=wi(f,[0,m],b),k=wi(f,[0,2*m],b),v=wi(f,[0,3*m],b),x=La(Ka(bi(w),yi(y)),Ka(c,bi(La(a,k))));return[x,Ka(yi(x),bi(v))]}});const vi=$s({batchToSpaceND_:function(e,t,n){const r=Ns(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);a(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),a(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),a(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const o={x:r},i={blockShape:t,crops:n};return ks.runKernel("BatchToSpaceND",o,i)}});const xi=$s({batchNorm_:function(e,t,n,r,s,o){null==o&&(o=.001);const i=Ns(e,"x","batchNorm"),l=Ns(t,"mean","batchNorm"),u=Ns(n,"variance","batchNorm");let c,h;null!=s&&(c=Ns(s,"scale","batchNorm")),null!=r&&(h=Ns(r,"offset","batchNorm")),a(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a(null==h||l.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a(null==c||l.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:function(e){let t;return t=0===e.rank||1===e.rank?pi(e,[1,1,1,e.size]):2===e.rank?pi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?pi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:c,offset:h,mean:l,variance:u},p={varianceEpsilon:o},f=ks.runKernel("FusedBatchNorm",d,p);return pi(f,i.shape)}});const Ei=$s({batchNorm2d_:function(e,t,n,r,s,o){const i=Ns(e,"x","batchNorm"),l=Ns(t,"mean","batchNorm"),u=Ns(n,"variance","batchNorm");let c,h;return null!=s&&(c=Ns(s,"scale","batchNorm")),null!=r&&(h=Ns(r,"offset","batchNorm")),a(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),a(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),a(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&a(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=h&&a(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),xi(i,l,u,h,c,o)}});const Si=$s({batchNorm3d_:function(e,t,n,r,s,o){const i=Ns(e,"x","batchNorm"),l=Ns(t,"mean","batchNorm"),u=Ns(n,"variance","batchNorm");let c,h;return null!=s&&(c=Ns(s,"scale","batchNorm")),null!=r&&(h=Ns(r,"offset","batchNorm")),a(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),a(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),a(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&a(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=h&&a(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),xi(i,l,u,h,c,o)}});const _i=$s({batchNorm4d_:function(e,t,n,r,s,o){const i=Ns(e,"x","batchNorm"),l=Ns(t,"mean","batchNorm"),u=Ns(n,"variance","batchNorm");let c,h;return null!=s&&(c=Ns(s,"scale","batchNorm")),null!=r&&(h=Ns(r,"offset","batchNorm")),a(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),a(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),a(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&a(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=h&&a(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),xi(i,l,u,h,c,o)}});const Ai=$s({bincount_:function(e,t,n){const r=Ns(e,"x","bincount"),s=Ns(t,"weights","bincount");a("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),a(n>=0,()=>`size must be non-negative, but got ${n}.`),a(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+s.shape+".");const o={x:r,weights:s},i={size:n};return ks.runKernel("Bincount",o,i)}});const Ni=$s({broadcastTo_:function(e,t){let n=Ns(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=pi(n,e)}const s=n.shape,o=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])o[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===o.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return yo(n);const a={x:n},i={reps:o};return ks.runKernel("Tile",a,i)}});const Ii=$s({ceil_:function(e){const t={x:Ns(e,"x","ceil")};return ks.runKernel("Ceil",t)}});const Mi=$s({clipByValue_:function(e,t,n){const r=Ns(e,"x","clipByValue");a(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const s={x:r},o={clipValueMin:t,clipValueMax:n};return ks.runKernel("ClipByValue",s,o)}});const $i=$s({concat1d_:function(e){return mi(e,0)}});const Ti=$s({concat2d_:function(e,t){return mi(e,t)}});const Di=$s({concat3d_:function(e,t){return mi(e,t)}});const Fi=$s({concat4d_:function(e,t){return mi(e,t)}});const Ri=$s({conv2d_:function(e,t,n,r,s="NHWC",o=[1,1],i){const l=Ns(e,"x","conv2d"),u=Ns(t,"filter","conv2d");let c=l,h=!1;3===l.rank&&(h=!0,c=pi(l,[1,l.shape[0],l.shape[1],l.shape[2]])),a(4===c.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),a(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=i&&a(d(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const p="NHWC"===s?c.shape[3]:c.shape[1];a(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),a(hi(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const f={x:c,filter:u},g={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},m=ks.runKernel("Conv2D",f,g);return h?pi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Ci=$s({conv1d_:function(e,t,n,r,s="NWC",o=1,i){const l=Ns(e,"x","conv1d"),u=Ns(t,"filter","conv1d");let c=l,h=!1;2===l.rank&&(h=!0,c=pi(l,[1,l.shape[0],l.shape[1]])),a(3===c.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),a(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=i&&a(d(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),a(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),a(hi(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),a("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const p=pi(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=pi(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Ri(f,p,[1,n],r,"NHWC",[1,o],i);return pi(g,h?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}});const Bi=$s({conv2DBackpropInput_:function(e,t,n,r,s,o="NHWC",i){a(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let l=e,u=t,c=!1;3===t.rank&&(c=!0,u=pi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),a(4===l.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+l.length+"."),a(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),a(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const h="NHWC"===o?l[3]:l[1],p="NHWC"===o?u.shape[3]:u.shape[1];a(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),a(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),null!=i&&a(d(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f={dy:u,filter:n},g={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,inputShape:l},m=ks.runKernel("Conv2DBackpropInput",f,g);return c?pi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Pi=$s({conv2dTranspose_:function(e,t,n,r,s,o){const a=Ns(e,"x","conv2dTranspose"),i=Ns(t,"filter","conv2dTranspose");return Bi(n,a,i,r,s,"NHWC",o)}});const Oi=$s({conv3d_:function(e,t,n,r,s="NDHWC",o=[1,1,1]){const i=Ns(e,"x","conv3d"),l=Ns(t,"filter","conv3d");let u=i,c=!1;4===i.rank&&(c=!0,u=pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),a(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),a(5===l.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+l.rank+"."),a(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),a(hi(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),a("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:o},p=ks.runKernel("Conv3D",h,d);return c?pi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Li=$s({conv3DBackpropInput_:function(e,t,n,r,s){a(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,i=t,l=!1;4===t.rank&&(l=!0,i=pi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const u=o[4],c=i.shape[4];a(5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."),a(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),a(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),a(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),a(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const h={dy:i,filter:n},d={pad:s,strides:r,inputShape:o},p=ks.runKernel("Conv3DBackpropInputV2",h,d);return l?pi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const zi=$s({conv3dTranspose_:function(e,t,n,r,s){const o=Ns(e,"x","conv3dTranspose"),a=Ns(t,"filter","conv3dTranspose");return Li(n,o,a,r,s)}});const Wi=$s({cos_:function(e){const t={x:Ns(e,"x","cos")};return ks.runKernel("Cos",t)}});const Ki=$s({cosh_:function(e){const t={x:Ns(e,"x","cosh")};return ks.runKernel("Cosh",t)}});const qi=$s({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ns(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return ks.runKernel("Cumsum",s,o)}});const Ui=$s({denseBincount_:function(e,t,n,r=!1){const s=Ns(e,"x","denseBincount"),o=Ns(t,"weights","denseBincount");a("int32"===s.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+s.dtype),a(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),a(n>=0,()=>`size must be non-negative, but got ${n}.`),a(o.size===s.size||0===o.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: `+o.shape+".");const i={x:s,weights:o},l={size:n,binaryOutput:r};return ks.runKernel("DenseBincount",i,l)}});const Gi=$s({depthToSpace_:function(e,t,n="NHWC"){const r=Ns(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],o="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];a(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),a(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t} for depthToSpace with input shape\n        ${r.shape}`),a(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const l={x:r},u={blockSize:t,dataFormat:n};return ks.runKernel("DepthToSpace",l,u)}});const Hi=$s({depthwiseConv2d_:function(e,t,n,r,s="NHWC",o=[1,1],i){const l=Ns(e,"x","depthwiseConv2d"),u=Ns(t,"filter","depthwiseConv2d");let c=l,h=!1;3===l.rank&&(h=!0,c=pi(l,[1,l.shape[0],l.shape[1],l.shape[2]])),a(4===c.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),a(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),a(c.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&a(d(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const p={x:c,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},g=ks.runKernel("DepthwiseConv2dNative",p,f);return h?pi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Vi=$s({diag_:function(e){const t={x:Ns(e,"x","diag")};return ks.runKernel("Diag",t)}});const ji=$s({dilation2d_:function(e,t,n,r,s=[1,1],o="NHWC"){const i=Ns(e,"x","dilation2d"),l=Ns(t,"filter","dilation2d");a(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),a(3===l.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+l.rank+"."),a("NHWC"===o,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+o);let u=i,c=!1;3===i.rank&&(u=pi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:u,filter:l},d={strides:n,pad:r,dilations:s},p=ks.runKernel("Dilation2D",h,d);return c?pi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});function Ji(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],o=t.length-r-1,a=t[o];(null==s||1===s&&a>1)&&n.unshift(o)}return n}function Zi(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const Yi=$s({equal_:function(e,t){let n=Ns(e,"a","equal","string_or_numeric"),r=Ns(t,"b","equal","string_or_numeric");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("Equal",s)}});const Xi=$s({where_:function(e,t,n){const r=Ns(t,"a","where"),s=Ns(n,"b","where"),o=Ns(e,"condition","where","bool"),a=Zi(Zi(o.shape,r.shape),s.shape),i={condition:Ni(o,a),t:Ni(r,a),e:Ni(s,a)};return ks.runKernel("Select",i)}});const Qi=$s({zerosLike_:function(e){const t={x:Ns(e,"x","zerosLike")};return ks.runKernel("ZerosLike",t)}});const el=$s({divNoNan_:function(e,t){let n=Ns(e,"a","div"),r=Ns(t,"b","div");[n,r]=ds(n,r);const s=Wa(n,r),o=Qi(s),a=Yi(r,o);return Xi(a,o,s)}});const tl=$s({dot_:function(e,t){const n=Ns(e,"t1","dot"),r=Ns(t,"t2","dot");a(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(a(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),1===n.rank&&1===r.rank){const e=pi(n,[1,-1]),t=pi(r,[-1,1]),s=Ro(e,t);return pi(s,[])}if(1===n.rank&&2===r.rank){const e=pi(n,[1,-1]),t=pi(r,[r.shape[0],r.shape[1]]),s=Ro(e,t);return pi(s,[s.size])}if(2===n.rank&&1===r.rank){const e=pi(r,[-1,1]),t=Ro(n,e);return pi(t,[t.size])}{const e=pi(r,[r.shape[0],r.shape[1]]);return Ro(n,e)}}});const nl=$s({einsum_:function(e,...t){const n=t.map((e,t)=>Ns(e,"tensors"+t,"einsum")),r={equation:e};return ks.runKernel("Einsum",n,r)}});const rl=$s({elu_:function(e){const t={x:Ns(e,"x","elu")};return ks.runKernel("Elu",t)}});const sl=$s({erf_:function(e){let t=Ns(e,"x","erf");a("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=wo(t,"float32"));const n={x:t};return ks.runKernel("Erf",n)}});const ol=$s({exp_:function(e){const t={x:Ns(e,"x","exp")};return ks.runKernel("Exp",t)}});const al=$s({expandDims_:function(e,t=0){const n=Ns(e,"x","expandDims","string_or_numeric");a(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:t};return ks.runKernel("ExpandDims",r,s)}});const il=$s({expm1_:function(e){const t={x:Ns(e,"x","expm1")};return ks.runKernel("Expm1",t)}});const ll=$s({tile_:function(e,t){const n=Ns(e,"x","tile","string_or_numeric");a(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},s={reps:t};return ks.runKernel("Tile",r,s)}});const ul=$s({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=bo([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)s.set(1,e,e);const a=pi(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return ll(al(a,0),[n[0],1,1]);if(2===n.length)return ll(al(al(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return ll(al(al(al(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function cl(e,t,n){const r={shape:e,value:t,dtype:n};return ks.runKernel("Fill",{},r)}const hl=$s({floor_:function(e){const t={x:Ns(e,"x","floor")};return ks.runKernel("Floor",t)}});const dl=$s({gather_:function(e,t,n=0,r=0){const s={x:Ns(e,"x","gather"),indices:Ns(t,"indices","gather","int32")},o={axis:n,batchDims:r};return ks.runKernel("GatherV2",s,o)}});const pl=$s({greater_:function(e,t){let n=Ns(e,"a","greater","string_or_numeric"),r=Ns(t,"b","greater","string_or_numeric");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("Greater",s)}});const fl=$s({greaterEqual_:function(e,t){let n=Ns(e,"a","greaterEqual","string_or_numeric"),r=Ns(t,"b","greaterEqual","string_or_numeric");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("GreaterEqual",s)}});const gl=$s({imag_:function(e){const t={input:Ns(e,"input","imag")};return ks.runKernel("Imag",t)}});const ml=$s({isFinite_:function(e){const t={x:Ns(e,"x","isFinite")};return ks.runKernel("IsFinite",t)}});const bl=$s({isInf_:function(e){const t={x:Ns(e,"x","isInf")};return ks.runKernel("IsInf",t)}});const wl=$s({isNaN_:function(e){const t={x:Ns(e,"x","isNaN")};return ks.runKernel("IsNan",t)}});const yl=$s({leakyRelu_:function(e,t=.2){const n={x:Ns(e,"x","leakyRelu")},r={alpha:t};return ks.runKernel("LeakyRelu",n,r)}});const kl=$s({less_:function(e,t){let n=Ns(e,"a","less","string_or_numeric"),r=Ns(t,"b","less","string_or_numeric");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("Less",s)}});const vl=$s({lessEqual_:function(e,t){let n=Ns(e,"a","lessEqual","string_or_numeric"),r=Ns(t,"b","lessEqual","string_or_numeric");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("LessEqual",s)}});function xl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ks.runKernel("LinSpace",{},r)}const El=$s({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const o=Ns(e,"x","localResponseNormalization");a(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),a(d(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=o,l=!1;3===o.rank&&(l=!0,i=pi(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:i},c={depthRadius:t,bias:n,alpha:r,beta:s},h=ks.runKernel("LRN",u,c);return l?pi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Sl=$s({log_:function(e){const t={x:Ns(e,"x","log")};return ks.runKernel("Log",t)}});const _l=$s({log1p_:function(e){const t={x:Ns(e,"x","log1p")};return ks.runKernel("Log1p",t)}});function Al(e){return a(N(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Ns(t,"x","tf.grad","string_or_numeric"),s=null!=n?Ns(n,"dy","tf.grad"):null;return ks.tidy(()=>{const{value:t,grads:n}=ks.gradients(()=>e(r),[r],s);return null!=s&&i(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Dl(n),n[0]})}}function Nl(e){return a(N(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{a(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Is(t,"args","tf.grads","string_or_numeric"),s=null!=n?Ns(n,"dy","tf.grads"):null;return ks.tidy(()=>{const{value:t,grads:n}=ks.gradients(()=>e(...r),r,s);return null!=s&&i(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Dl(n),n})}}function Il(e){return a(N(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{a(t instanceof ns,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),a(null==n||n instanceof ns,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=ks.gradients(()=>e(t),[t],n);return Dl(r),{grad:r[0],value:s}}}function Ml(e){return a(N(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{a(Array.isArray(t)&&t.every(e=>e instanceof ns),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),a(null==n||n instanceof ns,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ks.gradients(()=>e(...t),t,n);return null!=n&&i(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Dl(r.grads),r}}function $l(e,t){a(N(e),()=>"The f passed in variableGrads(f) must be a function"),a(null==t||Array.isArray(t)&&t.every(e=>e instanceof rs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ks.registeredVariables)t.push(ks.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;a((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:o,grads:i}=ks.gradients(e,t,null,!0);a(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),a(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((e,t)=>{null!=i[t]&&(l[e.name]=i[t])}),null!=r&&r.forEach(e=>l[e.name]=null),{value:o,grads:l}}function Tl(e){return ks.customGrad(e)}function Dl(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const Fl=$s({neg_:function(e){const t={x:Ns(e,"x","neg")};return ks.runKernel("Neg",t)}});const Rl=$s({softplus_:function(e){const t={x:Ns(e,"x","softplus")};return ks.runKernel("Softplus",t)}});const Cl=$s({logSigmoid_:function(e){const t=Ns(e,"x","logSigmoid");return Tl(e=>({value:Fl(Rl(Fl(e))),gradFunc:t=>Ka(t,bi(Fl(e)))}))(t)}});const Bl=$s({max_:function(e,t=null,n=!1){const r={x:Ns(e,"x","max")},s={reductionIndices:t,keepDims:n};return ks.runKernel("Max",r,s)}});const Pl=$s({sub_:function(e,t){let n=Ns(e,"a","sub"),r=Ns(t,"b","sub");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("Sub",s)}});const Ol=$s({sum_:function(e,t=null,n=!1){let r=Ns(e,"x","sum");"bool"===r.dtype&&(r=wo(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return ks.runKernel("Sum",s,o)}});const Ll=$s({logSoftmax_:function(e,t=-1){const n=Ns(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Tl((e,n)=>{const r=Bl(e,t,!0),s=Pl(e,r),o=Pl(wo(s,"float32"),Sl(Ol(ol(s),t,!0)));n([o]);return{value:o,gradFunc:(e,n)=>{const[r]=n,s=ol(r);return Pl(e,Ka(Ol(e,t,!0),s))}}})(n)}});function zl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Wl(e,t,n){const r=e.length+t.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[o++]):s.push(t[a++]);return s}function Kl(e,t){return Wl(e,t.map(e=>1),t)}const ql=$s({logSumExp_:function(e,t=null,n=!1){const r=Ns(e,"x","logSumExp"),s=f(t,r.shape),o=Bl(r,s,!0),a=Pl(r,o),i=ol(a),l=Ol(i,s),u=Sl(l),c=La(pi(o,u.shape),u);if(n){const e=Kl(c.shape,s);return pi(c,e)}return c}});const Ul=$s({logicalAnd_:function(e,t){const n=Ns(e,"a","logicalAnd","bool"),r=Ns(t,"b","logicalAnd","bool");Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("LogicalAnd",s)}});const Gl=$s({logicalNot_:function(e){const t={x:Ns(e,"x","logicalNot","bool")};return ks.runKernel("LogicalNot",t)}});const Hl=$s({logicalOr_:function(e,t){const n=Ns(e,"a","logicalOr","bool"),r=Ns(t,"b","logicalOr","bool");Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("LogicalOr",s)}});const Vl=$s({logicalXor_:function(e,t){const n=Ns(e,"a","logicalXor","bool"),r=Ns(t,"b","logicalXor","bool");return Zi(n.shape,r.shape),Ul(Hl(e,t),Gl(Ul(e,t)))}});const jl=$s({maxPool_:function(e,t,n,r,s){const o=Ns(e,"x","maxPool");let i=o,l=!1;3===o.rank&&(l=!0,i=pi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),a(hi(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&a(d(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s},h=ks.runKernel("MaxPool",u,c);return l?pi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Jl=$s({maxPool3d_:function(e,t=[1,1,1],n,r,s,o="NDHWC"){const i=Ns(e,"x","maxPool3d");let l=i,u=!1;4===i.rank&&(u=!0,l=pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),a(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),a("NDHWC"===o,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+o),null!=s&&a(d(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:o},p=ks.runKernel("MaxPool3D",c,h);return u?pi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Zl=$s({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const o={x:Ns(e,"x","maxPoolWithArgmax")},a={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=ks.runKernel("MaxPoolWithArgmax",o,a);return{result:i[0],indexes:i[1]}}});const Yl=$s({maximum_:function(e,t){let n=Ns(e,"a","maximum"),r=Ns(t,"b","maximum");[n,r]=ds(n,r),"bool"===n.dtype&&(n=wo(n,"int32"),r=wo(r,"int32")),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("Maximum",s)}});const Xl=$s({mean_:function(e,t=null,n=!1){const r={x:Ns(e,"x","mean")},s={axis:t,keepDims:n};return ks.runKernel("Mean",r,s)}});function Ql(e,t="float32"){if("complex64"===t){const t=Ql(e,"float32"),n=Ql(e,"float32");return Ts(t,n)}const n=D(c(e),t);return ks.makeTensor(n,e,t)}function eu(e,t="float32"){if("complex64"===t){const t=eu(e,"float32"),n=Ql(e,"float32");return Ts(t,n)}const n=T(c(e),t);return ks.makeTensor(n,e,t)}function tu(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=Ns(e,"x","meshgrid",e instanceof ns?e.dtype:"float32");if(void 0===t)return[r];let s=Ns(t,"y","meshgrid",t instanceof ns?t.dtype:"float32");const o=c(r.shape),a=c(s.shape);return"xy"===n?(r=pi(r,[1,-1]),s=pi(s,[-1,1]),[Ro(eu([a,1],r.dtype),r),Ro(s,eu([1,o],s.dtype))]):(r=pi(r,[-1,1]),s=pi(s,[1,-1]),[Ro(r,eu([1,a],r.dtype)),Ro(eu([o,1],s.dtype),s)])}const nu=$s({min_:function(e,t=null,n=!1){const r={x:Ns(e,"x","min")},s={axis:t,keepDims:n};return ks.runKernel("Min",r,s)}});const ru=$s({minimum_:function(e,t){let n=Ns(e,"a","minimum"),r=Ns(t,"b","minimum");[n,r]=ds(n,r),"bool"===n.dtype&&(n=wo(n,"int32"),r=wo(r,"int32")),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("Minimum",s)}});const su=$s({mirrorPad_:function(e,t,n){a("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=Ns(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");a(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)a(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),a(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape `+r.shape);const o={paddings:t,mode:n},i={x:r};return ks.runKernel("MirrorPad",i,o)}});const ou=$s({mod_:function(e,t){let n=Ns(e,"a","mod"),r=Ns(t,"b","mod");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("Mod",s)}});const au=$s({square_:function(e){const t=Ns(e,"x","square");return ks.runKernel("Square",{x:t},{})}});const iu=$s({moments_:function(e,t=null,n=!1){const r=f(t,(e=Ns(e,"x","moments")).shape),s=Xl(e,r,n);let o=s.shape;n||(o=Kl(s.shape,r));const a=au(Pl(wo(e,"float32"),pi(s,o)));return{mean:s,variance:Xl(a,r,n)}}});const lu=$s({multiRNNCell_:function(e,t,n,r){const s=Ns(t,"data","multiRNNCell"),o=Is(n,"c","multiRNNCell"),a=Is(r,"h","multiRNNCell");let i=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](i,o[t],a[t]);l.push(n[0]),l.push(n[1]),i=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}});const uu=$s({multinomial_:function(e,t,n,r=!1){const s=Ns(e,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+o+".");if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);n=n||Math.random();const i={logits:1===a?pi(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=ks.runKernel("Multinomial",i,l);return 1===a?pi(u,[u.size]):u}});const cu=$s({notEqual_:function(e,t){let n=Ns(e,"a","notEqual","string_or_numeric"),r=Ns(t,"b","notEqual","string_or_numeric");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("NotEqual",s)}});const hu=$s({onesLike_:function(e){const t={x:Ns(e,"x","onesLike")};return ks.runKernel("OnesLike",t)}});const du=$s({outerProduct_:function(e,t){const n=Ns(e,"v1","outerProduct"),r=Ns(t,"v2","outerProduct");a(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=pi(n,[-1,1]),o=pi(r,[1,-1]);return Ro(s,o)}});const pu=$s({pad_:function(e,t,n=0){const r=Ns(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},o={x:r};return ks.runKernel("PadV2",o,s)}});const fu=$s({pad1d_:function(e,t,n=0){return a(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),pu(e,[t],n)}});const gu=$s({pad2d_:function(e,t,n=0){return a(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),pu(e,t,n)}});const mu=$s({pad3d_:function(e,t,n=0){return a(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),pu(e,t,n)}});const bu=$s({pad4d_:function(e,t,n=0){return a(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),pu(e,t,n)}});const wu=$s({spaceToBatchND_:function(e,t,n){const r=Ns(e,"x","spaceToBatchND");a(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),a(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),a(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},o={blockShape:t,paddings:n};return ks.runKernel("SpaceToBatchND",s,o)}});const yu=$s({pool_:function(e,t,n,r,s,o){null==s&&(s=[1,1]),null==o&&(o=1),0===r&&(r="valid");const i=Ns(e,"x","maxPool");let l=i,u=!1;3===i.rank&&(u=!0,l=pi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a(hi(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const c=ni(l.shape,t,o,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),o=e.concat(r,s),a=t.map((e,t)=>(e-o[t]%e)%e),i=s.map((e,t)=>e+a[t]),l=t.map((e,t)=>[r[t],i[t]]),u=t.map((e,t)=>[0,a[t]]);return[l,u]}([c.inHeight,c.inWidth],h,d),m=p?r:"valid",b=p?l:wu(l,h,f),w=("avg"===n?()=>fi(b,t,o,m):()=>jl(b,t,o,m))(),y=p?w:vi(w,h,g);return u?pi(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const ku=$s({pow_:function(e,t){let n=Ns(e,"base","pow"),r=Ns(t,"exp","pow");[n,r]=ds(n,r);const s={a:n,b:r};return ks.runKernel("Pow",s)}});const vu=$s({prelu_:function(e,t){const n={x:Ns(e,"x","prelu"),alpha:Ns(t,"alpha","prelu")};return ks.runKernel("Prelu",n)}});const xu=$s({prod_:function(e,t=null,n=!1){let r=Ns(e,"x","prod");"bool"===r.dtype&&(r=wo(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return ks.runKernel("Prod",s,o)}});const Eu=$s({rand_:function(e,t,n){const r=c(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return ks.makeTensor(s,e,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function Su(e,t){return e(t={exports:{}},t.exports),t.exports}var _u=Su((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new r(e),o=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.alea=o}(0,e,!1)})),Au=Su((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor128=o}(0,e,!1)})),Nu=Su((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorwow=o}(0,e,!1)})),Iu=Su((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.x&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorshift7=o}(0,e,!1)})),Mu=Su((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,o=t.i;return t.w=r=r+1640531527|0,n=s[o+34&127],e=s[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[o]=n^e,t.i=o,n+(r^r>>>16)|0},function(e,t){var n,r,s,o,a,i=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,o=-32;o<l;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=a+1640531527|0,s=0==(n=i[127&o]^=r+a)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,o=512;o>0;--o)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=a,e.X=i,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.X&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor4096=o}(0,e,!1)})),$u=Su((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.tychei=o}(0,e,!1)})),Tu=Su((function(e){!function(t,n){var r,s=this,o=n.pow(256,6),a=n.pow(2,52),i=2*a;function l(e,l,p){var f=[],g=h(function e(t,n){var r,s=[],o=typeof t;if(n&&"object"==o)for(r in t)try{s.push(e(t[r],n-1))}catch(e){}return s.length?s:"string"==o?t:t+"\0"}((l=1==l?{entropy:!0}:l||{}).entropy?[e,d(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(256):(e=new Uint8Array(256),(s.crypto||s.msCrypto).getRandomValues(e)),d(e)}catch(e){var n=s.navigator,o=n&&n.plugins;return[+new Date,s,o,s.screen,d(t)]}}():e,3),f),m=new u(f),b=function(){for(var e=m.g(6),t=o,n=0;e<a;)e=256*(e+n),t*=256,n=m.g(1);for(;e>=i;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|m.g(4)},b.quick=function(){return m.g(4)/4294967296},b.double=b,h(d(m.S),t),(l.pass||p||function(e,t,r,s){return s&&(s.S&&c(s,m),e.state=function(){return c(m,{})}),r?(n.random=e,t):e})(b,g,"global"in l?l.global:this==n,l.state)}function u(e){var t,n=e.length,r=this,s=0,o=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<256;)a[s]=s++;for(s=0;s<256;s++)a[s]=a[o=255&o+e[s%n]+(t=a[s])],a[o]=t;(r.g=function(e){for(var t,n=0,s=r.i,o=r.j,a=r.S;e--;)t=a[s=255&s+1],n=256*n+a[255&(a[s]=a[o=255&o+t])+(a[o]=t)];return r.i=s,r.j=o,n})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var n,r=e+"",s=0;s<r.length;)t[255&s]=255&(n^=19*t[255&s])+r.charCodeAt(s++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=l,h(n.random(),t),e.exports){e.exports=l;try{r=require("crypto")}catch(e){}}}([],Math)}));Tu.alea=_u,Tu.xor128=Au,Tu.xorwow=Nu,Tu.xorshift7=Iu,Tu.xor4096=Mu,Tu.tychei=$u;var Du=Tu.alea;class Fu{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=Du(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,o;do{r=2*this.random()-1,s=2*this.random()-1,o=r*r+s*s}while(o>=1||0===o);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ru{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Du(s.toString()),this.randn=new Fu(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),s=this.randu(),s<t||Math.log(s)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Cu{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Du(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Bu=$s({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const o=new Ru(t,n,r,s),a=bo(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const Pu=$s({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const o=new Fu(t,n,r,!1,s),a=bo(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const Ou=$s({randomUniform_:function(e,t=0,n=1,r="float32",s){const o=bo(e,r),a=new Cu(t,n,null,s);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});function Lu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ks.runKernel("Range",{},s)}const zu=$s({real_:function(e){const t={input:Ns(e,"input","real")};return ks.runKernel("Real",t)}});const Wu=$s({reciprocal_:function(e){const t={x:Ns(e,"x","reciprocal")};return ks.runKernel("Reciprocal",t)}});const Ku=$s({relu_:function(e){const t={x:Ns(e,"x","relu")};return ks.runKernel("Relu",t)}});const qu=$s({relu6_:function(e){const t={x:Ns(e,"x","relu6")};return ks.runKernel("Relu6",t)}});const Uu=$s({reverse_:function(e,t){const n={x:Ns(e,"x","reverse")},r={dims:t};return ks.runKernel("Reverse",n,r)}});const Gu=$s({reverse1d_:function(e){const t=Ns(e,"x","reverse");return a(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Uu(t,0)}});const Hu=$s({reverse2d_:function(e,t){const n=Ns(e,"x","reverse");return a(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Uu(n,t)}});const Vu=$s({reverse3d_:function(e,t){const n=Ns(e,"x","reverse");return a(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Uu(n,t)}});const ju=$s({reverse4d_:function(e,t){const n=Ns(e,"x","reverse");return a(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Uu(n,t)}});const Ju=$s({round_:function(e){const t={x:Ns(e,"x","round")};return ks.runKernel("Round",t)}});const Zu=$s({rsqrt_:function(e){const t={x:Ns(e,"x","rsqrt")};return ks.runKernel("Rsqrt",t)}});function Yu(e,t){if((k(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&k(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ds(e,[],[],t)}const Xu=$s({selu_:function(e){const t={x:Ns(e,"x","selu")};return ks.runKernel("Selu",t)}});const Qu=$s({separableConv2d_:function(e,t,n,r,s,o=[1,1],i="NHWC"){const l=Ns(e,"x","separableConv2d"),u=Ns(t,"depthwiseFilter","separableConv2d"),c=Ns(n,"pointwiseFilter","separableConv2d");let h=l,d=!1;if(3===l.rank&&(d=!0,h=pi(l,[1,l.shape[0],l.shape[1],l.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),a(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),a(4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),a(1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),a(1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const p=u.shape[2],f=u.shape[3];a(c.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${c.shape[2]}.`);const g=Hi(h,u,r,s,i,o),m=Ri(g,c,1,"valid",i);return d?pi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const ec=async function(e,t){const n=Ns(e,"x","setdiff1d"),r=Ns(t,"y","setdiff1d");a(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),a(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),a(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),o=await r.data(),i=new Set(o);let l=0;for(let e=0;e<s.length;e++)i.has(s[e])||l++;const u=new Qr([l],n.dtype),c=new Qr([l],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};const tc=$s({sign_:function(e){const t={x:Ns(e,"x","sign")};return ks.runKernel("Sign",t)}});const nc=$s({sin_:function(e){const t={x:Ns(e,"x","sin")};return ks.runKernel("Sin",t)}});const rc=$s({sinh_:function(e){const t={x:Ns(e,"x","sinh")};return ks.runKernel("Sinh",t)}});const sc=$s({slice1d_:function(e,t,n){const r=Ns(e,"x","slice1d");return a(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),wi(r,[t],[n])}});const oc=$s({slice2d_:function(e,t,n){const r=Ns(e,"x","slice2d");return a(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),wi(r,t,n)}});const ac=$s({slice3d_:function(e,t,n){const r=Ns(e,"x","slice3d");return a(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),wi(r,t,n)}});const ic=$s({slice4d_:function(e,t,n){const r=Ns(e,"x","slice4d");return a(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),wi(r,t,n)}});const lc=$s({softmax_:function(e,t=-1){const n=Ns(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ks.runKernel("Softmax",r,s)}});const uc=$s({fft_:function(e){a("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ks.runKernel("FFT",t)}});const cc=$s({ifft_:function(e){a("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ks.runKernel("IFFT",t)}});const hc=$s({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=pi(e,[n,t]);r=cc(s)}else{const s=[n,2*(t-1)],o=pi(zu(e),[n,t]),a=pi(gl(e),[n,t]),i=Uu(wi(o,[0,1],[n,t-2]),1),l=Ka(Uu(wi(a,[0,1],[n,t-2]),1),Yu(-1)),u=mi([o,i],1),c=mi([a,l],1),h=pi(Ts(u,c),[s[0],s[1]]);r=cc(h)}if(r=zu(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=pi(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const dc=$s({split_:function(e,t,n=0){const r={x:Ns(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ks.runKernel("SplitV",r,s)}});const pc=$s({rfft_:function(e,t){a("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),o=e.shape.map(e=>e);o[e.shape.length-1]=t,s=wi(e,r,o),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=mi([e,Ql(r)],e.shape.length-1),n=t}else s=e;const o=Qi(s),i=pi(Ts(s,o),[r,n]),l=uc(i),u=Math.floor(n/2)+1,c=zu(l),h=gl(l),d=dc(c,[u,n-u],c.shape.length-1),p=dc(h,[u,n-u],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,pi(Ts(d[0],p[0]),f)}});const fc=$s({sqrt_:function(e){const t={x:Ns(e,"x","sqrt")};return ks.runKernel("Sqrt",t)}});const gc=$s({squaredDifference_:function(e,t){let n=Ns(e,"a","squaredDifference"),r=Ns(t,"b","squaredDifference");[n,r]=ds(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return ks.runKernel("SquaredDifference",s,{})}});const mc=$s({squeeze_:function(e,t){const n=Ns(e,"x","squeeze");return pi(n,g(n.shape,t).newShape)}});const bc=$s({stack_:function(e,t=0){const n=Is(e,"tensors","stack","string_or_numeric");a(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&a(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:t};return ks.runKernel("Pack",r,s)}});const wc=$s({step_:function(e,t=0){const n={x:Ns(e,"x","step")},r={alpha:t};return ks.runKernel("Step",n,r)}});const yc=$s({stridedSlice_:function(e,t,n,r,s=0,o=0,a=0,i=0,l=0){const u={x:Ns(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return ks.runKernel("StridedSlice",u,c)}});const kc=$s({tan_:function(e){const t={x:Ns(e,"x","tan")};return ks.runKernel("Tan",t)}});function vc(e,t){l(e);const n=_s(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ds(e,null,n,t)}function xc(e,t,n){if(l(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=_s(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ds(e,t,r,n)}function Ec(e,t,n){if(l(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=_s(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ds(e,t,r,n)}function Sc(e,t,n){if(l(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=_s(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ds(e,t,r,n)}function _c(e,t,n){if(l(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=_s(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ds(e,t=t||r,r,n)}const Ac=$s({topk_:function(e,t=1,n=!0){const r=Ns(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+t);const o={x:r},a={k:t,sorted:n},[i,l]=ks.runKernel("TopK",o,a);return{values:i,indices:l}}});const Nc=$s({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new Fu(t,n,r,!0,s),a=bo(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const Ic=$s({unique_:function(e,t=0){const n=Ns(e,"x","unique","string_or_numeric");a(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[o,i]=ks.runKernel("Unique",r,s);return{values:o,indices:i}}});const Mc=$s({unsortedSegmentSum_:function(e,t,n){const r=Ns(e,"x","unsortedSegmentSum"),s=Ns(t,"segmentIds","unsortedSegmentSum","int32");a(d(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},i={numSegments:n};return ks.runKernel("UnsortedSegmentSum",o,i)}});const $c=$s({unstack_:function(e,t=0){const n=Ns(e,"x","unstack","string_or_numeric");a(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:t};return ks.runKernel("Unpack",r,s)}});function Tc(e,t=!0,n,r){return ks.makeVariable(e,t,n,r)}function Dc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=bo(e,"int32"),s=bo([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const o=r.indexToLoc(n[t]),a=t*e.length;s.values.set(o,a)}return s.toTensor()}const Fc=async function(e){const t=Ns(e,"condition","whereAsync","bool"),n=await t.data(),r=Dc(t.shape,n);return e!==t&&t.dispose(),r};const Rc=async function(e,t,n){const r=Ns(e,"tensor","boolMask"),s=Ns(t,"mask","boolMask","bool"),o=null==n?0:n,l=s.rank,u=r.shape;a(l>0,()=>"mask cannot be scalar"),i(u.slice(o,o+l),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let e=o;e<o+l;e++)c*=u[e];const h=u.slice(0,o).concat([c],u.slice(o+l)),d=pi(r,h),p=pi(s,[-1]),f=await Fc(p),g=mc(f,[1]),m=dl(d,g,o);return e!==r&&r.dispose(),t!==s&&s.dispose(),g.dispose(),d.dispose(),p.dispose(),f.dispose(),m};const Cc=$s({norm_:function(e,t="euclidean",n=null,r=!1){const s=function e(t,n,r=null){if(0===t.rank)return qa(t);if(1!==t.rank&&null===r)return e(pi(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Ol(qa(t),r);if(n===1/0)return Bl(qa(t),r);if(n===-1/0)return nu(qa(t),r);if("euclidean"===n||2===n)return fc(Ol(ku(qa(t),Yu(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Bl(Ol(qa(t),r[0]),r[1]-1);if(n===1/0)return Bl(Ol(qa(t),r[1]),r[0]);if(n===-1/0)return nu(Ol(qa(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return fc(Ol(au(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Ns(e,"x","norm"),t,n);let o=s.shape;if(r){const t=f(n,e.shape);o=Kl(s.shape,t)}return pi(s,o)}});const Bc=$s({movingAverage_:function(e,t,n,r,s=!0){const o=Ns(e,"v","movingAverage"),i=Ns(t,"x","movingAverage"),l=Ns(n,"decay","movingAverage");ps(o,i),a(h(o.shape,i.shape),()=>"Shape mismatch in v and x");const u=Yu(1),c=Pl(u,l);let d=Ka(Pl(i,o),c);if(s){a(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Ns(r,"step","movingAverage");d=Wa(d,Pl(u,ku(l,e)))}return La(o,d)}});const Pc=$s({scatterND_:function(e,t,n){const r=Ns(e,"indices","scatterND","int32"),s=Ns(t,"updates","scatterND");jo(s,r,n);const o={indices:r,updates:s},a={shape:n};return ks.runKernel("ScatterNd",o,a)}});const Oc=$s({sparseToDense_:function(e,t,n,r=0){const s=Ns(e,"sparseIndices","sparseToDense","int32"),o=Ns(t,"sparseValues","sparseToDense"),a=Ns(r,"defaultValue","sparseToDense",o.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,o,n,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},l={outputShape:n};return ks.runKernel("SparseToDense",i,l)}});const Lc=$s({gatherND_:function(e,t){const n=Ns(t,"indices","gatherND","int32"),r={params:Ns(e,"x","gatherND","string_or_numeric"),indices:n};return ks.runKernel("GatherNd",r)}});const zc=$s({dropout_:function(e,t,n,r){const s=Ns(e,"x","dropout");if(a("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),a(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof ns?s.clone():s;const o=function(e,t){if(null==t)return e.shape.slice();if(h(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,l=Wa(hl(La(Ou(o,0,1,"float32",r),i)),i);return Ka(s,l)}});function Wc(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Kc(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let o=0;o<e;++o){const a=2*Math.PI*o/(e+r-1);s[o]=t-n*Math.cos(a)}return vc(s,"float32")}const qc=async function(e,t,n=1){const r=Ns(e,"predictions","inTopK"),s=Ns(t,"targets","inTopK");a(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),a(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),i(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];a(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const l=await r.data(),u=await s.data(),[c,h]=[l.length/o,o],d=m("bool",c);for(let e=0;e<c;e++){const t=e*h,r=l.subarray(t,t+h),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort((e,t)=>t.value-e.value),d[e]=0;for(let t=0;t<n;t++)if(s[t].index===u[e]){d[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Fs(d,s.shape,"bool")};const Uc=$s({conv2DBackpropFilter_:function(e,t,n,r,s,o="NHWC",i){let l=e;3===e.rank&&(l=pi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=pi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a(4===l.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+l.shape+"."),a(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),a(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const c="NHWC"===o?l.shape[3]:l.shape[1],h="NHWC"===o?u.shape[3]:u.shape[1];a(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),a(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),null!=i&&a(d(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const p={x:l,dy:u},f={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,filterShape:n};return ks.runKernel("Conv2DBackpropFilter",p,f)}});function Gc(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ka(e,wc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Hc(e,t){let n=t;const r=Ji(e.shape,t.shape);return r.length>0&&(n=Ol(n,r)),pi(n,e.shape)}function Vc(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ku(e);if("elu"===t)return rl(e);if("relu6"===t)return qu(e);if("prelu"===t)return vu(e,n);if("leakyrelu"===t)return yl(e,r);if("sigmoid"===t)return bi(e);throw new Error(`Unknown fused activation ${t}.`)}const jc=(e,t)=>!(e>0)||"linear"===t;const Jc=$s({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(u=u||"linear",!1===jc(ks.state.gradientDepth,u)){let a=Ri(e,t,n,r,s,o,i);return null!=l&&(a=La(a,l)),Vc(a,u,c,h)}const p=Ns(e,"x","conv2d"),f=Ns(t,"filter","conv2d");let g=p,m=!1;3===p.rank&&(m=!0,g=pi(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a(4===g.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+g.rank+"."),a(4===f.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=i&&a(d(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),a(g.shape[3]===f.shape[2],()=>`Error in conv2d: depth of input (${g.shape[3]}) must match input depth for filter ${f.shape[2]}.`),a(hi(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),a("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const b=ri(g.shape,f.shape,n,o,r,i);let w,y;null!=l&&(w=Ns(l,"bias","fused conv2d"),[w]=ds(w,p),Zi(b.outShape,w.shape)),null!=c&&(y=Ns(c,"prelu weights","fused conv2d"));const k=(e,t)=>{const[s,i,l,c]=t,h=Gc(e,l,u);a(ci(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const d=[Bi(i.shape,h,s,n,r),Uc(i,h,s.shape,n,r)];if(null!=c){const e=Hc(c,h);d.push(e)}return d},v={x:g,filter:f,bias:w,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==l){return Tl((e,t,n)=>{let r=ks.runKernel("FusedConv2D",v,x);return n([t,e,r]),m&&(r=pi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}})(g,f)}return Tl((e,t,n,r)=>{let s=ks.runKernel("FusedConv2D",v,x);return r([t,e,s,n]),m&&(s=pi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}})(g,f,w)}});const Zc=$s({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,o=[1,1],a){let i=e;3===e.rank&&(i=pi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=pi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:i,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:n};return ks.runKernel("DepthwiseConv2dNativeBackpropFilter",u,c)}});const Yc=$s({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,o=[1,1],a){let i=t,l=!1;3===t.rank&&(l=!0,i=pi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:e},h=ks.runKernel("DepthwiseConv2dNativeBackpropInput",u,c);return l?pi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Xc=$s({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(!1===jc(ks.state.gradientDepth,u)){let a=Hi(e,t,n,r,s,o,i);return null!=l&&(a=La(a,l)),Vc(a,u,c,h)}const p=Ns(e,"x","depthwiseConv2d"),f=Ns(t,"filter","depthwiseConv2d");let g=p,m=!1;3===p.rank&&(m=!0,g=pi(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a(4===g.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`),a(4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),a(g.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==o&&(o=[1,1]),a(hi(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=i&&a(d(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const b=ri(g.shape,f.shape,n,o,r,i,!0);let w,y;null!=l&&(w=Ns(l,"bias","fused conv2d"),[w]=ds(w,p),Zi(b.outShape,w.shape)),null!=c&&(y=Ns(c,"prelu weights","fused depthwiseConv2d"));const k=(e,t)=>{a(ci(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[s,l,c,h]=t,d=Gc(e,c,u),p=Yc(l.shape,d,s,n,r,o,i),f=Zc(l,d,s.shape,n,r,o,i);if(null!=h){return[p,f,Hc(w,d)]}return[p,f]},v={x:g,filter:f,bias:w,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==l){return Tl((e,t,n)=>{let r=ks.runKernel("FusedDepthwiseConv2D",v,x);return n([t,e,r]),m&&(r=pi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}})(g,f)}return Tl((e,t,n,r)=>{let s=ks.runKernel("FusedDepthwiseConv2D",v,x);return r([t,e,s,n]),m&&(s=pi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}})(g,f,w)}});const Qc=$s({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:l}){if(!1===jc(ks.state.gradientDepth,o)){let a=Ro(e,t,n,r);return null!=s&&(a=La(a,s)),Vc(a,o,i,l)}let u=Ns(e,"a","fused matMul"),d=Ns(t,"b","fused matMul");[u,d]=ds(u,d);const p=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=r?d.shape[d.rank-1]:d.shape[d.rank-2],g=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=r?d.shape[d.rank-2]:d.shape[d.rank-1],b=u.shape.slice(0,-2),w=d.shape.slice(0,-2),y=c(b),k=c(w);a(u.rank>=2&&d.rank>=2&&u.rank===d.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${d.rank}.`),a(h(b,w),()=>`Error in fused matMul: outer dimensions (${b}) and (${w}) of Tensors with shapes ${u.shape} and `+d.shape+" must match."),a(p===f,()=>`Error in fused matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${n} and transposeB=${r} must match.`);const v=u.shape.slice(0,-2).concat([g,m]),x=pi(u,n?[y,p,g]:[y,g,p]),E=pi(d,r?[k,m,f]:[k,f,m]);let S,_;null!=s&&(S=Ns(s,"bias","fused matMul"),[S]=ds(S,u),Zi(v,S.shape)),null!=i&&(_=Ns(i,"prelu weights","fused matMul"));const A=(e,t)=>{const[a,i,l,u]=t,c=Gc(pi(e,l.shape),l,o);let h,d;if(n||r?!n&&r?(h=Ro(c,i,!1,!1),d=Ro(c,a,!0,!1)):n&&!r?(h=Ro(i,c,!1,!0),d=Ro(a,c,!1,!1)):(h=Ro(i,c,!0,!0),d=Ro(c,a,!0,!0)):(h=Ro(c,i,!1,!0),d=Ro(a,c,!0,!1)),null!=s){return[h,d,Hc(u,c)]}return[h,d]},N={a:x,b:E,bias:S,preluActivationWeights:_},I={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:l};if(null==s){return Tl((e,t,n)=>{const r=ks.runKernel("_FusedMatMul",N,I);return n([e,t,r]),{value:pi(r,v),gradFunc:A}})(x,E)}return Tl((e,t,n,r)=>{const s=ks.runKernel("_FusedMatMul",N,I);return r([e,t,s,n]),{value:pi(s,v),gradFunc:A}})(x,E,S)}});var eh=Object.freeze({__proto__:null,conv2d:Jc,depthwiseConv2d:Xc,matMul:Qc});const th=$s({hammingWindow_:function(e){return Kc(e,.54,.46)}});const nh=$s({hannWindow_:function(e){return Kc(e,.5,.5)}});const rh=$s({frame_:function(e,t,n,r=!1,s=0){let o=0;const a=[];for(;o+t<=e.size;)a.push(wi(e,o,t)),o+=n;if(r)for(;o<e.size;){const r=o+t-e.size,i=mi([wi(e,o,t-r),cl([r],s)]);a.push(i),o+=n}return 0===a.length?xc([],[0,t]):pi(mi(a),[a.length,t])}});const sh=$s({stft_:function(e,t,n,r,s=nh){null==r&&(r=Wc(t));const o=rh(e,t,n),a=Ka(o,s(t));return pc(a,r)}});const oh=$s({cropAndResize_:function(e,t,n,r,s="bilinear",o=0){const i=Ns(e,"image","cropAndResize"),l=Ns(t,"boxes","cropAndResize","float32"),u=Ns(n,"boxInd","cropAndResize","int32"),c=l.shape[0];a(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),a(2===l.rank&&4===l.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${l.shape}.`),a(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${l.shape}.`),a(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),a(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),a("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s);const h={image:i,boxes:l,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return ks.runKernel("CropAndResize",h,d)}});const ah=$s({flipLeftRight_:function(e){const t=Ns(e,"image","flipLeftRight","float32");a(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return ks.runKernel("FlipLeftRight",n,{})}});const ih=$s({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ns(e,"image","rotateWithOffset","float32");a(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},i={radians:t,fillValue:n,center:r};return ks.runKernel("RotateWithOffset",o,i)}});function lh(e,t,n,r,s,o){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);const i=e.shape[0];return n=Math.min(n,i),a(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),a(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),a(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),a(1===t.rank,()=>"scores must be a 1D tensor"),a(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),a(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}const uh=$s({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=Ns(e,"boxes","nonMaxSuppression"),a=Ns(t,"scores","nonMaxSuppression"),i=lh(o,a,n,r,s),l={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return ks.runKernel("NonMaxSuppressionV3",{boxes:o,scores:a},l)}});function ch(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}(e,t,n||hh)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function hh(e,t){return e>t?1:e<t?-1:0}function dh(e,t,n,r,s){return gh(e,t,n,r,s,0)}function ph(e,t,n,r,s,o){return gh(e,t,n,r,s,0,!1,o,!0)}function fh(e,t,n,r,s,o){return gh(e,t,n,r,s,o,!0)}function gh(e,t,n,r,s,o,a=!1,i=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(wh);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:o,suppressBeginIndex:a}=t;if(n<s)break;let i=!1;for(let n=h.length-1;n>=a;--n){const a=mh(e,o,h[n]);if(a>=r){i=!0;break}if(t.score=t.score*bh(r,c,a),t.score<=s)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(o),d.push(t.score)):t.score>s&&ch(u,t,wh))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function mh(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(o,u),m=Math.max(a,c),b=Math.min(i,h),w=Math.min(l,d),y=Math.max(b-g,0)*Math.max(w-m,0);return y/(p+f-y)}function bh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function wh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const yh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=Ns(e,"boxes","nonMaxSuppressionAsync"),a=Ns(t,"scores","nonMaxSuppressionAsync"),i=lh(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const l=await Promise.all([o.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=dh(u,c,n,r,s);return o!==e&&o.dispose(),a!==t&&a.dispose(),vc(h,"int32")};const kh=$s({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=Ns(e,"boxes","nonMaxSuppression"),i=Ns(t,"scores","nonMaxSuppression"),l=lh(a,i,n,r,s,o),u={boxes:a,scores:i},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:o=l.softNmsSigma},h=ks.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const vh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=Ns(e,"boxes","nonMaxSuppressionAsync"),i=Ns(t,"scores","nonMaxSuppressionAsync"),l=lh(a,i,n,r,s,o);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([a.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=fh(c,h,n,r,s,o);return a!==e&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:vc(d,"int32"),selectedScores:vc(p)}};const xh=$s({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=Ns(e,"boxes","nonMaxSuppression"),i=Ns(t,"scores","nonMaxSuppression"),l=lh(a,i,n,r,s,null),u={boxes:a,scores:i},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:o},h=ks.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Eh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=Ns(e,"boxes","nonMaxSuppressionAsync"),i=Ns(t,"scores","nonMaxSuppressionAsync"),l=lh(a,i,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:g}=ph(d,p,u,c,h,o);return a!==e&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:vc(f,"int32"),validOutputs:Yu(g,"int32")}};const Sh=$s({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ns(e,"images","resizeBilinear");a(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),a(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),a(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;3===s.rank&&(i=!0,o=pi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=ks.runKernel("ResizeBilinear",l,u);return i?pi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const _h=$s({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ns(e,"images","resizeNearestNeighbor");a(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),a(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),a("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),a(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;3===s.rank&&(i=!0,o=pi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=ks.runKernel("ResizeNearestNeighbor",l,u);return i?pi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ah=$s({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ns(e,"image","threshold"),o=s.shape[0]*s.shape[1];let i,l,u,c,h=Ka(vc([r]),255);if(a(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),a(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),a("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),a("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===s.shape[2]){[i,l,u]=dc(s,[1,1,1],-1);const e=Ka(i,.2989),t=Ka(l,.587),n=Ka(u,.114);c=La(La(e,t),n)}else c=e;if("otsu"===t){h=function(e,t){let n,r,s,o,a,i,l=vc([-1]),u=vc([0]),c=vc([0]);for(let h=0;h<e.size-1;h++){n=wi(e,0,h+1),r=wi(e,h+1),a=Wa(Ol(n),t),i=Wa(Ol(r),t);const d=Ol(Ka(n,Lu(0,n.size)));s=Wa(d,Ol(n));const p=cl(r.shape,n.size),f=La(Lu(0,r.size),p),g=Ka(r,f);o=Wa(Ol(g),Ol(r));const m=Pl(s,o),b=Pl(s,o),w=Ka(a,i);c=Ka(Ka(w,m),b);const y=pl(c,u);u=Xi(y,c,u),l=Xi(y,vc([h]),l)}return l}(Ai(wo(Ju(c),"int32"),Fs([]),256),o)}const d=n?vl(c,h):pl(c,h);return wo(Ka(d,255),"int32")}});const Nh=$s({transform_:function(e,t,n="nearest",r="constant",s=0,o){const i=Ns(e,"image","transform","float32"),l=Ns(t,"transforms","transform","float32");a(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),a(2===l.rank&&(l.shape[0]===i.shape[0]||1===l.shape[0])&&8===l.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),a(null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:i,transforms:l},c={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return ks.runKernel("Transform",u,c)}});const Ih=$s({bandPart_:function(e,t,n){a(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),a(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Ns(e,"a","bandPart");a(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,i]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=o),n<0&&(n=i);const l=pi(Lu(0,o,1,"int32"),[-1,1]),u=Lu(0,i,1,"int32"),c=Pl(l,u),h=Ul(vl(c,Yu(+t,"int32")),fl(c,Yu(-n,"int32"))),d=Ql([o,i],r.dtype);return pi(bc($c(pi(r,[-1,o,i])).map(e=>Xi(h,e,d))),s)}});const Mh=$s({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,a(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)a(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=dc(e,e.shape[0],0).map(e=>mc(e,[0]));a(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ks.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ka(Ol(Ka(n[r],e)),n[r]);e=Pl(e,t)}return Wa(e,Cc(e,"euclidean"))}));return t?bc(n,0):n}});function $h(e,t=!1){return ks.tidy(()=>{a(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=ul(n),o=yo(e);const i=xc([[1]],[1,1]);let l=yo(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=o,a=l,u=s;[l,o,s]=ks.tidy(()=>{const t=wi(o,[e,e],[n-e,1]),a=Cc(t),u=wi(o,[e,e],[1,1]),c=Xi(pl(u,0),xc([[-1]]),xc([[1]])),h=Pl(u,Ka(c,a)),d=Wa(t,h);l=1===d.shape[0]?yo(i):mi([i,wi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Fl(Wa(Ro(c,h),a)),f=wi(o,[e,0],[n-e,r]),g=Ka(p,l),m=Bo(l);if(0===e)o=Pl(f,Ro(g,Ro(m,f)));else{const t=Pl(f,Ro(g,Ro(m,f)));o=mi([wi(o,[0,0],[e,r]),t],0)}const b=Bo(g),w=wi(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Pl(w,Ro(Ro(w,l),b));else{const t=Pl(w,Ro(Ro(w,l),b));s=mi([wi(s,[0,0],[n,e]),t],1)}return[l,o,s]}),Na([t,a,u])}return!t&&n>r&&(s=wi(s,[0,0],[n,r]),o=wi(o,[0,0],[r,r])),[s,o]})}const Th=$s({qr_:function(e,t=!1){if(a(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return $h(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=$c(pi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],o=[];r.forEach(e=>{const[n,r]=$h(e,t);s.push(n),o.push(r)});return[pi(bc(s,0),e.shape),pi(bc(o,0),e.shape)]}}});var Dh;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Dh||(Dh={}));const Fh=$s({computeWeightedLoss_:function(e,t,n=Dh.SUM_BY_NONZERO_WEIGHTS){const r=Ns(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Ns(t,"weights","computeWeightedLoss"));const o=null==s?r:Ka(r,s);if(n===Dh.NONE)return o;if(n===Dh.SUM)return Ol(o);if(n===Dh.MEAN){if(null==s)return Xl(o);{const e=r.size/s.size,t=Wa(Ol(o),Ol(s));return e>1?Wa(t,Yu(e)):t}}if(n===Dh.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Wa(Ol(o),Yu(r.size));{const e=Ka(s,eu(r.shape)),t=wo(Ol(cu(e,Yu(0))),"float32");return Wa(Ol(o),t)}}throw Error("Unknown reduction: "+n)}});const Rh=$s({absoluteDifference_:function(e,t,n,r=Dh.SUM_BY_NONZERO_WEIGHTS){const s=Ns(e,"labels","absoluteDifference"),o=Ns(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=Ns(n,"weights","absoluteDifference")),i(s.shape,o.shape,"Error in absoluteDifference: ");const l=qa(Pl(s,o));return Fh(l,a,r)}});const Ch=$s({cosineDistance_:function(e,t,n,r,s=Dh.SUM_BY_NONZERO_WEIGHTS){const o=Ns(e,"labels","cosineDistance"),a=Ns(t,"predictions","cosineDistance");let l=null;null!=r&&(l=Ns(r,"weights","cosineDistance")),i(o.shape,a.shape,"Error in cosineDistance: ");const u=Yu(1),c=Pl(u,Ol(Ka(o,a),n,!0));return Fh(c,l,s)}});const Bh=$s({hingeLoss_:function(e,t,n,r=Dh.SUM_BY_NONZERO_WEIGHTS){let s=Ns(e,"labels","hingeLoss");const o=Ns(t,"predictions","hingeLoss");let a=null;null!=n&&(a=Ns(n,"weights","hingeLoss")),i(s.shape,o.shape,"Error in hingeLoss: ");const l=Yu(1);s=Pl(Ka(Yu(2),s),l);const u=Ku(Pl(l,Ka(s,o)));return Fh(u,a,r)}});const Ph=$s({huberLoss_:function(e,t,n,r=1,s=Dh.SUM_BY_NONZERO_WEIGHTS){const o=Ns(e,"labels","huberLoss"),a=Ns(t,"predictions","huberLoss");let l=null;null!=n&&(l=Ns(n,"weights","huberLoss")),i(o.shape,a.shape,"Error in huberLoss: ");const u=Yu(r),c=qa(Pl(a,o)),h=ru(c,u),d=Pl(c,h),p=La(Ka(Yu(.5),au(h)),Ka(u,d));return Fh(p,l,s)}});const Oh=$s({logLoss_:function(e,t,n,r=1e-7,s=Dh.SUM_BY_NONZERO_WEIGHTS){const o=Ns(e,"labels","logLoss"),a=Ns(t,"predictions","logLoss");let l=null;null!=n&&(l=Ns(n,"weights","logLoss")),i(o.shape,a.shape,"Error in logLoss: ");const u=Yu(1),c=Yu(r),h=Fl(Ka(o,Sl(La(a,c)))),d=Ka(Pl(u,o),Sl(La(Pl(u,a),c))),p=Pl(h,d);return Fh(p,l,s)}});const Lh=$s({meanSquaredError_:function(e,t,n,r=Dh.SUM_BY_NONZERO_WEIGHTS){const s=Ns(e,"labels","meanSquaredError"),o=Ns(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=Ns(n,"weights","meanSquaredError")),i(s.shape,o.shape,"Error in meanSquaredError: ");const l=gc(s,o);return Fh(l,a,r)}});const zh=$s({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Dh.SUM_BY_NONZERO_WEIGHTS){let o=Ns(e,"multiClassLabels","sigmoidCrossEntropy");const a=Ns(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=Ns(n,"weights","sigmoidCrossEntropy")),i(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Yu(r),t=Yu(1),n=Yu(.5);o=La(Ka(o,Pl(t,e)),Ka(n,e))}const u=function(e,t){const n=Ns(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ns(t,"logits","sigmoidCrossEntropyWithLogits");i(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ku(r),o=Ka(r,n),a=_l(ol(Fl(qa(r))));return La(Pl(s,o),a)}(o,a);return Fh(u,l,s)}});const Wh=$s({softmaxCrossEntropy_:function(e,t,n,r=0,s=Dh.SUM_BY_NONZERO_WEIGHTS){let o=Ns(e,"onehotLabels","softmaxCrossEntropy");const a=Ns(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=Ns(n,"weights","softmaxCrossEntropy")),i(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Yu(r),t=Yu(1),n=Yu(o.shape[1]);o=La(Ka(o,Pl(t,e)),Wa(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return Tl((e,t,r)=>{const s=ql(t,[n],!0),o=Pl(wo(t,"float32"),s);r([e,o]);const a=Fl(Ka(o,e));return{value:Ol(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,o=Kl(e.shape,[n]);return[Ka(pi(e,o),Pl(wo(r,"float32"),ol(s))),Ka(pi(e,o),Pl(ol(s),wo(r,"float32")))]}}})(e,t)}(o,a);return Fh(u,l,s)}});const Kh=$s({sparseFillEmptyRows_:function(e,t,n,r){const s=Ns(e,"indices","sparseFillEmptyRows"),o=Ns(t,"values","sparseFillEmptyRows"),a=Ns(n,"denseShape","sparseFillEmptyRows"),i=Ns(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==s.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+s.shape);if(1!==o.rank)throw new Error("Values should be Tensor1D but received shape "+o.shape);if(1!==a.rank)throw new Error("Dense shape should be Tensor1D but received shape "+a.shape);if(0!==i.rank)throw new Error("Default value should be a scalar but received shape "+i.shape);const l={indices:s,values:o,denseShape:a,defaultValue:i},u=ks.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const qh=$s({sparseReshape_:function(e,t,n){const r=Ns(e,"inputIndices","sparseReshape"),s=Ns(t,"inputShape","sparseReshape"),o=Ns(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==s.rank)throw new Error("Input shape should be Tensor1D but received shape "+s.shape);if(1!==o.rank)throw new Error("New shape should be Tensor1D but received shape "+o.shape);const a={inputIndices:r,inputShape:s,newShape:o},i=ks.runKernel("SparseReshape",a);return{outputIndices:i[0],outputShape:i[1]}}});const Uh=$s({sparseSegmentMean_:function(e,t,n){const r=Ns(e,"data","sparseSegmentMean"),s=Ns(t,"indices","sparseSegmentMean"),o=Ns(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+s.shape);if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+o.shape);const a={data:r,indices:s,segmentIds:o};return ks.runKernel("SparseSegmentMean",a)}});const Gh=$s({sparseSegmentSum_:function(e,t,n){const r=Ns(e,"data","sparseSegmentSum"),s=Ns(t,"indices","sparseSegmentSum"),o=Ns(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+s.shape);if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+o.shape);const a={data:r,indices:s,segmentIds:o};return ks.runKernel("SparseSegmentSum",a)}});const Hh=$s({stringNGrams_:function(e,t,n,r,s,o,a,i){const l=Ns(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error("Data must be a vector, saw: "+l.shape);const u=Ns(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:l,dataSplits:u},d=ks.runKernel("StringNGrams",h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});const Vh=$s({stringSplit_:function(e,t,n=!0){const r=Ns(e,"input","stringSplit","string"),s=Ns(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==s.rank)throw new Error("Delimiter should be a scalar but received shape "+s.shape);const o={skipEmpty:n},a={input:r,delimiter:s},i=ks.runKernel("StringSplit",a,o);return{indices:i[0],values:i[1],shape:i[2]}}});const jh=$s({stringToHashBucketFast_:function(e,t){const n=Ns(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ks.runKernel("StringToHashBucketFast",s,r)}}),Jh={fft:uc,ifft:cc,rfft:pc,irfft:hc},Zh={hammingWindow:th,hannWindow:nh,frame:rh,stft:sh},Yh={flipLeftRight:ah,resizeNearestNeighbor:_h,resizeBilinear:Sh,rotateWithOffset:ih,cropAndResize:oh,nonMaxSuppression:uh,nonMaxSuppressionAsync:yh,nonMaxSuppressionWithScore:kh,nonMaxSuppressionWithScoreAsync:vh,nonMaxSuppressionPadded:xh,nonMaxSuppressionPaddedAsync:Eh,threshold:Ah,transform:Nh},Xh={bandPart:Ih,gramSchmidt:Mh,qr:Th},Qh={absoluteDifference:Rh,computeWeightedLoss:Fh,cosineDistance:Ch,hingeLoss:Bh,huberLoss:Ph,logLoss:Oh,meanSquaredError:Lh,sigmoidCrossEntropy:zh,softmaxCrossEntropy:Wh},ed={sparseFillEmptyRows:Kh,sparseReshape:qh,sparseSegmentMean:Uh,sparseSegmentSum:Gh},td={stringNGrams:Hh,stringSplit:Vh,stringToHashBucketFast:jh};class nd extends ua{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return Na(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return $l(e,t)}dispose(){null!=this.iterations_&&Na(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Yu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(nd,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class rd extends nd{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ks.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ks.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Aa(()=>Qi(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Aa(()=>Qi(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Aa(()=>{const e=La(Ka(o,this.rho),Ka(au(s),1-this.rho)),t=Ka(Wa(fc(La(a,this.epsilon)),fc(La(o,this.epsilon))),s),n=La(Ka(a,this.rho),Ka(au(t),1-this.rho));o.assign(e),a.assign(n);const i=La(Ka(t,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Na(this.accumulatedGrads.map(e=>e.variable)),Na(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}rd.className="Adadelta",ha(rd);class sd extends nd{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ks.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Aa(()=>cl(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable;Aa(()=>{const e=La(o,au(s));o.assign(e);const t=La(Ka(Wa(s,fc(La(e,ks.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Na(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}sd.className="Adagrad",ha(sd);class od extends nd{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Aa(()=>{this.accBeta1=Yu(t).variable(),this.accBeta2=Yu(n).variable()}),null==r&&(this.epsilon=ks.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Aa(()=>{const n=Pl(1,this.accBeta1),r=Pl(1,this.accBeta2);t.forEach((t,s)=>{const o=ks.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:Aa(()=>Qi(o).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:t+"/v",variable:Aa(()=>Qi(o).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=La(Ka(i,this.beta1),Ka(a,1-this.beta1)),c=La(Ka(l,this.beta2),Ka(au(a),1-this.beta2)),h=Wa(u,n),d=Wa(c,r);i.assign(u),l.assign(c);const p=La(Ka(Wa(h,La(fc(d),this.epsilon)),-this.learningRate),o);o.assign(p)}),this.accBeta1.assign(Ka(this.accBeta1,this.beta1)),this.accBeta2.assign(Ka(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Na(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Na(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Aa(()=>{this.accBeta1.assign(ku(this.beta1,this.iterations_+1)),this.accBeta2.assign(ku(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}od.className="Adam",ha(od);class ad extends nd{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Aa(()=>{this.iteration=Yu(0).variable(),this.accBeta1=Yu(t).variable()}),null==r&&(this.epsilon=ks.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Aa(()=>{const n=Pl(1,this.accBeta1),r=Wa(-this.learningRate,La(Ka(this.iteration,this.decay),1));t.forEach((t,s)=>{const o=ks.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:Qi(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:t+"/v",variable:Qi(o).variable(!1)});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=La(Ka(i,this.beta1),Ka(a,1-this.beta1)),c=Ka(l,this.beta2),h=qa(a),d=Yl(c,h);i.assign(u),l.assign(d);const p=La(Ka(Wa(r,n),Wa(u,La(d,this.epsilon))),o);o.assign(p)}),this.iteration.assign(La(this.iteration,1)),this.accBeta1.assign(Ka(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Na(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Na(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ad.className="Adamax",ha(ad);class id extends nd{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ks.registeredVariables[t];Aa(()=>{const e=La(Ka(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ia(Yu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}id.className="SGD",ha(id);class ld extends id{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Yu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ks.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Aa(()=>Qi(r).variable(e))}}const s=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&Aa(()=>{let e;const t=La(Ka(this.m,s),o);e=this.useNesterov?La(Ka(this.c,La(o,Ka(t,this.m))),r):La(Ka(this.c,t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Na(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}ld.className="Momentum",ha(ld);class ud extends nd{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ks.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ks.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Aa(()=>Qi(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Aa(()=>Qi(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Aa(()=>Qi(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;Aa(()=>{const e=La(Ka(o,this.decay),Ka(au(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=La(Ka(t,this.decay),Ka(s,1-this.decay)),l=Wa(Ka(s,this.learningRate),fc(Pl(e,La(au(i),this.epsilon)))),u=La(Ka(a,this.momentum),l);o.assign(e),t.assign(i),a.assign(u);const c=Pl(r,u);r.assign(c)}else{const e=La(Ka(o,this.decay),Ka(au(s),1-this.decay)),t=La(Ka(a,this.momentum),Wa(Ka(s,this.learningRate),fc(La(e,this.epsilon))));o.assign(e),a.assign(t);const n=Pl(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Na(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Na(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Na(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}ud.className="RMSProp",ha(ud);class cd{static sgd(e){return new id(e)}static momentum(e,t,n=!1){return new ld(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new ud(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new od(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new rd(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ad(e,t,n,r,s)}static adagrad(e,t=.1){return new sd(e,t)}}const hd={sgd:cd.sgd,momentum:cd.momentum,adadelta:cd.adadelta,adagrad:cd.adagrad,rmsprop:cd.rmsprop,adamax:cd.adamax,adam:cd.adam},dd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function pd(){return new Promise(e=>dd(()=>e()))}const fd=/->/g;function gd(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}var md=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:function(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=I(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=I(e,n+1);return n},computeOutShape:function(e,t,n){const r=[],s=e.length;for(let o=0;o<s;o++)o!==t?r.push(e[o]):r.push(n);return r},collectGatherOpShapeInfo:function(e,t,n,r){const s=t.shape.length,o=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],i=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<o;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}});var bd=Object.freeze({__proto__:null,slice_util:la,segment_util:md,fromUint8ToStringArray:function(e){try{return e.map(e=>Ur(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}},fromStringArrayToUint8:function(e){return e.map(e=>qr(e))},upcastType:cs,axesAreInnerMostDims:zl,combineLocations:Wl,computeOutAndReduceShapes:function(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]},expandShapeToKeepDim:Kl,assertAxesAreInnerMostDims:function(e,t,n){a(zl(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)},getAxesPermutation:function(e,t){if(zl(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n},getUndoAxesPermutation:function(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])},getInnerMostAxes:function(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n},getBroadcastDims:function(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=e[o]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(o)}return r},getReductionAxes:Ji,assertAndGetBroadcastShape:Zi,assertParamsConsistent:function(e,t){const n=e[0].length;e.forEach((e,t)=>{a(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),a(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let o=0;o<n;o++)a(o===t||e[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})},computeOutShape:function(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n},computeDilation2DInfo:function(e,t,n,r,s="NHWC",o){return ri(e,[...t,e[3]],n,o,r,null,null,di(s))},computePool2DInfo:ni,computePool3DInfo:function(e,t,n,r,s,o,a="NDHWC"){const[i,l,u]=ii(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[i,l,u,e[1],e[1]]}return si(e,c,n,r,s,!1,h,o)},computeConv2DInfo:ri,computeConv3DInfo:si,computeDefaultPad:oi,tupleValuesAreOne:ci,eitherStridesOrDilationsAreOne:hi,convertConv2DDataFormat:di,getFusedDyActivation:Gc,getFusedBiasGradient:Hc,applyActivation:Vc,shouldFuse:jc,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:function(e){return e<=30?e:I(e,Math.floor(Math.sqrt(e)))},getImageCenter:function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]},getReshaped:function(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s},getPermuted:function(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r},getReshapedPermuted:function(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s},getSliceBeginCoords:function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n},getSliceSize:function(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r},prepareAndValidate:Go,validateUpdateShape:Vo,validateInput:jo,calculateShapes:Jo,SELU_SCALEALPHA:1.7580993408473768,SELU_SCALE:1.0507009873554805,ERF_P:.3275911,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,warn:function(...e){P().getBool("IS_TEST")||console.warn(...e)},log:function(...e){P().getBool("IS_TEST")||console.log(...e)},mergeRealAndImagArrays:function(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n},splitRealAndImagArrays:function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}},complexWithEvenIndex:function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},complexWithOddIndex:function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},getComplexWithIndex:function(e,t){return{real:e[2*t],imag:e[2*t+1]}},assignToTypedArray:function(e,t,n,r){e[2*r]=t,e[2*r+1]=n},exponents:function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const o=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}},exponent:function(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}},decodeEinsumEquation:function(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(fd,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");a(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const o=r.split(","),i=o.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let e=0;e<s.length;++e){const t=s[e];if(!o.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===l.indexOf(t)&&l.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===l.indexOf(t)&&","!==t&&l.push(t)}const u=new Array(o.length);for(let e=0;e<i;++e){if(new Set(o[e].split("")).size!==o[e].length)throw new Error(`Found duplicate axes in input component ${o[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<o[e].length;++t)u[e].push(l.indexOf(o[e][t]))}const c=l.length,h=[];for(let e=s.length;e<c;++e)h.push(e);return{allDims:l,summedDims:h,idDims:u}},getEinsumPermutation:function(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}},checkEinsumDimSizes:function(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:a(r[t[e][n]]===s[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension `+s[n])}},getEinsumComputePath:function(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const o=[];for(let e=0;e<n.length;++e){const s=gd(t,n[e]);for(const t of s)-1===o.indexOf(t)&&(r[e].push(t),o.push(t))}return{path:n,steps:r}},isIdentityPermutation:function(e){return e.every((e,t)=>e===t)},prepareSplitSize:function(e,t,n=0){let r=[];if("number"==typeof t)a(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{a(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}a(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}}),wd=Object.freeze({__proto__:null,nonMaxSuppressionV3Impl:dh,nonMaxSuppressionV4Impl:ph,nonMaxSuppressionV5Impl:fh,whereImpl:Dc});export{K as Abs,q as Acos,U as Acosh,rd as AdadeltaOptimizer,sd as AdagradOptimizer,od as AdamOptimizer,ad as AdamaxOptimizer,G as Add,H as AddN,V as All,j as Any,J as ArgMax,Z as ArgMin,Y as Asin,X as Asinh,Q as Atan,te as Atan2,ee as Atanh,ne as AvgPool,se as AvgPool3D,oe as AvgPool3DGrad,re as AvgPoolGrad,ae as BatchMatMul,ie as BatchToSpaceND,le as Bincount,ue as BroadcastTo,ce as Cast,he as Ceil,de as ClipByValue,pe as Complex,fe as ComplexAbs,ge as Concat,me as Conv2D,be as Conv2DBackpropFilter,we as Conv2DBackpropInput,ye as Conv3D,ke as Conv3DBackpropFilterV2,ve as Conv3DBackpropInputV2,xe as Cos,Ee as Cosh,_e as CropAndResize,Se as Cumsum,e as DataStorage,Ae as DenseBincount,Ne as DepthToSpace,Ie as DepthwiseConv2dNative,Me as DepthwiseConv2dNativeBackpropFilter,$e as DepthwiseConv2dNativeBackpropInput,Te as Diag,De as Dilation2D,Re as Dilation2DBackpropFilter,Fe as Dilation2DBackpropInput,L as ENV,Be as Einsum,Pe as Elu,Oe as EluGrad,C as Environment,ze as Equal,Le as Erf,We as Exp,Ke as ExpandDims,qe as Expm1,Ue as FFT,Ge as Fill,He as FlipLeftRight,Ve as Floor,je as FloorDiv,Kn as FromPixels,Je as FusedBatchNorm,Gn as FusedConv2D,Hn as FusedDepthwiseConv2D,Ye as GatherNd,Ze as GatherV2,Xe as Greater,Qe as GreaterEqual,tt as IFFT,et as Identity,nt as Imag,rt as IsFinite,st as IsInf,ot as IsNan,t as KernelBackend,mt as LRN,bt as LRNGrad,at as LeakyRelu,it as Less,lt as LessEqual,ut as LinSpace,ct as Log,ht as Log1p,gt as LogSoftmax,dt as LogicalAnd,pt as LogicalNot,ft as LogicalOr,wt as Max,kt as MaxPool,xt as MaxPool3D,Et as MaxPool3DGrad,vt as MaxPoolGrad,St as MaxPoolWithArgmax,yt as Maximum,_t as Mean,At as Min,Nt as Minimum,It as MirrorPad,Mt as Mod,ld as MomentumOptimizer,$t as Multinomial,Tt as Multiply,Dt as Neg,Rt as NonMaxSuppressionV3,Ct as NonMaxSuppressionV4,Bt as NonMaxSuppressionV5,Ft as NotEqual,Ms as OP_SCOPE_SUFFIX,Ot as OneHot,Pt as OnesLike,nd as Optimizer,Lt as Pack,zt as PadV2,Wt as Pool,Kt as Pow,qt as Prelu,Ut as Prod,ud as RMSPropOptimizer,Gt as Range,ss as Rank,Ht as Real,Ce as RealDiv,Vt as Reciprocal,Dh as Reduction,jt as Relu,en as Relu6,Jt as Reshape,Xt as ResizeBilinear,Qt as ResizeBilinearGrad,Zt as ResizeNearestNeighbor,Yt as ResizeNearestNeighborGrad,tn as Reverse,qn as RotateWithOffset,nn as Round,rn as Rsqrt,id as SGDOptimizer,sn as ScatterNd,on as Select,an as Selu,dn as Sigmoid,hn as Sign,un as Sin,cn as Sinh,ln as Slice,wn as Softmax,pn as Softplus,mn as SpaceToBatchND,yn as SparseFillEmptyRows,kn as SparseReshape,vn as SparseSegmentMean,xn as SparseSegmentSum,En as SparseToDense,bn as SplitV,fn as Sqrt,_n as Square,Sn as SquaredDifference,Wn as Step,An as StridedSlice,Nn as StringNGrams,In as StringSplit,Mn as StringToHashBucketFast,$n as Sub,gn as Sum,Tn as Tan,Dn as Tanh,ns as Tensor,Qr as TensorBuffer,Fn as Tile,Rn as TopK,Cn as Transform,Bn as Transpose,Pn as Unique,On as Unpack,Ln as UnsortedSegmentSum,rs as Variable,zn as ZerosLike,Un as _FusedMatMul,qa as abs,Ua as acos,Ga as acosh,La as add,Ha as addN,Va as all,ja as any,Ja as argMax,Za as argMin,Ya as asin,Xa as asinh,Qa as atan,ei as atan2,ti as atanh,fi as avgPool,gi as avgPool3d,Pa as backend,bd as backend_util,ki as basicLSTMCell,xi as batchNorm,Ei as batchNorm2d,Si as batchNorm3d,_i as batchNorm4d,vi as batchToSpaceND,Ai as bincount,Rc as booleanMaskAsync,Ni as broadcastTo,Uo as browser,bo as buffer,wo as cast,Ii as ceil,Mi as clipByValue,yo as clone,Ts as complex,mi as concat,$i as concat1d,Ti as concat2d,Di as concat3d,Fi as concat4d,Ci as conv1d,Ri as conv2d,Pi as conv2dTranspose,Oi as conv3d,zi as conv3dTranspose,nr as copyRegisteredKernels,Wi as cos,Ki as cosh,Kc as cosineWindow,qi as cumsum,Tl as customGrad,Ui as denseBincount,va as deprecationWarn,Gi as depthToSpace,Hi as depthwiseConv2d,Es as device_util,Vi as diag,ji as dilation2d,ka as disableDeprecationWarnings,Na as dispose,xa as disposeVariables,Wa as div,el as divNoNan,tl as dot,zc as dropout,nl as einsum,rl as elu,ya as enableDebugMode,wa as enableProdMode,Wc as enclosingPowerOfTwo,Ea as engine,P as env,Yi as equal,sl as erf,ol as exp,al as expandDims,il as expm1,ul as eye,uc as fft,cl as fill,Ra as findBackend,Ca as findBackendFactory,hl as floor,za as floorDiv,eh as fused,dl as gather,Lc as gatherND,Ho as gather_util,Da as getBackend,Zn as getGradient,Jn as getKernel,Yn as getKernelsForBackend,Al as grad,Nl as grads,pl as greater,fl as greaterEqual,cc as ifft,gl as imag,Yh as image,qc as inTopKAsync,Fo as io,hc as irfft,ml as isFinite,bl as isInf,wl as isNaN,Ia as keep,wd as kernel_impls,yl as leakyRelu,kl as less,vl as lessEqual,Xh as linalg,xl as linspace,El as localResponseNormalization,Sl as log,_l as log1p,Cl as logSigmoid,Ll as logSoftmax,ql as logSumExp,Ul as logicalAnd,Gl as logicalNot,Hl as logicalOr,Vl as logicalXor,Qh as losses,Ro as matMul,Oo as math,Bl as max,jl as maxPool,Jl as maxPool3d,Zl as maxPoolWithArgmax,Yl as maximum,Xl as mean,Sa as memory,tu as meshgrid,nu as min,ru as minimum,su as mirrorPad,ou as mod,iu as moments,Bc as movingAverage,Ka as mul,lu as multiRNNCell,uu as multinomial,Fl as neg,pd as nextFrame,Cc as norm,cu as notEqual,Co as oneHot,eu as ones,hu as onesLike,$s as op,du as outerProduct,pu as pad,fu as pad1d,gu as pad2d,mu as pad3d,bu as pad4d,yu as pool,ku as pow,vu as prelu,ko as print,xu as prod,_a as profile,Eu as rand,Bu as randomGamma,Pu as randomNormal,Ou as randomUniform,Lu as range,Ta as ready,zu as real,Wu as reciprocal,Ba as registerBackend,Qn as registerGradient,Xn as registerKernel,Ku as relu,qu as relu6,Fa as removeBackend,pi as reshape,Uu as reverse,Gu as reverse1d,Hu as reverse2d,Vu as reverse3d,ju as reverse4d,pc as rfft,Ju as round,Zu as rsqrt,Yu as scalar,Pc as scatterND,Zo as scatter_util,Xu as selu,Qu as separableConv2d,da as serialization,$a as setBackend,Oa as setPlatform,ec as setdiff1dAsync,bi as sigmoid,tc as sign,Zh as signal,nc as sin,rc as sinh,wi as slice,sc as slice1d,oc as slice2d,ac as slice3d,ic as slice4d,la as slice_util,lc as softmax,Rl as softplus,wu as spaceToBatchND,ed as sparse,Oc as sparseToDense,Jh as spectral,dc as split,fc as sqrt,au as square,gc as squaredDifference,mc as squeeze,bc as stack,wc as step,yc as stridedSlice,td as string,Pl as sub,Ol as sum,hs as sumOutType,kc as tan,yi as tanh,Fs as tensor,vc as tensor1d,xc as tensor2d,Lo as tensor3d,Ec as tensor4d,Sc as tensor5d,_c as tensor6d,gs as tensor_util,ma as test_util,Aa as tidy,ll as tile,Ma as time,Ac as topk,hd as train,Bo as transpose,Nc as truncatedNormal,Ic as unique,tr as unregisterGradient,er as unregisterKernel,Mc as unsortedSegmentSum,$c as unstack,cs as upcastType,Gr as util,Il as valueAndGrad,Ml as valueAndGrads,Tc as variable,$l as variableGrads,ba as version_core,Xi as where,Fc as whereAsync,Ql as zeros,Qi as zerosLike};
//# sourceMappingURL=tf-core.fesm.min.js.map
